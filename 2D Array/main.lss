
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000345e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000010e  00800060  0000345e  000034f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003b  0080016e  0080016e  00003600  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00003600  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000005d5  00000000  00000000  00003620  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000012b9  00000000  00000000  00003bf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000369  00000000  00000000  00004eae  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001807  00000000  00000000  00005217  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000310  00000000  00000000  00006a20  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000568  00000000  00000000  00006d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000069e  00000000  00000000  00007298  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000090  00000000  00000000  00007936  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e5       	ldi	r30, 0x5E	; 94
      68:	f4 e3       	ldi	r31, 0x34	; 52
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	ae 36       	cpi	r26, 0x6E	; 110
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	ae e6       	ldi	r26, 0x6E	; 110
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a9 3a       	cpi	r26, 0xA9	; 169
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 37 04 	call	0x86e	; 0x86e <main>
      8a:	0c 94 2d 1a 	jmp	0x345a	; 0x345a <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <port_init>:
unsigned char sensorbyte=0;

//PORT INITIALIZE
void port_init(void)
{
 PORTA = 0xFF;
      92:	8f ef       	ldi	r24, 0xFF	; 255
      94:	8b bb       	out	0x1b, r24	; 27
 DDRA  = 0x00;
      96:	1a ba       	out	0x1a, r1	; 26
 PORTB = 0xFF;  
      98:	88 bb       	out	0x18, r24	; 24
 DDRB  = 0x00;
      9a:	17 ba       	out	0x17, r1	; 23
 PORTC = 0x00; //m103 output only
      9c:	15 ba       	out	0x15, r1	; 21
 DDRC  = 0xFF;
      9e:	84 bb       	out	0x14, r24	; 20
 PORTD = 0xFF;
      a0:	82 bb       	out	0x12, r24	; 18
 DDRD  = 0x00;
      a2:	11 ba       	out	0x11, r1	; 17
}
      a4:	08 95       	ret

000000a6 <pwm1_init>:

//PWM1 INITIALIZE
void pwm1_init(void)
{

 PWM1A_DIR=1;
      a6:	8c 9a       	sbi	0x11, 4	; 17
 PWM1B_DIR=1;
      a8:	8d 9a       	sbi	0x11, 5	; 17
 TCCR1B = 0x00; //stop
      aa:	1e bc       	out	0x2e, r1	; 46
 TCNT1H = 0x00; //setup
      ac:	1d bc       	out	0x2d, r1	; 45
 TCNT1L = 0x00;
      ae:	1c bc       	out	0x2c, r1	; 44
 OCR1AH = 0x00;
      b0:	1b bc       	out	0x2b, r1	; 43
 OCR1AL = 0x00;
      b2:	1a bc       	out	0x2a, r1	; 42
 OCR1BH = 0x00;
      b4:	19 bc       	out	0x29, r1	; 41
 OCR1BL = 0x00;
      b6:	18 bc       	out	0x28, r1	; 40
 ICR1H  = 0x01;
      b8:	81 e0       	ldi	r24, 0x01	; 1
      ba:	87 bd       	out	0x27, r24	; 39
 ICR1L  = 0x8F;
      bc:	8f e8       	ldi	r24, 0x8F	; 143
      be:	86 bd       	out	0x26, r24	; 38
 TCCR1A = 0xA2;
      c0:	82 ea       	ldi	r24, 0xA2	; 162
      c2:	8f bd       	out	0x2f, r24	; 47
 TCCR1B = 0x19; //start Timer
      c4:	89 e1       	ldi	r24, 0x19	; 25
      c6:	8e bd       	out	0x2e, r24	; 46
}
      c8:	08 95       	ret

000000ca <adc_init>:

//ADC INITIALIZE
void adc_init(void)
{
 ADC_DIR=0X00;
      ca:	1a ba       	out	0x1a, r1	; 26
 ADCSRA=0X00;
      cc:	16 b8       	out	0x06, r1	; 6
 ADMUX=0X60;//0x40 for 10 bits
      ce:	80 e6       	ldi	r24, 0x60	; 96
      d0:	87 b9       	out	0x07, r24	; 7
 ADCSRA=0X87;
      d2:	87 e8       	ldi	r24, 0x87	; 135
      d4:	86 b9       	out	0x06, r24	; 6
 ACSR=0X80;
      d6:	80 e8       	ldi	r24, 0x80	; 128
      d8:	88 b9       	out	0x08, r24	; 8
}
      da:	08 95       	ret

000000dc <adc_start>:
//ADC START
unsigned char adc_start(unsigned char channel)
{
 unsigned char i;
 
     ADCH=0x00;
      dc:	15 b8       	out	0x05, r1	; 5

	 i=channel&0x07;
	 ADMUX=i|0x60;        //i|0x40 for 10 bits
      de:	87 70       	andi	r24, 0x07	; 7
      e0:	80 66       	ori	r24, 0x60	; 96
      e2:	87 b9       	out	0x07, r24	; 7
	 ADCSRA|=1<<ADSC;
      e4:	36 9a       	sbi	0x06, 6	; 6
	   
		 while(ADCSRA & (1<<ADSC));       // wait for conv. to complete
      e6:	36 99       	sbic	0x06, 6	; 6
      e8:	fe cf       	rjmp	.-4      	; 0xe6 <adc_start+0xa>
		 unsigned char temp=ADCH;      //unsigned int temp=ADC;   for 10 bits
      ea:	85 b1       	in	r24, 0x05	; 5
   
 return temp;
}
      ec:	08 95       	ret

000000ee <delay_sec>:

//DELAY FUNCTIONS
void delay_sec(int x)
{
      ee:	ac 01       	movw	r20, r24
      f0:	30 e0       	ldi	r19, 0x00	; 0
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      f2:	60 e9       	ldi	r22, 0x90	; 144
      f4:	71 e0       	ldi	r23, 0x01	; 1
      f6:	0c c0       	rjmp	.+24     	; 0x110 <delay_sec+0x22>
      f8:	fb 01       	movw	r30, r22
      fa:	31 97       	sbiw	r30, 0x01	; 1
      fc:	f1 f7       	brne	.-4      	; 0xfa <delay_sec+0xc>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
      fe:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     100:	d9 f7       	brne	.-10     	; 0xf8 <delay_sec+0xa>
 unsigned char i,j;
 for(i=0;i<x;i++)
  for(j=0;j<4;j++)
     102:	2f 5f       	subi	r18, 0xFF	; 255
     104:	24 30       	cpi	r18, 0x04	; 4
     106:	19 f0       	breq	.+6      	; 0x10e <delay_sec+0x20>
     108:	84 ec       	ldi	r24, 0xC4	; 196
     10a:	99 e0       	ldi	r25, 0x09	; 9
     10c:	f5 cf       	rjmp	.-22     	; 0xf8 <delay_sec+0xa>

//DELAY FUNCTIONS
void delay_sec(int x)
{
 unsigned char i,j;
 for(i=0;i<x;i++)
     10e:	3f 5f       	subi	r19, 0xFF	; 255
     110:	83 2f       	mov	r24, r19
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	84 17       	cp	r24, r20
     116:	95 07       	cpc	r25, r21
     118:	14 f4       	brge	.+4      	; 0x11e <delay_sec+0x30>
     11a:	20 e0       	ldi	r18, 0x00	; 0
     11c:	f5 cf       	rjmp	.-22     	; 0x108 <delay_sec+0x1a>
     11e:	08 95       	ret

00000120 <delay_millisec>:
  for(j=0;j<4;j++)
   _delay_ms(250);
}

void delay_millisec(int n)
{
     120:	af 92       	push	r10
     122:	bf 92       	push	r11
     124:	cf 92       	push	r12
     126:	df 92       	push	r13
     128:	ef 92       	push	r14
     12a:	ff 92       	push	r15
     12c:	0f 93       	push	r16
     12e:	1f 93       	push	r17
	_delay_ms(n);
     130:	aa 27       	eor	r26, r26
     132:	97 fd       	sbrc	r25, 7
     134:	a0 95       	com	r26
     136:	ba 2f       	mov	r27, r26
     138:	bc 01       	movw	r22, r24
     13a:	cd 01       	movw	r24, r26
     13c:	0e 94 da 18 	call	0x31b4	; 0x31b4 <__floatsisf>
     140:	5b 01       	movw	r10, r22
     142:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     144:	20 e0       	ldi	r18, 0x00	; 0
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	4a e7       	ldi	r20, 0x7A	; 122
     14a:	55 e4       	ldi	r21, 0x45	; 69
     14c:	0e 94 8e 19 	call	0x331c	; 0x331c <__mulsf3>
     150:	7b 01       	movw	r14, r22
     152:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     154:	20 e0       	ldi	r18, 0x00	; 0
     156:	30 e0       	ldi	r19, 0x00	; 0
     158:	40 e8       	ldi	r20, 0x80	; 128
     15a:	5f e3       	ldi	r21, 0x3F	; 63
     15c:	0e 94 40 18 	call	0x3080	; 0x3080 <__cmpsf2>
     160:	88 23       	and	r24, r24
     162:	1c f4       	brge	.+6      	; 0x16a <delay_millisec+0x4a>
     164:	61 e0       	ldi	r22, 0x01	; 1
     166:	70 e0       	ldi	r23, 0x00	; 0
     168:	24 c0       	rjmp	.+72     	; 0x1b2 <delay_millisec+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     16a:	c8 01       	movw	r24, r16
     16c:	b7 01       	movw	r22, r14
     16e:	20 e0       	ldi	r18, 0x00	; 0
     170:	3f ef       	ldi	r19, 0xFF	; 255
     172:	4f e7       	ldi	r20, 0x7F	; 127
     174:	57 e4       	ldi	r21, 0x47	; 71
     176:	0e 94 8a 19 	call	0x3314	; 0x3314 <__gesf2>
     17a:	18 16       	cp	r1, r24
     17c:	b4 f4       	brge	.+44     	; 0x1aa <delay_millisec+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     17e:	c6 01       	movw	r24, r12
     180:	b5 01       	movw	r22, r10
     182:	20 e0       	ldi	r18, 0x00	; 0
     184:	30 e0       	ldi	r19, 0x00	; 0
     186:	40 e2       	ldi	r20, 0x20	; 32
     188:	51 e4       	ldi	r21, 0x41	; 65
     18a:	0e 94 8e 19 	call	0x331c	; 0x331c <__mulsf3>
     18e:	0e 94 ac 18 	call	0x3158	; 0x3158 <__fixunssfsi>
     192:	80 e9       	ldi	r24, 0x90	; 144
     194:	91 e0       	ldi	r25, 0x01	; 1
     196:	05 c0       	rjmp	.+10     	; 0x1a2 <delay_millisec+0x82>
     198:	fc 01       	movw	r30, r24
     19a:	31 97       	sbiw	r30, 0x01	; 1
     19c:	f1 f7       	brne	.-4      	; 0x19a <delay_millisec+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     19e:	61 50       	subi	r22, 0x01	; 1
     1a0:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1a2:	61 15       	cp	r22, r1
     1a4:	71 05       	cpc	r23, r1
     1a6:	c1 f7       	brne	.-16     	; 0x198 <delay_millisec+0x78>
     1a8:	07 c0       	rjmp	.+14     	; 0x1b8 <delay_millisec+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1aa:	c8 01       	movw	r24, r16
     1ac:	b7 01       	movw	r22, r14
     1ae:	0e 94 ac 18 	call	0x3158	; 0x3158 <__fixunssfsi>
     1b2:	cb 01       	movw	r24, r22
     1b4:	01 97       	sbiw	r24, 0x01	; 1
     1b6:	f1 f7       	brne	.-4      	; 0x1b4 <delay_millisec+0x94>
}
     1b8:	1f 91       	pop	r17
     1ba:	0f 91       	pop	r16
     1bc:	ff 90       	pop	r15
     1be:	ef 90       	pop	r14
     1c0:	df 90       	pop	r13
     1c2:	cf 90       	pop	r12
     1c4:	bf 90       	pop	r11
     1c6:	af 90       	pop	r10
     1c8:	08 95       	ret

000001ca <delay_microsec>:

void delay_microsec(int n)
{
     1ca:	af 92       	push	r10
     1cc:	bf 92       	push	r11
     1ce:	cf 92       	push	r12
     1d0:	df 92       	push	r13
     1d2:	ef 92       	push	r14
     1d4:	ff 92       	push	r15
     1d6:	0f 93       	push	r16
     1d8:	1f 93       	push	r17
	_delay_us(n);
     1da:	aa 27       	eor	r26, r26
     1dc:	97 fd       	sbrc	r25, 7
     1de:	a0 95       	com	r26
     1e0:	ba 2f       	mov	r27, r26
     1e2:	bc 01       	movw	r22, r24
     1e4:	cd 01       	movw	r24, r26
     1e6:	0e 94 da 18 	call	0x31b4	; 0x31b4 <__floatsisf>
     1ea:	5b 01       	movw	r10, r22
     1ec:	6c 01       	movw	r12, r24
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
     1ee:	2b ea       	ldi	r18, 0xAB	; 171
     1f0:	3a ea       	ldi	r19, 0xAA	; 170
     1f2:	4a ea       	ldi	r20, 0xAA	; 170
     1f4:	50 e4       	ldi	r21, 0x40	; 64
     1f6:	0e 94 8e 19 	call	0x331c	; 0x331c <__mulsf3>
     1fa:	7b 01       	movw	r14, r22
     1fc:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     1fe:	20 e0       	ldi	r18, 0x00	; 0
     200:	30 e0       	ldi	r19, 0x00	; 0
     202:	40 e8       	ldi	r20, 0x80	; 128
     204:	5f e3       	ldi	r21, 0x3F	; 63
     206:	0e 94 40 18 	call	0x3080	; 0x3080 <__cmpsf2>
     20a:	88 23       	and	r24, r24
     20c:	14 f4       	brge	.+4      	; 0x212 <delay_microsec+0x48>
     20e:	61 e0       	ldi	r22, 0x01	; 1
     210:	54 c0       	rjmp	.+168    	; 0x2ba <delay_microsec+0xf0>
		__ticks = 1;
	else if (__tmp > 255)
     212:	c8 01       	movw	r24, r16
     214:	b7 01       	movw	r22, r14
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	30 e0       	ldi	r19, 0x00	; 0
     21a:	4f e7       	ldi	r20, 0x7F	; 127
     21c:	53 e4       	ldi	r21, 0x43	; 67
     21e:	0e 94 8a 19 	call	0x3314	; 0x3314 <__gesf2>
     222:	18 16       	cp	r1, r24
     224:	0c f0       	brlt	.+2      	; 0x228 <delay_microsec+0x5e>
     226:	45 c0       	rjmp	.+138    	; 0x2b2 <delay_microsec+0xe8>
	{
		_delay_ms(__us / 1000.0);
     228:	c6 01       	movw	r24, r12
     22a:	b5 01       	movw	r22, r10
     22c:	20 e0       	ldi	r18, 0x00	; 0
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	4a e7       	ldi	r20, 0x7A	; 122
     232:	54 e4       	ldi	r21, 0x44	; 68
     234:	0e 94 44 18 	call	0x3088	; 0x3088 <__divsf3>
     238:	5b 01       	movw	r10, r22
     23a:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     23c:	20 e0       	ldi	r18, 0x00	; 0
     23e:	30 e0       	ldi	r19, 0x00	; 0
     240:	4a e7       	ldi	r20, 0x7A	; 122
     242:	55 e4       	ldi	r21, 0x45	; 69
     244:	0e 94 8e 19 	call	0x331c	; 0x331c <__mulsf3>
     248:	7b 01       	movw	r14, r22
     24a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     24c:	20 e0       	ldi	r18, 0x00	; 0
     24e:	30 e0       	ldi	r19, 0x00	; 0
     250:	40 e8       	ldi	r20, 0x80	; 128
     252:	5f e3       	ldi	r21, 0x3F	; 63
     254:	0e 94 40 18 	call	0x3080	; 0x3080 <__cmpsf2>
     258:	88 23       	and	r24, r24
     25a:	1c f4       	brge	.+6      	; 0x262 <delay_microsec+0x98>
     25c:	61 e0       	ldi	r22, 0x01	; 1
     25e:	70 e0       	ldi	r23, 0x00	; 0
     260:	24 c0       	rjmp	.+72     	; 0x2aa <delay_microsec+0xe0>
		__ticks = 1;
	else if (__tmp > 65535)
     262:	c8 01       	movw	r24, r16
     264:	b7 01       	movw	r22, r14
     266:	20 e0       	ldi	r18, 0x00	; 0
     268:	3f ef       	ldi	r19, 0xFF	; 255
     26a:	4f e7       	ldi	r20, 0x7F	; 127
     26c:	57 e4       	ldi	r21, 0x47	; 71
     26e:	0e 94 8a 19 	call	0x3314	; 0x3314 <__gesf2>
     272:	18 16       	cp	r1, r24
     274:	b4 f4       	brge	.+44     	; 0x2a2 <delay_microsec+0xd8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     276:	c6 01       	movw	r24, r12
     278:	b5 01       	movw	r22, r10
     27a:	20 e0       	ldi	r18, 0x00	; 0
     27c:	30 e0       	ldi	r19, 0x00	; 0
     27e:	40 e2       	ldi	r20, 0x20	; 32
     280:	51 e4       	ldi	r21, 0x41	; 65
     282:	0e 94 8e 19 	call	0x331c	; 0x331c <__mulsf3>
     286:	0e 94 ac 18 	call	0x3158	; 0x3158 <__fixunssfsi>
     28a:	80 e9       	ldi	r24, 0x90	; 144
     28c:	91 e0       	ldi	r25, 0x01	; 1
     28e:	05 c0       	rjmp	.+10     	; 0x29a <delay_microsec+0xd0>
     290:	fc 01       	movw	r30, r24
     292:	31 97       	sbiw	r30, 0x01	; 1
     294:	f1 f7       	brne	.-4      	; 0x292 <delay_microsec+0xc8>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     296:	61 50       	subi	r22, 0x01	; 1
     298:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     29a:	61 15       	cp	r22, r1
     29c:	71 05       	cpc	r23, r1
     29e:	c1 f7       	brne	.-16     	; 0x290 <delay_microsec+0xc6>
     2a0:	0e c0       	rjmp	.+28     	; 0x2be <delay_microsec+0xf4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2a2:	c8 01       	movw	r24, r16
     2a4:	b7 01       	movw	r22, r14
     2a6:	0e 94 ac 18 	call	0x3158	; 0x3158 <__fixunssfsi>
     2aa:	cb 01       	movw	r24, r22
     2ac:	01 97       	sbiw	r24, 0x01	; 1
     2ae:	f1 f7       	brne	.-4      	; 0x2ac <delay_microsec+0xe2>
     2b0:	06 c0       	rjmp	.+12     	; 0x2be <delay_microsec+0xf4>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     2b2:	c8 01       	movw	r24, r16
     2b4:	b7 01       	movw	r22, r14
     2b6:	0e 94 ac 18 	call	0x3158	; 0x3158 <__fixunssfsi>
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     2ba:	6a 95       	dec	r22
     2bc:	f1 f7       	brne	.-4      	; 0x2ba <delay_microsec+0xf0>
}
     2be:	1f 91       	pop	r17
     2c0:	0f 91       	pop	r16
     2c2:	ff 90       	pop	r15
     2c4:	ef 90       	pop	r14
     2c6:	df 90       	pop	r13
     2c8:	cf 90       	pop	r12
     2ca:	bf 90       	pop	r11
     2cc:	af 90       	pop	r10
     2ce:	08 95       	ret

000002d0 <check_sensors>:

//CHECK THE SENSOR VALUES
void check_sensors(void)
{
     2d0:	ef 92       	push	r14
     2d2:	ff 92       	push	r15
     2d4:	1f 93       	push	r17
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
sensorbyte=0;
     2da:	10 92 6e 01 	sts	0x016E, r1
     2de:	c0 e0       	ldi	r28, 0x00	; 0
     2e0:	d0 e0       	ldi	r29, 0x00	; 0
	 for(i=0;i<sensor_num;i++)
	 {
	 
	  temp[i]=adc_start(i);
	  if(temp[i]>threshold[i])
	  sensorbyte|=(1<<i);
     2e2:	81 e0       	ldi	r24, 0x01	; 1
     2e4:	e8 2e       	mov	r14, r24
     2e6:	f1 2c       	mov	r15, r1
unsigned char i,temp[sensor_num];

	 for(i=0;i<sensor_num;i++)
	 {
	 
	  temp[i]=adc_start(i);
     2e8:	8c 2f       	mov	r24, r28
     2ea:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_start>
	  if(temp[i]>threshold[i])
     2ee:	fe 01       	movw	r30, r28
     2f0:	e9 57       	subi	r30, 0x79	; 121
     2f2:	fe 4f       	sbci	r31, 0xFE	; 254
     2f4:	90 81       	ld	r25, Z
     2f6:	98 17       	cp	r25, r24
     2f8:	60 f4       	brcc	.+24     	; 0x312 <check_sensors+0x42>
	  sensorbyte|=(1<<i);
     2fa:	97 01       	movw	r18, r14
     2fc:	0c 2e       	mov	r0, r28
     2fe:	02 c0       	rjmp	.+4      	; 0x304 <check_sensors+0x34>
     300:	22 0f       	add	r18, r18
     302:	33 1f       	adc	r19, r19
     304:	0a 94       	dec	r0
     306:	e2 f7       	brpl	.-8      	; 0x300 <check_sensors+0x30>
     308:	80 91 6e 01 	lds	r24, 0x016E
     30c:	82 2b       	or	r24, r18
     30e:	80 93 6e 01 	sts	0x016E, r24
     312:	21 96       	adiw	r28, 0x01	; 1
{
sensorbyte=0;

unsigned char i,temp[sensor_num];

	 for(i=0;i<sensor_num;i++)
     314:	c4 30       	cpi	r28, 0x04	; 4
     316:	d1 05       	cpc	r29, r1
     318:	39 f7       	brne	.-50     	; 0x2e8 <check_sensors+0x18>
	  temp[i]=adc_start(i);
	  if(temp[i]>threshold[i])
	  sensorbyte|=(1<<i);
	 
	 } 
}
     31a:	df 91       	pop	r29
     31c:	cf 91       	pop	r28
     31e:	1f 91       	pop	r17
     320:	ff 90       	pop	r15
     322:	ef 90       	pop	r14
     324:	08 95       	ret

00000326 <calibrate_black>:
 
 //CALIBRATE FOR BLACK SURFACE
 void calibrate_black(void)
{
     326:	0f 93       	push	r16
     328:	1f 93       	push	r17
     32a:	cf 93       	push	r28
     32c:	df 93       	push	r29
     32e:	c7 e9       	ldi	r28, 0x97	; 151
     330:	d1 e0       	ldi	r29, 0x01	; 1
     332:	00 e0       	ldi	r16, 0x00	; 0
	unsigned char j,i,temp[sensor_num];

	for(j=0;j<sensor_num;j++) 
	 {
		  max[j]=adc_start(j);
     334:	80 2f       	mov	r24, r16
     336:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_start>
     33a:	88 83       	st	Y, r24
     33c:	10 e0       	ldi	r17, 0x00	; 0
		  
		  for(i=0;i<10;i++)
		 {
			  temp[i]=adc_start(j);
     33e:	80 2f       	mov	r24, r16
     340:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_start>
     344:	98 2f       	mov	r25, r24
			  
			  if(temp[i]>max[j])
     346:	88 81       	ld	r24, Y
     348:	89 17       	cp	r24, r25
     34a:	08 f4       	brcc	.+2      	; 0x34e <calibrate_black+0x28>
			  {
			  max[j]=temp[i];
     34c:	98 83       	st	Y, r25

	for(j=0;j<sensor_num;j++) 
	 {
		  max[j]=adc_start(j);
		  
		  for(i=0;i<10;i++)
     34e:	1f 5f       	subi	r17, 0xFF	; 255
     350:	1a 30       	cpi	r17, 0x0A	; 10
     352:	a9 f7       	brne	.-22     	; 0x33e <calibrate_black+0x18>
 //CALIBRATE FOR BLACK SURFACE
 void calibrate_black(void)
{
	unsigned char j,i,temp[sensor_num];

	for(j=0;j<sensor_num;j++) 
     354:	0f 5f       	subi	r16, 0xFF	; 255
     356:	21 96       	adiw	r28, 0x01	; 1
     358:	04 30       	cpi	r16, 0x04	; 4
     35a:	61 f7       	brne	.-40     	; 0x334 <calibrate_black+0xe>
		 }
	 
	}

		
}
     35c:	df 91       	pop	r29
     35e:	cf 91       	pop	r28
     360:	1f 91       	pop	r17
     362:	0f 91       	pop	r16
     364:	08 95       	ret

00000366 <calibrate_white>:

//CALIBRATE FOR WHITE SURFACE
void calibrate_white(void)
{
     366:	0f 93       	push	r16
     368:	1f 93       	push	r17
     36a:	cf 93       	push	r28
     36c:	df 93       	push	r29
     36e:	cb e9       	ldi	r28, 0x9B	; 155
     370:	d1 e0       	ldi	r29, 0x01	; 1
     372:	00 e0       	ldi	r16, 0x00	; 0

	unsigned char j,i,temp[sensor_num];
	 
	 for(j=0;j<sensor_num;j++) 
	 {
		  min[j]=adc_start(j);
     374:	80 2f       	mov	r24, r16
     376:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_start>
     37a:	88 83       	st	Y, r24
     37c:	10 e0       	ldi	r17, 0x00	; 0
		  
		  for(i=0;i<10;i++)
		 {
			  temp[i]=adc_start(j);
     37e:	80 2f       	mov	r24, r16
     380:	0e 94 6e 00 	call	0xdc	; 0xdc <adc_start>
     384:	98 2f       	mov	r25, r24
			  
			 if(temp[i]<min[j])
     386:	88 81       	ld	r24, Y
     388:	98 17       	cp	r25, r24
     38a:	08 f4       	brcc	.+2      	; 0x38e <calibrate_white+0x28>
			  {
			  min[j]=temp[i];
     38c:	98 83       	st	Y, r25
	 
	 for(j=0;j<sensor_num;j++) 
	 {
		  min[j]=adc_start(j);
		  
		  for(i=0;i<10;i++)
     38e:	1f 5f       	subi	r17, 0xFF	; 255
     390:	1a 30       	cpi	r17, 0x0A	; 10
     392:	a9 f7       	brne	.-22     	; 0x37e <calibrate_white+0x18>
void calibrate_white(void)
{

	unsigned char j,i,temp[sensor_num];
	 
	 for(j=0;j<sensor_num;j++) 
     394:	0f 5f       	subi	r16, 0xFF	; 255
     396:	21 96       	adiw	r28, 0x01	; 1
     398:	04 30       	cpi	r16, 0x04	; 4
     39a:	61 f7       	brne	.-40     	; 0x374 <calibrate_white+0xe>
		 }
	 
	}

		
}
     39c:	df 91       	pop	r29
     39e:	cf 91       	pop	r28
     3a0:	1f 91       	pop	r17
     3a2:	0f 91       	pop	r16
     3a4:	08 95       	ret

000003a6 <flick>:
	 
}

//LED FLICKER FUNCTION
void flick (void)
{
     3a6:	1f 93       	push	r17
     3a8:	cf 93       	push	r28
     3aa:	df 93       	push	r29
     3ac:	c0 e0       	ldi	r28, 0x00	; 0
     3ae:	d0 e0       	ldi	r29, 0x00	; 0
unsigned int i=0;

	for(i=0;i<5;i++)
	{
		LED=0xff;
     3b0:	1f ef       	ldi	r17, 0xFF	; 255
     3b2:	15 bb       	out	0x15, r17	; 21
		delay_millisec(100);
     3b4:	84 e6       	ldi	r24, 0x64	; 100
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	0e 94 90 00 	call	0x120	; 0x120 <delay_millisec>
		LED=0x00;
     3bc:	15 ba       	out	0x15, r1	; 21
		delay_millisec(100);
     3be:	84 e6       	ldi	r24, 0x64	; 100
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	0e 94 90 00 	call	0x120	; 0x120 <delay_millisec>
//LED FLICKER FUNCTION
void flick (void)
{
unsigned int i=0;

	for(i=0;i<5;i++)
     3c6:	21 96       	adiw	r28, 0x01	; 1
     3c8:	c5 30       	cpi	r28, 0x05	; 5
     3ca:	d1 05       	cpc	r29, r1
     3cc:	91 f7       	brne	.-28     	; 0x3b2 <flick+0xc>
		delay_millisec(100);
		LED=0x00;
		delay_millisec(100);
	}

}
     3ce:	df 91       	pop	r29
     3d0:	cf 91       	pop	r28
     3d2:	1f 91       	pop	r17
     3d4:	08 95       	ret

000003d6 <set_pwm1a>:

//SET PWM1A
void set_pwm1a(int a)
{
OCR1A=a;
     3d6:	9b bd       	out	0x2b, r25	; 43
     3d8:	8a bd       	out	0x2a, r24	; 42
}
     3da:	08 95       	ret

000003dc <set_pwm1b>:

//SET PWM1B
void set_pwm1b(int b)
{
OCR1B=b;
     3dc:	99 bd       	out	0x29, r25	; 41
     3de:	88 bd       	out	0x28, r24	; 40
}
     3e0:	08 95       	ret

000003e2 <lcd_busy_loop>:
}

void lcd_busy_loop(void)
{
	uint8_t busy,status=0x00,temp;
	LCD_DATA_DDR&=0xF0;
     3e2:	87 b3       	in	r24, 0x17	; 23
     3e4:	80 7f       	andi	r24, 0xF0	; 240
     3e6:	87 bb       	out	0x17, r24	; 23
	SET_RW();		//Read mode
     3e8:	c6 9a       	sbi	0x18, 6	; 24
	CLEAR_RS();		//Read status
     3ea:	c5 98       	cbi	0x18, 5	; 24
     3ec:	82 e0       	ldi	r24, 0x02	; 2
     3ee:	8a 95       	dec	r24
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <lcd_busy_loop+0xc>
	_delay_us(0.5);		//tAS
	do
	{

		SET_E();
     3f2:	22 e0       	ldi	r18, 0x02	; 2
     3f4:	35 e0       	ldi	r19, 0x05	; 5
     3f6:	c7 9a       	sbi	0x18, 7	; 24
     3f8:	82 2f       	mov	r24, r18
     3fa:	8a 95       	dec	r24
     3fc:	f1 f7       	brne	.-4      	; 0x3fa <lcd_busy_loop+0x18>
		_delay_us(0.5);
		status=LCD_DATA_PIN;
     3fe:	86 b3       	in	r24, 0x16	; 22
		status=status<<4;
     400:	82 95       	swap	r24
     402:	80 7f       	andi	r24, 0xF0	; 240
     404:	92 2f       	mov	r25, r18
     406:	9a 95       	dec	r25
     408:	f1 f7       	brne	.-4      	; 0x406 <lcd_busy_loop+0x24>
		_delay_us(0.5);
		CLEAR_E();
     40a:	c7 98       	cbi	0x18, 7	; 24
     40c:	93 2f       	mov	r25, r19
     40e:	9a 95       	dec	r25
     410:	f1 f7       	brne	.-4      	; 0x40e <lcd_busy_loop+0x2c>
		_delay_us(1);	//tEL
		SET_E();
     412:	c7 9a       	sbi	0x18, 7	; 24
     414:	92 2f       	mov	r25, r18
     416:	9a 95       	dec	r25
     418:	f1 f7       	brne	.-4      	; 0x416 <lcd_busy_loop+0x34>
		_delay_us(0.5);
		temp=LCD_DATA_PIN;
     41a:	96 b3       	in	r25, 0x16	; 22
     41c:	92 2f       	mov	r25, r18
     41e:	9a 95       	dec	r25
     420:	f1 f7       	brne	.-4      	; 0x41e <lcd_busy_loop+0x3c>
		temp&=0x0F;
		status=status|temp;
		busy=status & 0b10000000;
		_delay_us(0.5);
		CLEAR_E();
     422:	c7 98       	cbi	0x18, 7	; 24
     424:	93 2f       	mov	r25, r19
     426:	9a 95       	dec	r25
     428:	f1 f7       	brne	.-4      	; 0x426 <lcd_busy_loop+0x44>
		_delay_us(1);	//tEL
	}while(busy);
     42a:	87 fd       	sbrc	r24, 7
     42c:	e4 cf       	rjmp	.-56     	; 0x3f6 <lcd_busy_loop+0x14>
CLEAR_RW();		//write mode
     42e:	c6 98       	cbi	0x18, 6	; 24
	//Change Port to output
	LCD_DATA_DDR|=0x0F;
     430:	87 b3       	in	r24, 0x17	; 23
     432:	8f 60       	ori	r24, 0x0F	; 15
     434:	87 bb       	out	0x17, r24	; 23

}
     436:	08 95       	ret

00000438 <lcd_byte>:
 #define DDR(x) _CONCAT(DDR,x)


//LCD FUNCTIONS
void lcd_byte(uint8_t c,uint8_t isdata)
{
     438:	28 2f       	mov	r18, r24
uint8_t hn,ln;			//Nibbles
uint8_t temp;
hn=c>>4;
ln=(c & 0x0F);
if(isdata==0)
     43a:	66 23       	and	r22, r22
     43c:	11 f4       	brne	.+4      	; 0x442 <lcd_byte+0xa>
	CLEAR_RS();
     43e:	c5 98       	cbi	0x18, 5	; 24
     440:	01 c0       	rjmp	.+2      	; 0x444 <lcd_byte+0xc>
else
	SET_RS();
     442:	c5 9a       	sbi	0x18, 5	; 24
     444:	82 e0       	ldi	r24, 0x02	; 2
     446:	8a 95       	dec	r24
     448:	f1 f7       	brne	.-4      	; 0x446 <lcd_byte+0xe>
_delay_us(0.500);		//tAS
SET_E();
     44a:	c7 9a       	sbi	0x18, 7	; 24
temp=(LCD_DATA_PORT & 0XF0)|(hn);
     44c:	88 b3       	in	r24, 0x18	; 24
     44e:	92 2f       	mov	r25, r18
     450:	92 95       	swap	r25
     452:	9f 70       	andi	r25, 0x0F	; 15
     454:	80 7f       	andi	r24, 0xF0	; 240
     456:	98 2b       	or	r25, r24
LCD_DATA_PORT=temp;
     458:	98 bb       	out	0x18, r25	; 24
     45a:	95 e0       	ldi	r25, 0x05	; 5
     45c:	89 2f       	mov	r24, r25
     45e:	8a 95       	dec	r24
     460:	f1 f7       	brne	.-4      	; 0x45e <lcd_byte+0x26>
_delay_us(1);			//the
CLEAR_E();
     462:	c7 98       	cbi	0x18, 7	; 24
     464:	89 2f       	mov	r24, r25
     466:	8a 95       	dec	r24
     468:	f1 f7       	brne	.-4      	; 0x466 <__stack+0x7>
_delay_us(1);
SET_E();
     46a:	c7 9a       	sbi	0x18, 7	; 24
temp=(LCD_DATA_PORT & 0XF0)|(ln);
     46c:	88 b3       	in	r24, 0x18	; 24
     46e:	2f 70       	andi	r18, 0x0F	; 15
     470:	80 7f       	andi	r24, 0xF0	; 240
     472:	82 2b       	or	r24, r18
LCD_DATA_PORT=temp;
     474:	88 bb       	out	0x18, r24	; 24
     476:	89 2f       	mov	r24, r25
     478:	8a 95       	dec	r24
     47a:	f1 f7       	brne	.-4      	; 0x478 <__stack+0x19>
_delay_us(1);			//tEH
CLEAR_E();
     47c:	c7 98       	cbi	0x18, 7	; 24
     47e:	9a 95       	dec	r25
     480:	f1 f7       	brne	.-4      	; 0x47e <__stack+0x1f>
_delay_us(1);			//tEL
lcd_busy_loop();
     482:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <lcd_busy_loop>
}
     486:	08 95       	ret

00000488 <lcd_init>:
	LCD_DATA_DDR|=0x0F;

}

void lcd_init(uint8_t style)
{
     488:	1f 93       	push	r17
     48a:	18 2f       	mov	r17, r24
     48c:	8c e2       	ldi	r24, 0x2C	; 44
     48e:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     490:	20 e9       	ldi	r18, 0x90	; 144
     492:	31 e0       	ldi	r19, 0x01	; 1
     494:	f9 01       	movw	r30, r18
     496:	31 97       	sbiw	r30, 0x01	; 1
     498:	f1 f7       	brne	.-4      	; 0x496 <lcd_init+0xe>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     49a:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     49c:	d9 f7       	brne	.-10     	; 0x494 <lcd_init+0xc>
	
_delay_ms(30);
	
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F);
     49e:	87 b3       	in	r24, 0x17	; 23
     4a0:	8f 60       	ori	r24, 0x0F	; 15
     4a2:	87 bb       	out	0x17, r24	; 23
	LCD_E_DDR|=(1<<LCD_E_POS);
     4a4:	bf 9a       	sbi	0x17, 7	; 23
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     4a6:	bd 9a       	sbi	0x17, 5	; 23
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     4a8:	be 9a       	sbi	0x17, 6	; 23

	LCD_DATA_PORT&=0XF0;
     4aa:	88 b3       	in	r24, 0x18	; 24
     4ac:	80 7f       	andi	r24, 0xF0	; 240
     4ae:	88 bb       	out	0x18, r24	; 24
	CLEAR_E();
     4b0:	c7 98       	cbi	0x18, 7	; 24
	CLEAR_RW();
     4b2:	c6 98       	cbi	0x18, 6	; 24
	CLEAR_RS();
     4b4:	c5 98       	cbi	0x18, 5	; 24
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     4b6:	81 e0       	ldi	r24, 0x01	; 1
     4b8:	8a 95       	dec	r24
     4ba:	f1 f7       	brne	.-4      	; 0x4b8 <lcd_init+0x30>
	_delay_us(0.3);	//tAS
	SET_E();
     4bc:	c7 9a       	sbi	0x18, 7	; 24
	LCD_DATA_PORT|=(0b00000010);
     4be:	c1 9a       	sbi	0x18, 1	; 24
     4c0:	85 e0       	ldi	r24, 0x05	; 5
     4c2:	98 2f       	mov	r25, r24
     4c4:	9a 95       	dec	r25
     4c6:	f1 f7       	brne	.-4      	; 0x4c4 <lcd_init+0x3c>
	_delay_us(1);
	CLEAR_E();
     4c8:	c7 98       	cbi	0x18, 7	; 24
     4ca:	8a 95       	dec	r24
     4cc:	f1 f7       	brne	.-4      	; 0x4ca <lcd_init+0x42>
	_delay_us(1);
	lcd_busy_loop();                                    //[B] Forgot this delay
     4ce:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <lcd_busy_loop>
	lcd_cmd (0b00001100|style);	//Display On
     4d2:	81 2f       	mov	r24, r17
     4d4:	8c 60       	ori	r24, 0x0C	; 12
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
	lcd_cmd (0b00101000);			//function set 4-bit,2 line 5x7 dot format
     4dc:	88 e2       	ldi	r24, 0x28	; 40
     4de:	60 e0       	ldi	r22, 0x00	; 0
     4e0:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
}
     4e4:	1f 91       	pop	r17
     4e6:	08 95       	ret

000004e8 <lcd_write_string>:
void lcd_write_string(const char *msg)
{
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	ec 01       	movw	r28, r24
     4ee:	04 c0       	rjmp	.+8      	; 0x4f8 <lcd_write_string+0x10>
while(*msg!='\0')
 {
	lcd_data (*msg);
     4f0:	61 e0       	ldi	r22, 0x01	; 1
     4f2:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
	msg++;
     4f6:	21 96       	adiw	r28, 0x01	; 1
	lcd_cmd (0b00001100|style);	//Display On
	lcd_cmd (0b00101000);			//function set 4-bit,2 line 5x7 dot format
}
void lcd_write_string(const char *msg)
{
while(*msg!='\0')
     4f8:	88 81       	ld	r24, Y
     4fa:	88 23       	and	r24, r24
     4fc:	c9 f7       	brne	.-14     	; 0x4f0 <lcd_write_string+0x8>
 {
	lcd_data (*msg);
	msg++;
 }
}
     4fe:	df 91       	pop	r29
     500:	cf 91       	pop	r28
     502:	08 95       	ret

00000504 <lcd_write_int>:

void lcd_write_int(int val,unsigned int field_length)
{
     504:	ef 92       	push	r14
     506:	ff 92       	push	r15
     508:	0f 93       	push	r16
     50a:	1f 93       	push	r17
     50c:	df 93       	push	r29
     50e:	cf 93       	push	r28
     510:	00 d0       	rcall	.+0      	; 0x512 <lcd_write_int+0xe>
     512:	00 d0       	rcall	.+0      	; 0x514 <lcd_write_int+0x10>
     514:	0f 92       	push	r0
     516:	cd b7       	in	r28, 0x3d	; 61
     518:	de b7       	in	r29, 0x3e	; 62
     51a:	9c 01       	movw	r18, r24
     51c:	8b 01       	movw	r16, r22
	char str[5]={0,0,0,0,0};
     51e:	fe 01       	movw	r30, r28
     520:	31 96       	adiw	r30, 0x01	; 1
     522:	85 e0       	ldi	r24, 0x05	; 5
     524:	df 01       	movw	r26, r30
     526:	1d 92       	st	X+, r1
     528:	8a 95       	dec	r24
     52a:	e9 f7       	brne	.-6      	; 0x526 <lcd_write_int+0x22>
     52c:	fe 01       	movw	r30, r28
     52e:	35 96       	adiw	r30, 0x05	; 5
     530:	0d c0       	rjmp	.+26     	; 0x54c <lcd_write_int+0x48>
	int i=4,j=0;
	while(val)
	{
	str[i]=val%10;
     532:	c9 01       	movw	r24, r18
     534:	6a e0       	ldi	r22, 0x0A	; 10
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     53c:	80 83       	st	Z, r24
	val=val/10;
     53e:	c9 01       	movw	r24, r18
     540:	6a e0       	ldi	r22, 0x0A	; 10
     542:	70 e0       	ldi	r23, 0x00	; 0
     544:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     548:	9b 01       	movw	r18, r22
     54a:	31 97       	sbiw	r30, 0x01	; 1

void lcd_write_int(int val,unsigned int field_length)
{
	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     54c:	21 15       	cp	r18, r1
     54e:	31 05       	cpc	r19, r1
     550:	81 f7       	brne	.-32     	; 0x532 <lcd_write_int+0x2e>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     552:	bf ef       	ldi	r27, 0xFF	; 255
     554:	0f 3f       	cpi	r16, 0xFF	; 255
     556:	1b 07       	cpc	r17, r27
     558:	79 f4       	brne	.+30     	; 0x578 <lcd_write_int+0x74>
     55a:	20 e0       	ldi	r18, 0x00	; 0
     55c:	30 e0       	ldi	r19, 0x00	; 0
		while(str[j]==0) j++;
     55e:	ae 01       	movw	r20, r28
     560:	4f 5f       	subi	r20, 0xFF	; 255
     562:	5f 4f       	sbci	r21, 0xFF	; 255
     564:	02 c0       	rjmp	.+4      	; 0x56a <lcd_write_int+0x66>
     566:	2f 5f       	subi	r18, 0xFF	; 255
     568:	3f 4f       	sbci	r19, 0xFF	; 255
     56a:	fa 01       	movw	r30, r20
     56c:	e2 0f       	add	r30, r18
     56e:	f3 1f       	adc	r31, r19
     570:	80 81       	ld	r24, Z
     572:	88 23       	and	r24, r24
     574:	c1 f3       	breq	.-16     	; 0x566 <lcd_write_int+0x62>
     576:	04 c0       	rjmp	.+8      	; 0x580 <lcd_write_int+0x7c>
	else
		j=5-field_length;
     578:	25 e0       	ldi	r18, 0x05	; 5
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	20 1b       	sub	r18, r16
     57e:	31 0b       	sbc	r19, r17
     580:	7e 01       	movw	r14, r28
     582:	08 94       	sec
     584:	e1 1c       	adc	r14, r1
     586:	f1 1c       	adc	r15, r1
     588:	e2 0e       	add	r14, r18
     58a:	f3 1e       	adc	r15, r19
     58c:	89 01       	movw	r16, r18
     58e:	09 c0       	rjmp	.+18     	; 0x5a2 <lcd_write_int+0x9e>

	if(val<0) lcd_data ('-');
	for(i=j;i<5;i++)
	{
	lcd_data (48+str[i]);
     590:	f7 01       	movw	r30, r14
     592:	81 91       	ld	r24, Z+
     594:	7f 01       	movw	r14, r30
     596:	80 5d       	subi	r24, 0xD0	; 208
     598:	61 e0       	ldi	r22, 0x01	; 1
     59a:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) lcd_data ('-');
	for(i=j;i<5;i++)
     59e:	0f 5f       	subi	r16, 0xFF	; 255
     5a0:	1f 4f       	sbci	r17, 0xFF	; 255
     5a2:	05 30       	cpi	r16, 0x05	; 5
     5a4:	11 05       	cpc	r17, r1
     5a6:	a4 f3       	brlt	.-24     	; 0x590 <lcd_write_int+0x8c>
	{
	lcd_data (48+str[i]);
	}
}
     5a8:	0f 90       	pop	r0
     5aa:	0f 90       	pop	r0
     5ac:	0f 90       	pop	r0
     5ae:	0f 90       	pop	r0
     5b0:	0f 90       	pop	r0
     5b2:	cf 91       	pop	r28
     5b4:	df 91       	pop	r29
     5b6:	1f 91       	pop	r17
     5b8:	0f 91       	pop	r16
     5ba:	ff 90       	pop	r15
     5bc:	ef 90       	pop	r14
     5be:	08 95       	ret

000005c0 <lcd_goto_xy>:
void lcd_goto_xy(uint8_t x,uint8_t y)
{
 if(x<40)
     5c0:	88 32       	cpi	r24, 0x28	; 40
     5c2:	30 f4       	brcc	.+12     	; 0x5d0 <lcd_goto_xy+0x10>
 {
  if(y) x|=0b01000000;
     5c4:	61 11       	cpse	r22, r1
     5c6:	80 64       	ori	r24, 0x40	; 64
  x|=0b10000000;
  lcd_cmd (x);
     5c8:	80 68       	ori	r24, 0x80	; 128
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
     5d0:	08 95       	ret

000005d2 <lcd_write_string_xy>:
  }
}
void lcd_write_string_xy(int x,int y,char *msg)
 {
     5d2:	0f 93       	push	r16
     5d4:	1f 93       	push	r17
     5d6:	8a 01       	movw	r16, r20
 lcd_goto_xy(x,y);
     5d8:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <lcd_goto_xy>
 lcd_write_string(msg);
     5dc:	c8 01       	movw	r24, r16
     5de:	0e 94 74 02 	call	0x4e8	; 0x4e8 <lcd_write_string>
}
     5e2:	1f 91       	pop	r17
     5e4:	0f 91       	pop	r16
     5e6:	08 95       	ret

000005e8 <lcd_write_int_xy>:

void lcd_write_int_xy(int x,int y,int val,int fl) {
     5e8:	ef 92       	push	r14
     5ea:	ff 92       	push	r15
     5ec:	0f 93       	push	r16
     5ee:	1f 93       	push	r17
     5f0:	8a 01       	movw	r16, r20
     5f2:	79 01       	movw	r14, r18
 lcd_goto_xy(x,y);
     5f4:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <lcd_goto_xy>
 lcd_write_int(val,fl);
     5f8:	c8 01       	movw	r24, r16
     5fa:	b7 01       	movw	r22, r14
     5fc:	0e 94 82 02 	call	0x504	; 0x504 <lcd_write_int>
}
     600:	1f 91       	pop	r17
     602:	0f 91       	pop	r16
     604:	ff 90       	pop	r15
     606:	ef 90       	pop	r14
     608:	08 95       	ret

0000060a <usart_init>:

//USART COMMANDS
void usart_init(void)
{
 UCSRB = 0x00; //disable while setting baud rate
     60a:	1a b8       	out	0x0a, r1	; 10
 UCSRA = 0x00;
     60c:	1b b8       	out	0x0b, r1	; 11
 UCSRC = (URSEL) | 0x06;
     60e:	87 e0       	ldi	r24, 0x07	; 7
     610:	80 bd       	out	0x20, r24	; 32
 UBRRL = 0x67; //set baud rate lo
     612:	87 e6       	ldi	r24, 0x67	; 103
     614:	89 b9       	out	0x09, r24	; 9
 UBRRH = 0x00; //set baud rate hi
     616:	10 bc       	out	0x20, r1	; 32
 UCSRB = 0x98;
     618:	88 e9       	ldi	r24, 0x98	; 152
     61a:	8a b9       	out	0x0a, r24	; 10
}
     61c:	08 95       	ret

0000061e <usart_transmit_char>:
void usart_transmit_char( unsigned char data )
{
/* Wait for empty transmit buffer */
while ( !( UCSRA & (1<<UDRE)) )
     61e:	5d 9b       	sbis	0x0b, 5	; 11
     620:	fe cf       	rjmp	.-4      	; 0x61e <usart_transmit_char>
;
/* Put data into buffer, sends the data */
UDR = data;
     622:	8c b9       	out	0x0c, r24	; 12
}
     624:	08 95       	ret

00000626 <usart_transmit_string>:

void usart_transmit_string(char *msg )
{
     626:	fc 01       	movw	r30, r24
     628:	04 c0       	rjmp	.+8      	; 0x632 <usart_transmit_string+0xc>
 UCSRB = 0x98;
}
void usart_transmit_char( unsigned char data )
{
/* Wait for empty transmit buffer */
while ( !( UCSRA & (1<<UDRE)) )
     62a:	5d 9b       	sbis	0x0b, 5	; 11
     62c:	fe cf       	rjmp	.-4      	; 0x62a <usart_transmit_string+0x4>
;
/* Put data into buffer, sends the data */
UDR = data;
     62e:	8c b9       	out	0x0c, r24	; 12
void usart_transmit_string(char *msg )
{
while(*msg!='\0')
 {
	usart_transmit_char(*msg);
	msg++;
     630:	31 96       	adiw	r30, 0x01	; 1
UDR = data;
}

void usart_transmit_string(char *msg )
{
while(*msg!='\0')
     632:	80 81       	ld	r24, Z
     634:	88 23       	and	r24, r24
     636:	c9 f7       	brne	.-14     	; 0x62a <usart_transmit_string+0x4>
 {
	usart_transmit_char(*msg);
	msg++;
 }
}
     638:	08 95       	ret

0000063a <usart_transmit_newline>:
 UCSRB = 0x98;
}
void usart_transmit_char( unsigned char data )
{
/* Wait for empty transmit buffer */
while ( !( UCSRA & (1<<UDRE)) )
     63a:	5d 9b       	sbis	0x0b, 5	; 11
     63c:	fe cf       	rjmp	.-4      	; 0x63a <usart_transmit_newline>
;
/* Put data into buffer, sends the data */
UDR = data;
     63e:	8a e0       	ldi	r24, 0x0A	; 10
     640:	8c b9       	out	0x0c, r24	; 12
 UCSRB = 0x98;
}
void usart_transmit_char( unsigned char data )
{
/* Wait for empty transmit buffer */
while ( !( UCSRA & (1<<UDRE)) )
     642:	5d 9b       	sbis	0x0b, 5	; 11
     644:	fe cf       	rjmp	.-4      	; 0x642 <usart_transmit_newline+0x8>
;
/* Put data into buffer, sends the data */
UDR = data;
     646:	8d e0       	ldi	r24, 0x0D	; 13
     648:	8c b9       	out	0x0c, r24	; 12
}
void usart_transmit_newline(void)
{
usart_transmit_char(10);
usart_transmit_char(13);
}
     64a:	08 95       	ret

0000064c <usart_receive_char>:
unsigned char usart_receive_char(void)
{
/* Wait for data to be received */
while ( !(UCSRA & (1<<RXC)) )
     64c:	5f 9b       	sbis	0x0b, 7	; 11
     64e:	fe cf       	rjmp	.-4      	; 0x64c <usart_receive_char>
;
/* Get and return received data from buffer */
return UDR;
     650:	8c b1       	in	r24, 0x0c	; 12
}
     652:	08 95       	ret

00000654 <bot_motion_init>:

//BOT MOTIONS
void bot_motion_init(void)
{
DDRC=0xff;
     654:	8f ef       	ldi	r24, 0xFF	; 255
     656:	84 bb       	out	0x14, r24	; 20
}
     658:	08 95       	ret

0000065a <bot_left_forward>:
void bot_left_forward(void)
{
 MOTOR1A=1;
     65a:	ac 9a       	sbi	0x15, 4	; 21
 MOTOR1B=0;
     65c:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=0;
     65e:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=0;
     660:	af 98       	cbi	0x15, 7	; 21
}
     662:	08 95       	ret

00000664 <bot_left_backward>:
void bot_left_backward(void)
{
 MOTOR1A=0;
     664:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=1;
     666:	ad 9a       	sbi	0x15, 5	; 21
 MOTOR2A=0;
     668:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=0;
     66a:	af 98       	cbi	0x15, 7	; 21
}
     66c:	08 95       	ret

0000066e <bot_right_forward>:
void bot_right_forward(void)
{
 MOTOR1A=0;
     66e:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=0;
     670:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=1;
     672:	ae 9a       	sbi	0x15, 6	; 21
 MOTOR2B=0; 
     674:	af 98       	cbi	0x15, 7	; 21
}
     676:	08 95       	ret

00000678 <bot_left>:
 MOTOR2A=0;
 MOTOR2B=0;
}
void bot_right_forward(void)
{
 MOTOR1A=0;
     678:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=0;
     67a:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=1;
     67c:	ae 9a       	sbi	0x15, 6	; 21
 MOTOR2B=0; 
     67e:	af 98       	cbi	0x15, 7	; 21
}

void bot_left(void)
{
 bot_right_forward();
}
     680:	08 95       	ret

00000682 <bot_right>:
{
DDRC=0xff;
}
void bot_left_forward(void)
{
 MOTOR1A=1;
     682:	ac 9a       	sbi	0x15, 4	; 21
 MOTOR1B=0;
     684:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=0;
     686:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=0;
     688:	af 98       	cbi	0x15, 7	; 21
}

void bot_right(void)
{
 bot_left_forward();
}
     68a:	08 95       	ret

0000068c <bot_right_backward>:

void bot_right_backward(void)
{
 MOTOR1A=0;
     68c:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=0;
     68e:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=0;
     690:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=1; 
     692:	af 9a       	sbi	0x15, 7	; 21
}
     694:	08 95       	ret

00000696 <bot_forward>:
void bot_forward(void)
{
MOTOR1A=1;
     696:	ac 9a       	sbi	0x15, 4	; 21
 MOTOR1B=0;
     698:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=1;
     69a:	ae 9a       	sbi	0x15, 6	; 21
 MOTOR2B=0;
     69c:	af 98       	cbi	0x15, 7	; 21
}
     69e:	08 95       	ret

000006a0 <bot_backward>:
void bot_backward(void)
{
 MOTOR1A=0;
     6a0:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=1;
     6a2:	ad 9a       	sbi	0x15, 5	; 21
 MOTOR2A=0;
     6a4:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=1;
     6a6:	af 9a       	sbi	0x15, 7	; 21
}
     6a8:	08 95       	ret

000006aa <bot_spot_left>:
void bot_spot_left(void)
{
 MOTOR1A=0;
     6aa:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=1;
     6ac:	ad 9a       	sbi	0x15, 5	; 21
 MOTOR2A=1;
     6ae:	ae 9a       	sbi	0x15, 6	; 21
 MOTOR2B=0;
     6b0:	af 98       	cbi	0x15, 7	; 21
}
     6b2:	08 95       	ret

000006b4 <bot_spot_right>:

void bot_spot_right(void)
{
MOTOR1A=1;
     6b4:	ac 9a       	sbi	0x15, 4	; 21
 MOTOR1B=0;
     6b6:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=0;
     6b8:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=1;
     6ba:	af 9a       	sbi	0x15, 7	; 21
}
     6bc:	08 95       	ret

000006be <bot_stop>:
void bot_stop(void)
{
 MOTOR1A=0;
     6be:	ac 98       	cbi	0x15, 4	; 21
 MOTOR1B=0;
     6c0:	ad 98       	cbi	0x15, 5	; 21
 MOTOR2A=0;
     6c2:	ae 98       	cbi	0x15, 6	; 21
 MOTOR2B=0;
     6c4:	af 98       	cbi	0x15, 7	; 21
}
     6c6:	08 95       	ret

000006c8 <bot_brake>:
void bot_brake(void)
{
MOTOR1A=1;
     6c8:	ac 9a       	sbi	0x15, 4	; 21
 MOTOR1B=1;
     6ca:	ad 9a       	sbi	0x15, 5	; 21
 MOTOR2A=1;
     6cc:	ae 9a       	sbi	0x15, 6	; 21
 MOTOR2B=1;
     6ce:	af 9a       	sbi	0x15, 7	; 21
}
     6d0:	08 95       	ret

000006d2 <switch_init>:

void switch_init(void)
{
PORTD|=0x0F;
     6d2:	82 b3       	in	r24, 0x12	; 18
     6d4:	8f 60       	ori	r24, 0x0F	; 15
     6d6:	82 bb       	out	0x12, r24	; 18
DDRD&=0xF0;
     6d8:	81 b3       	in	r24, 0x11	; 17
     6da:	80 7f       	andi	r24, 0xF0	; 240
     6dc:	81 bb       	out	0x11, r24	; 17
}
     6de:	08 95       	ret

000006e0 <pressed_switch0>:

int pressed_switch0(void)
{
if(bit_is_clear(PIND,0))
     6e0:	20 b3       	in	r18, 0x10	; 16
     6e2:	30 e0       	ldi	r19, 0x00	; 0
     6e4:	20 95       	com	r18
     6e6:	30 95       	com	r19
     6e8:	21 70       	andi	r18, 0x01	; 1
     6ea:	30 70       	andi	r19, 0x00	; 0
return 1;
else
return 0;
}
     6ec:	c9 01       	movw	r24, r18
     6ee:	08 95       	ret

000006f0 <pressed_switch1>:

int pressed_switch1(void)
{
if(bit_is_clear(PIND,1))
     6f0:	20 b3       	in	r18, 0x10	; 16
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	36 95       	lsr	r19
     6f6:	27 95       	ror	r18
     6f8:	20 95       	com	r18
     6fa:	30 95       	com	r19
     6fc:	21 70       	andi	r18, 0x01	; 1
     6fe:	30 70       	andi	r19, 0x00	; 0
return 1;
else
return 0;
}
     700:	c9 01       	movw	r24, r18
     702:	08 95       	ret

00000704 <pressed_switch2>:

int pressed_switch2(void)
{
if(bit_is_clear(PIND,2))
     704:	20 b3       	in	r18, 0x10	; 16
     706:	30 e0       	ldi	r19, 0x00	; 0
     708:	36 95       	lsr	r19
     70a:	27 95       	ror	r18
     70c:	36 95       	lsr	r19
     70e:	27 95       	ror	r18
     710:	20 95       	com	r18
     712:	30 95       	com	r19
     714:	21 70       	andi	r18, 0x01	; 1
     716:	30 70       	andi	r19, 0x00	; 0
return 1;
else
return 0;
}
     718:	c9 01       	movw	r24, r18
     71a:	08 95       	ret

0000071c <pressed_switch3>:

int pressed_switch3(void)
{
if(bit_is_clear(PIND,3))
     71c:	20 b3       	in	r18, 0x10	; 16
     71e:	30 e0       	ldi	r19, 0x00	; 0
     720:	53 e0       	ldi	r21, 0x03	; 3
     722:	36 95       	lsr	r19
     724:	27 95       	ror	r18
     726:	5a 95       	dec	r21
     728:	e1 f7       	brne	.-8      	; 0x722 <pressed_switch3+0x6>
     72a:	20 95       	com	r18
     72c:	30 95       	com	r19
     72e:	21 70       	andi	r18, 0x01	; 1
     730:	30 70       	andi	r19, 0x00	; 0
return 1;
else
return 0;
}
     732:	c9 01       	movw	r24, r18
     734:	08 95       	ret

00000736 <check_color>:
//KNIGHT N
//int filew2=b, rankw2=1, filew7=g, rankw7=1, fileb2=b, rankb2=8, fileb7=g, rankb7=8;

void check_color()
{
	if(file%2==rank%2)
     736:	80 91 93 01 	lds	r24, 0x0193
     73a:	90 91 94 01 	lds	r25, 0x0194
     73e:	62 e0       	ldi	r22, 0x02	; 2
     740:	70 e0       	ldi	r23, 0x00	; 0
     742:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     746:	9c 01       	movw	r18, r24
     748:	80 91 a3 01 	lds	r24, 0x01A3
     74c:	90 91 a4 01 	lds	r25, 0x01A4
     750:	62 e0       	ldi	r22, 0x02	; 2
     752:	70 e0       	ldi	r23, 0x00	; 0
     754:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     758:	28 17       	cp	r18, r24
     75a:	39 07       	cpc	r19, r25
     75c:	29 f4       	brne	.+10     	; 0x768 <check_color+0x32>
	{
		color=0;
     75e:	10 92 a0 01 	sts	0x01A0, r1
     762:	10 92 9f 01 	sts	0x019F, r1
     766:	06 c0       	rjmp	.+12     	; 0x774 <check_color+0x3e>
	}
	if(file%2!=rank%2)
	{
		color=1;
     768:	81 e0       	ldi	r24, 0x01	; 1
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	90 93 a0 01 	sts	0x01A0, r25
     770:	80 93 9f 01 	sts	0x019F, r24
	}
	
	if(filew5%2==rankw5%2)			//WHITE KING COLOR
     774:	80 91 91 00 	lds	r24, 0x0091
     778:	90 91 92 00 	lds	r25, 0x0092
     77c:	62 e0       	ldi	r22, 0x02	; 2
     77e:	70 e0       	ldi	r23, 0x00	; 0
     780:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     784:	9c 01       	movw	r18, r24
     786:	80 91 93 00 	lds	r24, 0x0093
     78a:	90 91 94 00 	lds	r25, 0x0094
     78e:	62 e0       	ldi	r22, 0x02	; 2
     790:	70 e0       	ldi	r23, 0x00	; 0
     792:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     796:	28 17       	cp	r18, r24
     798:	39 07       	cpc	r19, r25
     79a:	29 f4       	brne	.+10     	; 0x7a6 <check_color+0x70>
	{
		ke1_color=0;
     79c:	10 92 84 01 	sts	0x0184, r1
     7a0:	10 92 83 01 	sts	0x0183, r1
     7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <check_color+0x7c>
		
	}
	if(filew5%2!=rankw5%2)
	{
		ke1_color=1;
     7a6:	81 e0       	ldi	r24, 0x01	; 1
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	90 93 84 01 	sts	0x0184, r25
     7ae:	80 93 83 01 	sts	0x0183, r24
	}
	if(fileb5%2==rankb5%2)			//BLACK KING COLOR
     7b2:	80 91 95 00 	lds	r24, 0x0095
     7b6:	90 91 96 00 	lds	r25, 0x0096
     7ba:	62 e0       	ldi	r22, 0x02	; 2
     7bc:	70 e0       	ldi	r23, 0x00	; 0
     7be:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     7c2:	9c 01       	movw	r18, r24
     7c4:	80 91 97 00 	lds	r24, 0x0097
     7c8:	90 91 98 00 	lds	r25, 0x0098
     7cc:	62 e0       	ldi	r22, 0x02	; 2
     7ce:	70 e0       	ldi	r23, 0x00	; 0
     7d0:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     7d4:	28 17       	cp	r18, r24
     7d6:	39 07       	cpc	r19, r25
     7d8:	29 f4       	brne	.+10     	; 0x7e4 <check_color+0xae>
	{
		ke8_color=0;
     7da:	10 92 9a 00 	sts	0x009A, r1
     7de:	10 92 99 00 	sts	0x0099, r1
     7e2:	06 c0       	rjmp	.+12     	; 0x7f0 <check_color+0xba>
		
	}
	if(fileb5%2!=rankb5%2)
	{
		ke8_color=1;
     7e4:	81 e0       	ldi	r24, 0x01	; 1
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	90 93 9a 00 	sts	0x009A, r25
     7ec:	80 93 99 00 	sts	0x0099, r24
	}
	 
	if(filew4%2==rankw4%2)			//WHITE QUEEN COLOR
     7f0:	80 91 9b 00 	lds	r24, 0x009B
     7f4:	90 91 9c 00 	lds	r25, 0x009C
     7f8:	62 e0       	ldi	r22, 0x02	; 2
     7fa:	70 e0       	ldi	r23, 0x00	; 0
     7fc:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     800:	9c 01       	movw	r18, r24
     802:	80 91 9d 00 	lds	r24, 0x009D
     806:	90 91 9e 00 	lds	r25, 0x009E
     80a:	62 e0       	ldi	r22, 0x02	; 2
     80c:	70 e0       	ldi	r23, 0x00	; 0
     80e:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     812:	28 17       	cp	r18, r24
     814:	39 07       	cpc	r19, r25
     816:	29 f4       	brne	.+10     	; 0x822 <check_color+0xec>
	{
		qd1_color=0;
     818:	10 92 a4 00 	sts	0x00A4, r1
     81c:	10 92 a3 00 	sts	0x00A3, r1
     820:	06 c0       	rjmp	.+12     	; 0x82e <check_color+0xf8>
		
	}
	if(filew4%2!=rankw4%2)
	{
		qd1_color=1;
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	90 93 a4 00 	sts	0x00A4, r25
     82a:	80 93 a3 00 	sts	0x00A3, r24
	}
	if(fileb4%2==rankb4%2)			//BLACK QUEEN COLOR
     82e:	80 91 9f 00 	lds	r24, 0x009F
     832:	90 91 a0 00 	lds	r25, 0x00A0
     836:	62 e0       	ldi	r22, 0x02	; 2
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     83e:	9c 01       	movw	r18, r24
     840:	80 91 a1 00 	lds	r24, 0x00A1
     844:	90 91 a2 00 	lds	r25, 0x00A2
     848:	62 e0       	ldi	r22, 0x02	; 2
     84a:	70 e0       	ldi	r23, 0x00	; 0
     84c:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     850:	28 17       	cp	r18, r24
     852:	39 07       	cpc	r19, r25
     854:	29 f4       	brne	.+10     	; 0x860 <check_color+0x12a>
	{
		qd8_color=0;
     856:	10 92 86 01 	sts	0x0186, r1
     85a:	10 92 85 01 	sts	0x0185, r1
     85e:	08 95       	ret
		
	}
	if(fileb4%2!=rankb4%2)
	{
		qd8_color=1;
     860:	81 e0       	ldi	r24, 0x01	; 1
     862:	90 e0       	ldi	r25, 0x00	; 0
     864:	90 93 86 01 	sts	0x0186, r25
     868:	80 93 85 01 	sts	0x0185, r24
     86c:	08 95       	ret

0000086e <main>:
	}
}

void main()
{
     86e:	af 92       	push	r10
     870:	bf 92       	push	r11
     872:	cf 92       	push	r12
     874:	df 92       	push	r13
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	df 93       	push	r29
     880:	cf 93       	push	r28
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62
     886:	c8 5c       	subi	r28, 0xC8	; 200
     888:	d0 40       	sbci	r29, 0x00	; 0
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	f8 94       	cli
     88e:	de bf       	out	0x3e, r29	; 62
     890:	0f be       	out	0x3f, r0	; 63
     892:	cd bf       	out	0x3d, r28	; 61

lcd_init(underline);
     894:	82 e0       	ldi	r24, 0x02	; 2
     896:	0e 94 44 02 	call	0x488	; 0x488 <lcd_init>
lcd_clear();
     89a:	81 e0       	ldi	r24, 0x01	; 1
     89c:	60 e0       	ldi	r22, 0x00	; 0
     89e:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>

DDRB=0xFF;
     8a2:	8f ef       	ldi	r24, 0xFF	; 255
     8a4:	87 bb       	out	0x17, r24	; 23
						{00, 51, 12, 00, 00, 00, 00, 07, 58, 00},
						{00, 61, 12, 00, 00, 00, 00, 07, 68, 00},
						{00, 71, 12, 00, 00, 00, 00, 07, 78, 00},
						{00, 81, 12, 00, 00, 00, 00, 07, 88, 00},
						{00, 00, 00, 00, 00, 00, 00, 00, 00, 00},
					};
     8a6:	de 01       	movw	r26, r28
     8a8:	11 96       	adiw	r26, 0x01	; 1
     8aa:	e5 ea       	ldi	r30, 0xA5	; 165
     8ac:	f0 e0       	ldi	r31, 0x00	; 0
     8ae:	88 ec       	ldi	r24, 0xC8	; 200
     8b0:	01 90       	ld	r0, Z+
     8b2:	0d 92       	st	X+, r0
     8b4:	81 50       	subi	r24, 0x01	; 1
     8b6:	e1 f7       	brne	.-8      	; 0x8b0 <main+0x42>
//moves++;
len=3;
     8b8:	23 e0       	ldi	r18, 0x03	; 3
     8ba:	30 e0       	ldi	r19, 0x00	; 0
     8bc:	30 93 a6 01 	sts	0x01A6, r19
     8c0:	20 93 a5 01 	sts	0x01A5, r18
letter=4;
     8c4:	84 e0       	ldi	r24, 0x04	; 4
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	90 93 8e 01 	sts	0x018E, r25
     8cc:	80 93 8d 01 	sts	0x018D, r24
file=c;rank=3;
     8d0:	30 93 94 01 	sts	0x0194, r19
     8d4:	20 93 93 01 	sts	0x0193, r18
     8d8:	30 93 a4 01 	sts	0x01A4, r19
     8dc:	20 93 a3 01 	sts	0x01A3, r18
//file0=d;rank0=5;

lcd_write_string_xy(5,0,"BEFORE");
     8e0:	85 e0       	ldi	r24, 0x05	; 5
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	60 e0       	ldi	r22, 0x00	; 0
     8e6:	70 e0       	ldi	r23, 0x00	; 0
     8e8:	40 e6       	ldi	r20, 0x60	; 96
     8ea:	50 e0       	ldi	r21, 0x00	; 0
     8ec:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <lcd_write_string_xy>
lcd_write_int_xy(2,1,chess[d][5],2);
     8f0:	fe 01       	movw	r30, r28
     8f2:	e5 5a       	subi	r30, 0xA5	; 165
     8f4:	ff 4f       	sbci	r31, 0xFF	; 255
     8f6:	40 81       	ld	r20, Z
     8f8:	51 81       	ldd	r21, Z+1	; 0x01
     8fa:	82 e0       	ldi	r24, 0x02	; 2
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	61 e0       	ldi	r22, 0x01	; 1
     900:	70 e0       	ldi	r23, 0x00	; 0
     902:	22 e0       	ldi	r18, 0x02	; 2
     904:	30 e0       	ldi	r19, 0x00	; 0
     906:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
lcd_write_int_xy(12,1,chess[file][rank],2);
     90a:	80 91 93 01 	lds	r24, 0x0193
     90e:	90 91 94 01 	lds	r25, 0x0194
     912:	fc 01       	movw	r30, r24
     914:	23 e0       	ldi	r18, 0x03	; 3
     916:	ee 0f       	add	r30, r30
     918:	ff 1f       	adc	r31, r31
     91a:	2a 95       	dec	r18
     91c:	e1 f7       	brne	.-8      	; 0x916 <main+0xa8>
     91e:	88 0f       	add	r24, r24
     920:	99 1f       	adc	r25, r25
     922:	e8 0f       	add	r30, r24
     924:	f9 1f       	adc	r31, r25
     926:	80 91 a3 01 	lds	r24, 0x01A3
     92a:	90 91 a4 01 	lds	r25, 0x01A4
     92e:	e8 0f       	add	r30, r24
     930:	f9 1f       	adc	r31, r25
     932:	ee 0f       	add	r30, r30
     934:	ff 1f       	adc	r31, r31
     936:	8e 01       	movw	r16, r28
     938:	0f 5f       	subi	r16, 0xFF	; 255
     93a:	1f 4f       	sbci	r17, 0xFF	; 255
     93c:	e0 0f       	add	r30, r16
     93e:	f1 1f       	adc	r31, r17
     940:	40 81       	ld	r20, Z
     942:	51 81       	ldd	r21, Z+1	; 0x01
     944:	8c e0       	ldi	r24, 0x0C	; 12
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	61 e0       	ldi	r22, 0x01	; 1
     94a:	70 e0       	ldi	r23, 0x00	; 0
     94c:	22 e0       	ldi	r18, 0x02	; 2
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
delay_sec(2);
     954:	82 e0       	ldi	r24, 0x02	; 2
     956:	90 e0       	ldi	r25, 0x00	; 0
     958:	0e 94 77 00 	call	0xee	; 0xee <delay_sec>

if(len==2)
     95c:	80 91 a5 01 	lds	r24, 0x01A5
     960:	90 91 a6 01 	lds	r25, 0x01A6
     964:	82 30       	cpi	r24, 0x02	; 2
     966:	91 05       	cpc	r25, r1
     968:	09 f0       	breq	.+2      	; 0x96c <main+0xfe>
     96a:	0f c1       	rjmp	.+542    	; 0xb8a <main+0x31c>
{
	pawn=1;
     96c:	41 e0       	ldi	r20, 0x01	; 1
     96e:	50 e0       	ldi	r21, 0x00	; 0
     970:	50 93 72 01 	sts	0x0172, r21
     974:	40 93 71 01 	sts	0x0171, r20
	if(moves%2==0)
     978:	80 91 6f 01 	lds	r24, 0x016F
     97c:	90 91 70 01 	lds	r25, 0x0170
     980:	80 fd       	sbrc	r24, 0
     982:	5f c0       	rjmp	.+190    	; 0xa42 <main+0x1d4>
	{
		if(chess[file][rank-1]==12)
     984:	60 91 93 01 	lds	r22, 0x0193
     988:	70 91 94 01 	lds	r23, 0x0194
     98c:	20 91 a3 01 	lds	r18, 0x01A3
     990:	30 91 a4 01 	lds	r19, 0x01A4
     994:	cb 01       	movw	r24, r22
     996:	fc 01       	movw	r30, r24
     998:	b3 e0       	ldi	r27, 0x03	; 3
     99a:	ee 0f       	add	r30, r30
     99c:	ff 1f       	adc	r31, r31
     99e:	ba 95       	dec	r27
     9a0:	e1 f7       	brne	.-8      	; 0x99a <main+0x12c>
     9a2:	88 0f       	add	r24, r24
     9a4:	99 1f       	adc	r25, r25
     9a6:	e8 0f       	add	r30, r24
     9a8:	f9 1f       	adc	r31, r25
     9aa:	e2 0f       	add	r30, r18
     9ac:	f3 1f       	adc	r31, r19
     9ae:	e4 1b       	sub	r30, r20
     9b0:	f5 0b       	sbc	r31, r21
     9b2:	ee 0f       	add	r30, r30
     9b4:	ff 1f       	adc	r31, r31
     9b6:	e0 0f       	add	r30, r16
     9b8:	f1 1f       	adc	r31, r17
     9ba:	80 81       	ld	r24, Z
     9bc:	91 81       	ldd	r25, Z+1	; 0x01
     9be:	0c 97       	sbiw	r24, 0x0c	; 12
     9c0:	a1 f4       	brne	.+40     	; 0x9ea <main+0x17c>
		{
			x2=file;	y2=rank;
     9c2:	60 93 91 01 	sts	0x0191, r22
     9c6:	70 93 92 01 	sts	0x0192, r23
     9ca:	30 93 90 01 	sts	0x0190, r19
     9ce:	20 93 8f 01 	sts	0x018F, r18
			x1=file;	y1=rank-1;
     9d2:	80 91 93 01 	lds	r24, 0x0193
     9d6:	90 91 94 01 	lds	r25, 0x0194
     9da:	90 93 a2 01 	sts	0x01A2, r25
     9de:	80 93 a1 01 	sts	0x01A1, r24
     9e2:	a9 01       	movw	r20, r18
     9e4:	41 50       	subi	r20, 0x01	; 1
     9e6:	50 40       	sbci	r21, 0x00	; 0
     9e8:	66 c0       	rjmp	.+204    	; 0xab6 <main+0x248>
			chess[file][rank]=chess[file][rank-1];
			chess[file][rank-1]=00;
			
		}
		else if(chess[file][rank-2]==12)
     9ea:	cb 01       	movw	r24, r22
     9ec:	fc 01       	movw	r30, r24
     9ee:	b3 e0       	ldi	r27, 0x03	; 3
     9f0:	ee 0f       	add	r30, r30
     9f2:	ff 1f       	adc	r31, r31
     9f4:	ba 95       	dec	r27
     9f6:	e1 f7       	brne	.-8      	; 0x9f0 <main+0x182>
     9f8:	88 0f       	add	r24, r24
     9fa:	99 1f       	adc	r25, r25
     9fc:	e8 0f       	add	r30, r24
     9fe:	f9 1f       	adc	r31, r25
     a00:	e2 0f       	add	r30, r18
     a02:	f3 1f       	adc	r31, r19
     a04:	32 97       	sbiw	r30, 0x02	; 2
     a06:	ee 0f       	add	r30, r30
     a08:	ff 1f       	adc	r31, r31
     a0a:	e0 0f       	add	r30, r16
     a0c:	f1 1f       	adc	r31, r17
     a0e:	80 81       	ld	r24, Z
     a10:	91 81       	ldd	r25, Z+1	; 0x01
     a12:	0c 97       	sbiw	r24, 0x0c	; 12
     a14:	11 f0       	breq	.+4      	; 0xa1a <main+0x1ac>
     a16:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
		{
			x2=file;	y2=rank;
     a1a:	60 93 91 01 	sts	0x0191, r22
     a1e:	70 93 92 01 	sts	0x0192, r23
     a22:	30 93 90 01 	sts	0x0190, r19
     a26:	20 93 8f 01 	sts	0x018F, r18
			x1=file;	y1=rank-2;
     a2a:	80 91 93 01 	lds	r24, 0x0193
     a2e:	90 91 94 01 	lds	r25, 0x0194
     a32:	90 93 a2 01 	sts	0x01A2, r25
     a36:	80 93 a1 01 	sts	0x01A1, r24
     a3a:	a9 01       	movw	r20, r18
     a3c:	42 50       	subi	r20, 0x02	; 2
     a3e:	50 40       	sbci	r21, 0x00	; 0
     a40:	3a c0       	rjmp	.+116    	; 0xab6 <main+0x248>
			chess[file][rank]=chess[file][rank-2];
			chess[file][rank-2]=00;
		}
	}
	
	else if(moves%2==1)
     a42:	62 e0       	ldi	r22, 0x02	; 2
     a44:	70 e0       	ldi	r23, 0x00	; 0
     a46:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     a4a:	01 97       	sbiw	r24, 0x01	; 1
     a4c:	11 f0       	breq	.+4      	; 0xa52 <main+0x1e4>
     a4e:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
	{
		if(chess[file][rank+1]==07)
     a52:	60 91 93 01 	lds	r22, 0x0193
     a56:	70 91 94 01 	lds	r23, 0x0194
     a5a:	20 91 a3 01 	lds	r18, 0x01A3
     a5e:	30 91 a4 01 	lds	r19, 0x01A4
     a62:	cb 01       	movw	r24, r22
     a64:	fc 01       	movw	r30, r24
     a66:	43 e0       	ldi	r20, 0x03	; 3
     a68:	ee 0f       	add	r30, r30
     a6a:	ff 1f       	adc	r31, r31
     a6c:	4a 95       	dec	r20
     a6e:	e1 f7       	brne	.-8      	; 0xa68 <main+0x1fa>
     a70:	88 0f       	add	r24, r24
     a72:	99 1f       	adc	r25, r25
     a74:	e8 0f       	add	r30, r24
     a76:	f9 1f       	adc	r31, r25
     a78:	e2 0f       	add	r30, r18
     a7a:	f3 1f       	adc	r31, r19
     a7c:	31 96       	adiw	r30, 0x01	; 1
     a7e:	ee 0f       	add	r30, r30
     a80:	ff 1f       	adc	r31, r31
     a82:	e0 0f       	add	r30, r16
     a84:	f1 1f       	adc	r31, r17
     a86:	80 81       	ld	r24, Z
     a88:	91 81       	ldd	r25, Z+1	; 0x01
     a8a:	07 97       	sbiw	r24, 0x07	; 7
     a8c:	09 f0       	breq	.+2      	; 0xa90 <main+0x222>
     a8e:	51 c0       	rjmp	.+162    	; 0xb32 <main+0x2c4>
		{ 
			x2=file;	y2=rank;
     a90:	60 93 91 01 	sts	0x0191, r22
     a94:	70 93 92 01 	sts	0x0192, r23
     a98:	30 93 90 01 	sts	0x0190, r19
     a9c:	20 93 8f 01 	sts	0x018F, r18
			x1=file;	y1=rank+1;
     aa0:	80 91 93 01 	lds	r24, 0x0193
     aa4:	90 91 94 01 	lds	r25, 0x0194
     aa8:	90 93 a2 01 	sts	0x01A2, r25
     aac:	80 93 a1 01 	sts	0x01A1, r24
     ab0:	a9 01       	movw	r20, r18
     ab2:	4f 5f       	subi	r20, 0xFF	; 255
     ab4:	5f 4f       	sbci	r21, 0xFF	; 255
     ab6:	50 93 a8 01 	sts	0x01A8, r21
     aba:	40 93 a7 01 	sts	0x01A7, r20
			chess[file][rank]=chess[file][rank+1];
     abe:	cb 01       	movw	r24, r22
     ac0:	db 01       	movw	r26, r22
     ac2:	e3 e0       	ldi	r30, 0x03	; 3
     ac4:	aa 0f       	add	r26, r26
     ac6:	bb 1f       	adc	r27, r27
     ac8:	ea 95       	dec	r30
     aca:	e1 f7       	brne	.-8      	; 0xac4 <main+0x256>
     acc:	88 0f       	add	r24, r24
     ace:	99 1f       	adc	r25, r25
     ad0:	a8 0f       	add	r26, r24
     ad2:	b9 1f       	adc	r27, r25
     ad4:	a2 0f       	add	r26, r18
     ad6:	b3 1f       	adc	r27, r19
     ad8:	aa 0f       	add	r26, r26
     ada:	bb 1f       	adc	r27, r27
     adc:	a0 0f       	add	r26, r16
     ade:	b1 1f       	adc	r27, r17
     ae0:	cb 01       	movw	r24, r22
     ae2:	fb 01       	movw	r30, r22
     ae4:	33 e0       	ldi	r19, 0x03	; 3
     ae6:	ee 0f       	add	r30, r30
     ae8:	ff 1f       	adc	r31, r31
     aea:	3a 95       	dec	r19
     aec:	e1 f7       	brne	.-8      	; 0xae6 <main+0x278>
     aee:	88 0f       	add	r24, r24
     af0:	99 1f       	adc	r25, r25
     af2:	e8 0f       	add	r30, r24
     af4:	f9 1f       	adc	r31, r25
     af6:	e4 0f       	add	r30, r20
     af8:	f5 1f       	adc	r31, r21
     afa:	ee 0f       	add	r30, r30
     afc:	ff 1f       	adc	r31, r31
     afe:	e0 0f       	add	r30, r16
     b00:	f1 1f       	adc	r31, r17
     b02:	80 81       	ld	r24, Z
     b04:	91 81       	ldd	r25, Z+1	; 0x01
     b06:	8d 93       	st	X+, r24
     b08:	9c 93       	st	X, r25
			chess[file][rank+1]=00;
     b0a:	cb 01       	movw	r24, r22
     b0c:	9b 01       	movw	r18, r22
     b0e:	73 e0       	ldi	r23, 0x03	; 3
     b10:	22 0f       	add	r18, r18
     b12:	33 1f       	adc	r19, r19
     b14:	7a 95       	dec	r23
     b16:	e1 f7       	brne	.-8      	; 0xb10 <main+0x2a2>
     b18:	88 0f       	add	r24, r24
     b1a:	99 1f       	adc	r25, r25
     b1c:	28 0f       	add	r18, r24
     b1e:	39 1f       	adc	r19, r25
     b20:	24 0f       	add	r18, r20
     b22:	35 1f       	adc	r19, r21
     b24:	22 0f       	add	r18, r18
     b26:	33 1f       	adc	r19, r19
     b28:	02 0f       	add	r16, r18
     b2a:	13 1f       	adc	r17, r19
     b2c:	f8 01       	movw	r30, r16
     b2e:	0c 94 6f 17 	jmp	0x2ede	; 0x2ede <main+0x2670>
		}
		else if(chess[file][rank+2]==07)
     b32:	cb 01       	movw	r24, r22
     b34:	fc 01       	movw	r30, r24
     b36:	43 e0       	ldi	r20, 0x03	; 3
     b38:	ee 0f       	add	r30, r30
     b3a:	ff 1f       	adc	r31, r31
     b3c:	4a 95       	dec	r20
     b3e:	e1 f7       	brne	.-8      	; 0xb38 <main+0x2ca>
     b40:	88 0f       	add	r24, r24
     b42:	99 1f       	adc	r25, r25
     b44:	e8 0f       	add	r30, r24
     b46:	f9 1f       	adc	r31, r25
     b48:	e2 0f       	add	r30, r18
     b4a:	f3 1f       	adc	r31, r19
     b4c:	32 96       	adiw	r30, 0x02	; 2
     b4e:	ee 0f       	add	r30, r30
     b50:	ff 1f       	adc	r31, r31
     b52:	e0 0f       	add	r30, r16
     b54:	f1 1f       	adc	r31, r17
     b56:	80 81       	ld	r24, Z
     b58:	91 81       	ldd	r25, Z+1	; 0x01
     b5a:	07 97       	sbiw	r24, 0x07	; 7
     b5c:	11 f0       	breq	.+4      	; 0xb62 <main+0x2f4>
     b5e:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
		{
			x2=file;	y2=rank;
     b62:	60 93 91 01 	sts	0x0191, r22
     b66:	70 93 92 01 	sts	0x0192, r23
     b6a:	30 93 90 01 	sts	0x0190, r19
     b6e:	20 93 8f 01 	sts	0x018F, r18
			x1=file;	y1=rank+2;
     b72:	80 91 93 01 	lds	r24, 0x0193
     b76:	90 91 94 01 	lds	r25, 0x0194
     b7a:	90 93 a2 01 	sts	0x01A2, r25
     b7e:	80 93 a1 01 	sts	0x01A1, r24
     b82:	a9 01       	movw	r20, r18
     b84:	4e 5f       	subi	r20, 0xFE	; 254
     b86:	5f 4f       	sbci	r21, 0xFF	; 255
     b88:	96 cf       	rjmp	.-212    	; 0xab6 <main+0x248>
		}
	}
	goto END;
}

else if(len==3)			//check the ASCII value of the letter
     b8a:	83 30       	cpi	r24, 0x03	; 3
     b8c:	91 05       	cpc	r25, r1
     b8e:	11 f0       	breq	.+4      	; 0xb94 <main+0x326>
     b90:	0c 94 e5 14 	jmp	0x29ca	; 0x29ca <main+0x215c>
{
	if(letter==0)	//ASCII OF HROOK
     b94:	80 91 8d 01 	lds	r24, 0x018D
     b98:	90 91 8e 01 	lds	r25, 0x018E
     b9c:	00 97       	sbiw	r24, 0x00	; 0
     b9e:	09 f0       	breq	.+2      	; 0xba2 <main+0x334>
     ba0:	5c c3       	rjmp	.+1720   	; 0x125a <main+0x9ec>
	{
		HROOK:
		hrook=1;
     ba2:	81 e0       	ldi	r24, 0x01	; 1
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	90 93 74 01 	sts	0x0174, r25
     baa:	80 93 73 01 	sts	0x0173, r24
		if(moves%2==0)
     bae:	80 91 6f 01 	lds	r24, 0x016F
     bb2:	90 91 70 01 	lds	r25, 0x0170
     bb6:	80 fd       	sbrc	r24, 0
     bb8:	a4 c1       	rjmp	.+840    	; 0xf02 <main+0x694>
		{
			if(filew1==file&&rankw1!=rank)
     bba:	80 91 6d 00 	lds	r24, 0x006D
     bbe:	90 91 6e 00 	lds	r25, 0x006E
     bc2:	20 91 93 01 	lds	r18, 0x0193
     bc6:	30 91 94 01 	lds	r19, 0x0194
     bca:	60 91 a3 01 	lds	r22, 0x01A3
     bce:	70 91 a4 01 	lds	r23, 0x01A4
     bd2:	00 91 6f 00 	lds	r16, 0x006F
     bd6:	10 91 70 00 	lds	r17, 0x0070
     bda:	82 17       	cp	r24, r18
     bdc:	93 07       	cpc	r25, r19
     bde:	09 f0       	breq	.+2      	; 0xbe2 <main+0x374>
     be0:	5f c0       	rjmp	.+190    	; 0xca0 <main+0x432>
     be2:	06 17       	cp	r16, r22
     be4:	17 07       	cpc	r17, r23
     be6:	09 f4       	brne	.+2      	; 0xbea <main+0x37c>
     be8:	bb c0       	rjmp	.+374    	; 0xd60 <main+0x4f2>
			{
				x2=file;	x1=x2;
     bea:	90 93 92 01 	sts	0x0192, r25
     bee:	80 93 91 01 	sts	0x0191, r24
     bf2:	90 93 a2 01 	sts	0x01A2, r25
     bf6:	80 93 a1 01 	sts	0x01A1, r24
				y2=rank;	y1=rankw1;
     bfa:	70 93 90 01 	sts	0x0190, r23
     bfe:	60 93 8f 01 	sts	0x018F, r22
     c02:	10 93 a8 01 	sts	0x01A8, r17
     c06:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[filew1][rankw1];
     c0a:	20 91 6d 00 	lds	r18, 0x006D
     c0e:	30 91 6e 00 	lds	r19, 0x006E
     c12:	80 91 93 01 	lds	r24, 0x0193
     c16:	90 91 94 01 	lds	r25, 0x0194
     c1a:	dc 01       	movw	r26, r24
     c1c:	53 e0       	ldi	r21, 0x03	; 3
     c1e:	aa 0f       	add	r26, r26
     c20:	bb 1f       	adc	r27, r27
     c22:	5a 95       	dec	r21
     c24:	e1 f7       	brne	.-8      	; 0xc1e <main+0x3b0>
     c26:	88 0f       	add	r24, r24
     c28:	99 1f       	adc	r25, r25
     c2a:	a8 0f       	add	r26, r24
     c2c:	b9 1f       	adc	r27, r25
     c2e:	a6 0f       	add	r26, r22
     c30:	b7 1f       	adc	r27, r23
     c32:	aa 0f       	add	r26, r26
     c34:	bb 1f       	adc	r27, r27
     c36:	ae 01       	movw	r20, r28
     c38:	4f 5f       	subi	r20, 0xFF	; 255
     c3a:	5f 4f       	sbci	r21, 0xFF	; 255
     c3c:	a4 0f       	add	r26, r20
     c3e:	b5 1f       	adc	r27, r21
     c40:	c9 01       	movw	r24, r18
     c42:	fc 01       	movw	r30, r24
     c44:	ee 0f       	add	r30, r30
     c46:	ff 1f       	adc	r31, r31
     c48:	ee 0f       	add	r30, r30
     c4a:	ff 1f       	adc	r31, r31
     c4c:	ee 0f       	add	r30, r30
     c4e:	ff 1f       	adc	r31, r31
     c50:	88 0f       	add	r24, r24
     c52:	99 1f       	adc	r25, r25
     c54:	e8 0f       	add	r30, r24
     c56:	f9 1f       	adc	r31, r25
     c58:	e0 0f       	add	r30, r16
     c5a:	f1 1f       	adc	r31, r17
     c5c:	ee 0f       	add	r30, r30
     c5e:	ff 1f       	adc	r31, r31
     c60:	e4 0f       	add	r30, r20
     c62:	f5 1f       	adc	r31, r21
     c64:	80 81       	ld	r24, Z
     c66:	91 81       	ldd	r25, Z+1	; 0x01
     c68:	8d 93       	st	X+, r24
     c6a:	9c 93       	st	X, r25
				chess[filew1][rankw1]=00;
     c6c:	c9 01       	movw	r24, r18
     c6e:	9c 01       	movw	r18, r24
     c70:	a3 e0       	ldi	r26, 0x03	; 3
     c72:	22 0f       	add	r18, r18
     c74:	33 1f       	adc	r19, r19
     c76:	aa 95       	dec	r26
     c78:	e1 f7       	brne	.-8      	; 0xc72 <main+0x404>
     c7a:	88 0f       	add	r24, r24
     c7c:	99 1f       	adc	r25, r25
     c7e:	28 0f       	add	r18, r24
     c80:	39 1f       	adc	r19, r25
     c82:	20 0f       	add	r18, r16
     c84:	31 1f       	adc	r19, r17
     c86:	22 0f       	add	r18, r18
     c88:	33 1f       	adc	r19, r19
     c8a:	42 0f       	add	r20, r18
     c8c:	53 1f       	adc	r21, r19
     c8e:	fa 01       	movw	r30, r20
     c90:	11 82       	std	Z+1, r1	; 0x01
     c92:	10 82       	st	Z, r1
				rankw1=rank;
     c94:	70 93 70 00 	sts	0x0070, r23
     c98:	60 93 6f 00 	sts	0x006F, r22
     c9c:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			else if(filew1!=file&&rankw1==rank)
     ca0:	06 17       	cp	r16, r22
     ca2:	17 07       	cpc	r17, r23
     ca4:	09 f0       	breq	.+2      	; 0xca8 <main+0x43a>
     ca6:	5c c0       	rjmp	.+184    	; 0xd60 <main+0x4f2>
			{
				x2=file;	x1=filew1;
     ca8:	30 93 92 01 	sts	0x0192, r19
     cac:	20 93 91 01 	sts	0x0191, r18
     cb0:	90 93 a2 01 	sts	0x01A2, r25
     cb4:	80 93 a1 01 	sts	0x01A1, r24
				y2=rank;	y1=y2;
     cb8:	10 93 90 01 	sts	0x0190, r17
     cbc:	00 93 8f 01 	sts	0x018F, r16
     cc0:	10 93 a8 01 	sts	0x01A8, r17
     cc4:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[filew1][rankw1];
     cc8:	60 91 93 01 	lds	r22, 0x0193
     ccc:	70 91 94 01 	lds	r23, 0x0194
     cd0:	20 91 6d 00 	lds	r18, 0x006D
     cd4:	30 91 6e 00 	lds	r19, 0x006E
     cd8:	cb 01       	movw	r24, r22
     cda:	dc 01       	movw	r26, r24
     cdc:	53 e0       	ldi	r21, 0x03	; 3
     cde:	aa 0f       	add	r26, r26
     ce0:	bb 1f       	adc	r27, r27
     ce2:	5a 95       	dec	r21
     ce4:	e1 f7       	brne	.-8      	; 0xcde <main+0x470>
     ce6:	88 0f       	add	r24, r24
     ce8:	99 1f       	adc	r25, r25
     cea:	a8 0f       	add	r26, r24
     cec:	b9 1f       	adc	r27, r25
     cee:	a0 0f       	add	r26, r16
     cf0:	b1 1f       	adc	r27, r17
     cf2:	aa 0f       	add	r26, r26
     cf4:	bb 1f       	adc	r27, r27
     cf6:	ae 01       	movw	r20, r28
     cf8:	4f 5f       	subi	r20, 0xFF	; 255
     cfa:	5f 4f       	sbci	r21, 0xFF	; 255
     cfc:	a4 0f       	add	r26, r20
     cfe:	b5 1f       	adc	r27, r21
     d00:	c9 01       	movw	r24, r18
     d02:	fc 01       	movw	r30, r24
     d04:	ee 0f       	add	r30, r30
     d06:	ff 1f       	adc	r31, r31
     d08:	ee 0f       	add	r30, r30
     d0a:	ff 1f       	adc	r31, r31
     d0c:	ee 0f       	add	r30, r30
     d0e:	ff 1f       	adc	r31, r31
     d10:	88 0f       	add	r24, r24
     d12:	99 1f       	adc	r25, r25
     d14:	e8 0f       	add	r30, r24
     d16:	f9 1f       	adc	r31, r25
     d18:	e0 0f       	add	r30, r16
     d1a:	f1 1f       	adc	r31, r17
     d1c:	ee 0f       	add	r30, r30
     d1e:	ff 1f       	adc	r31, r31
     d20:	e4 0f       	add	r30, r20
     d22:	f5 1f       	adc	r31, r21
     d24:	80 81       	ld	r24, Z
     d26:	91 81       	ldd	r25, Z+1	; 0x01
     d28:	8d 93       	st	X+, r24
     d2a:	9c 93       	st	X, r25
				chess[filew1][rankw1]=00;
     d2c:	c9 01       	movw	r24, r18
     d2e:	9c 01       	movw	r18, r24
     d30:	a3 e0       	ldi	r26, 0x03	; 3
     d32:	22 0f       	add	r18, r18
     d34:	33 1f       	adc	r19, r19
     d36:	aa 95       	dec	r26
     d38:	e1 f7       	brne	.-8      	; 0xd32 <main+0x4c4>
     d3a:	88 0f       	add	r24, r24
     d3c:	99 1f       	adc	r25, r25
     d3e:	28 0f       	add	r18, r24
     d40:	39 1f       	adc	r19, r25
     d42:	20 0f       	add	r18, r16
     d44:	31 1f       	adc	r19, r17
     d46:	22 0f       	add	r18, r18
     d48:	33 1f       	adc	r19, r19
     d4a:	42 0f       	add	r20, r18
     d4c:	53 1f       	adc	r21, r19
     d4e:	fa 01       	movw	r30, r20
     d50:	11 82       	std	Z+1, r1	; 0x01
     d52:	10 82       	st	Z, r1
				filew1=file;
     d54:	60 93 6d 00 	sts	0x006D, r22
     d58:	70 93 6e 00 	sts	0x006E, r23
     d5c:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			
			else if(filew8==file&&rankw8!=rank)
     d60:	80 91 71 00 	lds	r24, 0x0071
     d64:	90 91 72 00 	lds	r25, 0x0072
     d68:	60 91 a3 01 	lds	r22, 0x01A3
     d6c:	70 91 a4 01 	lds	r23, 0x01A4
     d70:	00 91 73 00 	lds	r16, 0x0073
     d74:	10 91 74 00 	lds	r17, 0x0074
     d78:	82 17       	cp	r24, r18
     d7a:	93 07       	cpc	r25, r19
     d7c:	09 f0       	breq	.+2      	; 0xd80 <main+0x512>
     d7e:	60 c0       	rjmp	.+192    	; 0xe40 <main+0x5d2>
     d80:	06 17       	cp	r16, r22
     d82:	17 07       	cpc	r17, r23
     d84:	11 f4       	brne	.+4      	; 0xd8a <main+0x51c>
     d86:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				x2=file;	x1=x2;
     d8a:	30 93 92 01 	sts	0x0192, r19
     d8e:	20 93 91 01 	sts	0x0191, r18
     d92:	30 93 a2 01 	sts	0x01A2, r19
     d96:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=rankw8;
     d9a:	70 93 90 01 	sts	0x0190, r23
     d9e:	60 93 8f 01 	sts	0x018F, r22
     da2:	10 93 a8 01 	sts	0x01A8, r17
     da6:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[filew8][rankw8];
     daa:	20 91 71 00 	lds	r18, 0x0071
     dae:	30 91 72 00 	lds	r19, 0x0072
     db2:	80 91 93 01 	lds	r24, 0x0193
     db6:	90 91 94 01 	lds	r25, 0x0194
     dba:	dc 01       	movw	r26, r24
     dbc:	53 e0       	ldi	r21, 0x03	; 3
     dbe:	aa 0f       	add	r26, r26
     dc0:	bb 1f       	adc	r27, r27
     dc2:	5a 95       	dec	r21
     dc4:	e1 f7       	brne	.-8      	; 0xdbe <main+0x550>
     dc6:	88 0f       	add	r24, r24
     dc8:	99 1f       	adc	r25, r25
     dca:	a8 0f       	add	r26, r24
     dcc:	b9 1f       	adc	r27, r25
     dce:	a6 0f       	add	r26, r22
     dd0:	b7 1f       	adc	r27, r23
     dd2:	aa 0f       	add	r26, r26
     dd4:	bb 1f       	adc	r27, r27
     dd6:	ae 01       	movw	r20, r28
     dd8:	4f 5f       	subi	r20, 0xFF	; 255
     dda:	5f 4f       	sbci	r21, 0xFF	; 255
     ddc:	a4 0f       	add	r26, r20
     dde:	b5 1f       	adc	r27, r21
     de0:	c9 01       	movw	r24, r18
     de2:	fc 01       	movw	r30, r24
     de4:	ee 0f       	add	r30, r30
     de6:	ff 1f       	adc	r31, r31
     de8:	ee 0f       	add	r30, r30
     dea:	ff 1f       	adc	r31, r31
     dec:	ee 0f       	add	r30, r30
     dee:	ff 1f       	adc	r31, r31
     df0:	88 0f       	add	r24, r24
     df2:	99 1f       	adc	r25, r25
     df4:	e8 0f       	add	r30, r24
     df6:	f9 1f       	adc	r31, r25
     df8:	e0 0f       	add	r30, r16
     dfa:	f1 1f       	adc	r31, r17
     dfc:	ee 0f       	add	r30, r30
     dfe:	ff 1f       	adc	r31, r31
     e00:	e4 0f       	add	r30, r20
     e02:	f5 1f       	adc	r31, r21
     e04:	80 81       	ld	r24, Z
     e06:	91 81       	ldd	r25, Z+1	; 0x01
     e08:	8d 93       	st	X+, r24
     e0a:	9c 93       	st	X, r25
				chess[filew8][rankw8]=00;
     e0c:	c9 01       	movw	r24, r18
     e0e:	9c 01       	movw	r18, r24
     e10:	a3 e0       	ldi	r26, 0x03	; 3
     e12:	22 0f       	add	r18, r18
     e14:	33 1f       	adc	r19, r19
     e16:	aa 95       	dec	r26
     e18:	e1 f7       	brne	.-8      	; 0xe12 <main+0x5a4>
     e1a:	88 0f       	add	r24, r24
     e1c:	99 1f       	adc	r25, r25
     e1e:	28 0f       	add	r18, r24
     e20:	39 1f       	adc	r19, r25
     e22:	20 0f       	add	r18, r16
     e24:	31 1f       	adc	r19, r17
     e26:	22 0f       	add	r18, r18
     e28:	33 1f       	adc	r19, r19
     e2a:	42 0f       	add	r20, r18
     e2c:	53 1f       	adc	r21, r19
     e2e:	fa 01       	movw	r30, r20
     e30:	11 82       	std	Z+1, r1	; 0x01
     e32:	10 82       	st	Z, r1
				rankw8=rank;
     e34:	70 93 74 00 	sts	0x0074, r23
     e38:	60 93 73 00 	sts	0x0073, r22
     e3c:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			else if(filew8!=file&&rankw8==rank)
     e40:	06 17       	cp	r16, r22
     e42:	17 07       	cpc	r17, r23
     e44:	11 f0       	breq	.+4      	; 0xe4a <main+0x5dc>
     e46:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				x2=file;	x1=filew8;
     e4a:	30 93 92 01 	sts	0x0192, r19
     e4e:	20 93 91 01 	sts	0x0191, r18
     e52:	90 93 a2 01 	sts	0x01A2, r25
     e56:	80 93 a1 01 	sts	0x01A1, r24
				y2=rank;	y1=y2;
     e5a:	10 93 90 01 	sts	0x0190, r17
     e5e:	00 93 8f 01 	sts	0x018F, r16
     e62:	10 93 a8 01 	sts	0x01A8, r17
     e66:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[filew8][rankw8];
     e6a:	60 91 93 01 	lds	r22, 0x0193
     e6e:	70 91 94 01 	lds	r23, 0x0194
     e72:	20 91 71 00 	lds	r18, 0x0071
     e76:	30 91 72 00 	lds	r19, 0x0072
     e7a:	cb 01       	movw	r24, r22
     e7c:	dc 01       	movw	r26, r24
     e7e:	53 e0       	ldi	r21, 0x03	; 3
     e80:	aa 0f       	add	r26, r26
     e82:	bb 1f       	adc	r27, r27
     e84:	5a 95       	dec	r21
     e86:	e1 f7       	brne	.-8      	; 0xe80 <main+0x612>
     e88:	88 0f       	add	r24, r24
     e8a:	99 1f       	adc	r25, r25
     e8c:	a8 0f       	add	r26, r24
     e8e:	b9 1f       	adc	r27, r25
     e90:	a0 0f       	add	r26, r16
     e92:	b1 1f       	adc	r27, r17
     e94:	aa 0f       	add	r26, r26
     e96:	bb 1f       	adc	r27, r27
     e98:	ae 01       	movw	r20, r28
     e9a:	4f 5f       	subi	r20, 0xFF	; 255
     e9c:	5f 4f       	sbci	r21, 0xFF	; 255
     e9e:	a4 0f       	add	r26, r20
     ea0:	b5 1f       	adc	r27, r21
     ea2:	c9 01       	movw	r24, r18
     ea4:	fc 01       	movw	r30, r24
     ea6:	ee 0f       	add	r30, r30
     ea8:	ff 1f       	adc	r31, r31
     eaa:	ee 0f       	add	r30, r30
     eac:	ff 1f       	adc	r31, r31
     eae:	ee 0f       	add	r30, r30
     eb0:	ff 1f       	adc	r31, r31
     eb2:	88 0f       	add	r24, r24
     eb4:	99 1f       	adc	r25, r25
     eb6:	e8 0f       	add	r30, r24
     eb8:	f9 1f       	adc	r31, r25
     eba:	e0 0f       	add	r30, r16
     ebc:	f1 1f       	adc	r31, r17
     ebe:	ee 0f       	add	r30, r30
     ec0:	ff 1f       	adc	r31, r31
     ec2:	e4 0f       	add	r30, r20
     ec4:	f5 1f       	adc	r31, r21
     ec6:	80 81       	ld	r24, Z
     ec8:	91 81       	ldd	r25, Z+1	; 0x01
     eca:	8d 93       	st	X+, r24
     ecc:	9c 93       	st	X, r25
				chess[filew8][rankw8]=00;
     ece:	c9 01       	movw	r24, r18
     ed0:	9c 01       	movw	r18, r24
     ed2:	a3 e0       	ldi	r26, 0x03	; 3
     ed4:	22 0f       	add	r18, r18
     ed6:	33 1f       	adc	r19, r19
     ed8:	aa 95       	dec	r26
     eda:	e1 f7       	brne	.-8      	; 0xed4 <main+0x666>
     edc:	88 0f       	add	r24, r24
     ede:	99 1f       	adc	r25, r25
     ee0:	28 0f       	add	r18, r24
     ee2:	39 1f       	adc	r19, r25
     ee4:	20 0f       	add	r18, r16
     ee6:	31 1f       	adc	r19, r17
     ee8:	22 0f       	add	r18, r18
     eea:	33 1f       	adc	r19, r19
     eec:	42 0f       	add	r20, r18
     eee:	53 1f       	adc	r21, r19
     ef0:	fa 01       	movw	r30, r20
     ef2:	11 82       	std	Z+1, r1	; 0x01
     ef4:	10 82       	st	Z, r1
				filew8=file;
     ef6:	60 93 71 00 	sts	0x0071, r22
     efa:	70 93 72 00 	sts	0x0072, r23
     efe:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
		}
		
		else if(moves%2==1)
     f02:	62 e0       	ldi	r22, 0x02	; 2
     f04:	70 e0       	ldi	r23, 0x00	; 0
     f06:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
     f0a:	01 97       	sbiw	r24, 0x01	; 1
     f0c:	11 f0       	breq	.+4      	; 0xf12 <main+0x6a4>
     f0e:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
		{
			if(fileb1==file&&rankb1!=rank)
     f12:	80 91 75 00 	lds	r24, 0x0075
     f16:	90 91 76 00 	lds	r25, 0x0076
     f1a:	20 91 93 01 	lds	r18, 0x0193
     f1e:	30 91 94 01 	lds	r19, 0x0194
     f22:	60 91 a3 01 	lds	r22, 0x01A3
     f26:	70 91 a4 01 	lds	r23, 0x01A4
     f2a:	00 91 77 00 	lds	r16, 0x0077
     f2e:	10 91 78 00 	lds	r17, 0x0078
     f32:	82 17       	cp	r24, r18
     f34:	93 07       	cpc	r25, r19
     f36:	09 f0       	breq	.+2      	; 0xf3a <main+0x6cc>
     f38:	5f c0       	rjmp	.+190    	; 0xff8 <main+0x78a>
     f3a:	06 17       	cp	r16, r22
     f3c:	17 07       	cpc	r17, r23
     f3e:	09 f4       	brne	.+2      	; 0xf42 <main+0x6d4>
     f40:	bb c0       	rjmp	.+374    	; 0x10b8 <main+0x84a>
			{
				x2=file;	x1=x2;
     f42:	90 93 92 01 	sts	0x0192, r25
     f46:	80 93 91 01 	sts	0x0191, r24
     f4a:	90 93 a2 01 	sts	0x01A2, r25
     f4e:	80 93 a1 01 	sts	0x01A1, r24
				y2=rank;	y1=rankb1;
     f52:	70 93 90 01 	sts	0x0190, r23
     f56:	60 93 8f 01 	sts	0x018F, r22
     f5a:	10 93 a8 01 	sts	0x01A8, r17
     f5e:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[fileb1][rankb1];
     f62:	20 91 75 00 	lds	r18, 0x0075
     f66:	30 91 76 00 	lds	r19, 0x0076
     f6a:	80 91 93 01 	lds	r24, 0x0193
     f6e:	90 91 94 01 	lds	r25, 0x0194
     f72:	dc 01       	movw	r26, r24
     f74:	53 e0       	ldi	r21, 0x03	; 3
     f76:	aa 0f       	add	r26, r26
     f78:	bb 1f       	adc	r27, r27
     f7a:	5a 95       	dec	r21
     f7c:	e1 f7       	brne	.-8      	; 0xf76 <main+0x708>
     f7e:	88 0f       	add	r24, r24
     f80:	99 1f       	adc	r25, r25
     f82:	a8 0f       	add	r26, r24
     f84:	b9 1f       	adc	r27, r25
     f86:	a6 0f       	add	r26, r22
     f88:	b7 1f       	adc	r27, r23
     f8a:	aa 0f       	add	r26, r26
     f8c:	bb 1f       	adc	r27, r27
     f8e:	ae 01       	movw	r20, r28
     f90:	4f 5f       	subi	r20, 0xFF	; 255
     f92:	5f 4f       	sbci	r21, 0xFF	; 255
     f94:	a4 0f       	add	r26, r20
     f96:	b5 1f       	adc	r27, r21
     f98:	c9 01       	movw	r24, r18
     f9a:	fc 01       	movw	r30, r24
     f9c:	ee 0f       	add	r30, r30
     f9e:	ff 1f       	adc	r31, r31
     fa0:	ee 0f       	add	r30, r30
     fa2:	ff 1f       	adc	r31, r31
     fa4:	ee 0f       	add	r30, r30
     fa6:	ff 1f       	adc	r31, r31
     fa8:	88 0f       	add	r24, r24
     faa:	99 1f       	adc	r25, r25
     fac:	e8 0f       	add	r30, r24
     fae:	f9 1f       	adc	r31, r25
     fb0:	e0 0f       	add	r30, r16
     fb2:	f1 1f       	adc	r31, r17
     fb4:	ee 0f       	add	r30, r30
     fb6:	ff 1f       	adc	r31, r31
     fb8:	e4 0f       	add	r30, r20
     fba:	f5 1f       	adc	r31, r21
     fbc:	80 81       	ld	r24, Z
     fbe:	91 81       	ldd	r25, Z+1	; 0x01
     fc0:	8d 93       	st	X+, r24
     fc2:	9c 93       	st	X, r25
				chess[fileb1][rankb1]=00;
     fc4:	c9 01       	movw	r24, r18
     fc6:	9c 01       	movw	r18, r24
     fc8:	a3 e0       	ldi	r26, 0x03	; 3
     fca:	22 0f       	add	r18, r18
     fcc:	33 1f       	adc	r19, r19
     fce:	aa 95       	dec	r26
     fd0:	e1 f7       	brne	.-8      	; 0xfca <main+0x75c>
     fd2:	88 0f       	add	r24, r24
     fd4:	99 1f       	adc	r25, r25
     fd6:	28 0f       	add	r18, r24
     fd8:	39 1f       	adc	r19, r25
     fda:	20 0f       	add	r18, r16
     fdc:	31 1f       	adc	r19, r17
     fde:	22 0f       	add	r18, r18
     fe0:	33 1f       	adc	r19, r19
     fe2:	42 0f       	add	r20, r18
     fe4:	53 1f       	adc	r21, r19
     fe6:	fa 01       	movw	r30, r20
     fe8:	11 82       	std	Z+1, r1	; 0x01
     fea:	10 82       	st	Z, r1
				rankb1=rank;
     fec:	70 93 78 00 	sts	0x0078, r23
     ff0:	60 93 77 00 	sts	0x0077, r22
     ff4:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			else if(fileb1!=file&&rankb1==rank)
     ff8:	06 17       	cp	r16, r22
     ffa:	17 07       	cpc	r17, r23
     ffc:	09 f0       	breq	.+2      	; 0x1000 <main+0x792>
     ffe:	5c c0       	rjmp	.+184    	; 0x10b8 <main+0x84a>
			{
				x2=file;	x1=fileb1;
    1000:	30 93 92 01 	sts	0x0192, r19
    1004:	20 93 91 01 	sts	0x0191, r18
    1008:	90 93 a2 01 	sts	0x01A2, r25
    100c:	80 93 a1 01 	sts	0x01A1, r24
				y2=rank;	y1=y2;
    1010:	10 93 90 01 	sts	0x0190, r17
    1014:	00 93 8f 01 	sts	0x018F, r16
    1018:	10 93 a8 01 	sts	0x01A8, r17
    101c:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[fileb1][rankb1];
    1020:	60 91 93 01 	lds	r22, 0x0193
    1024:	70 91 94 01 	lds	r23, 0x0194
    1028:	20 91 75 00 	lds	r18, 0x0075
    102c:	30 91 76 00 	lds	r19, 0x0076
    1030:	cb 01       	movw	r24, r22
    1032:	dc 01       	movw	r26, r24
    1034:	53 e0       	ldi	r21, 0x03	; 3
    1036:	aa 0f       	add	r26, r26
    1038:	bb 1f       	adc	r27, r27
    103a:	5a 95       	dec	r21
    103c:	e1 f7       	brne	.-8      	; 0x1036 <main+0x7c8>
    103e:	88 0f       	add	r24, r24
    1040:	99 1f       	adc	r25, r25
    1042:	a8 0f       	add	r26, r24
    1044:	b9 1f       	adc	r27, r25
    1046:	a0 0f       	add	r26, r16
    1048:	b1 1f       	adc	r27, r17
    104a:	aa 0f       	add	r26, r26
    104c:	bb 1f       	adc	r27, r27
    104e:	ae 01       	movw	r20, r28
    1050:	4f 5f       	subi	r20, 0xFF	; 255
    1052:	5f 4f       	sbci	r21, 0xFF	; 255
    1054:	a4 0f       	add	r26, r20
    1056:	b5 1f       	adc	r27, r21
    1058:	c9 01       	movw	r24, r18
    105a:	fc 01       	movw	r30, r24
    105c:	ee 0f       	add	r30, r30
    105e:	ff 1f       	adc	r31, r31
    1060:	ee 0f       	add	r30, r30
    1062:	ff 1f       	adc	r31, r31
    1064:	ee 0f       	add	r30, r30
    1066:	ff 1f       	adc	r31, r31
    1068:	88 0f       	add	r24, r24
    106a:	99 1f       	adc	r25, r25
    106c:	e8 0f       	add	r30, r24
    106e:	f9 1f       	adc	r31, r25
    1070:	e0 0f       	add	r30, r16
    1072:	f1 1f       	adc	r31, r17
    1074:	ee 0f       	add	r30, r30
    1076:	ff 1f       	adc	r31, r31
    1078:	e4 0f       	add	r30, r20
    107a:	f5 1f       	adc	r31, r21
    107c:	80 81       	ld	r24, Z
    107e:	91 81       	ldd	r25, Z+1	; 0x01
    1080:	8d 93       	st	X+, r24
    1082:	9c 93       	st	X, r25
				chess[fileb1][rankb1]=00;
    1084:	c9 01       	movw	r24, r18
    1086:	9c 01       	movw	r18, r24
    1088:	a3 e0       	ldi	r26, 0x03	; 3
    108a:	22 0f       	add	r18, r18
    108c:	33 1f       	adc	r19, r19
    108e:	aa 95       	dec	r26
    1090:	e1 f7       	brne	.-8      	; 0x108a <main+0x81c>
    1092:	88 0f       	add	r24, r24
    1094:	99 1f       	adc	r25, r25
    1096:	28 0f       	add	r18, r24
    1098:	39 1f       	adc	r19, r25
    109a:	20 0f       	add	r18, r16
    109c:	31 1f       	adc	r19, r17
    109e:	22 0f       	add	r18, r18
    10a0:	33 1f       	adc	r19, r19
    10a2:	42 0f       	add	r20, r18
    10a4:	53 1f       	adc	r21, r19
    10a6:	fa 01       	movw	r30, r20
    10a8:	11 82       	std	Z+1, r1	; 0x01
    10aa:	10 82       	st	Z, r1
				fileb1=file;
    10ac:	60 93 75 00 	sts	0x0075, r22
    10b0:	70 93 76 00 	sts	0x0076, r23
    10b4:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			
			else if(fileb8==file&&rankb8!=rank)
    10b8:	80 91 79 00 	lds	r24, 0x0079
    10bc:	90 91 7a 00 	lds	r25, 0x007A
    10c0:	60 91 a3 01 	lds	r22, 0x01A3
    10c4:	70 91 a4 01 	lds	r23, 0x01A4
    10c8:	00 91 7b 00 	lds	r16, 0x007B
    10cc:	10 91 7c 00 	lds	r17, 0x007C
    10d0:	82 17       	cp	r24, r18
    10d2:	93 07       	cpc	r25, r19
    10d4:	09 f0       	breq	.+2      	; 0x10d8 <main+0x86a>
    10d6:	60 c0       	rjmp	.+192    	; 0x1198 <main+0x92a>
    10d8:	06 17       	cp	r16, r22
    10da:	17 07       	cpc	r17, r23
    10dc:	11 f4       	brne	.+4      	; 0x10e2 <main+0x874>
    10de:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				x2=file;	x1=x2;
    10e2:	30 93 92 01 	sts	0x0192, r19
    10e6:	20 93 91 01 	sts	0x0191, r18
    10ea:	30 93 a2 01 	sts	0x01A2, r19
    10ee:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=rankb8;
    10f2:	70 93 90 01 	sts	0x0190, r23
    10f6:	60 93 8f 01 	sts	0x018F, r22
    10fa:	10 93 a8 01 	sts	0x01A8, r17
    10fe:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[fileb8][rankb8];
    1102:	20 91 79 00 	lds	r18, 0x0079
    1106:	30 91 7a 00 	lds	r19, 0x007A
    110a:	80 91 93 01 	lds	r24, 0x0193
    110e:	90 91 94 01 	lds	r25, 0x0194
    1112:	dc 01       	movw	r26, r24
    1114:	53 e0       	ldi	r21, 0x03	; 3
    1116:	aa 0f       	add	r26, r26
    1118:	bb 1f       	adc	r27, r27
    111a:	5a 95       	dec	r21
    111c:	e1 f7       	brne	.-8      	; 0x1116 <main+0x8a8>
    111e:	88 0f       	add	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	a8 0f       	add	r26, r24
    1124:	b9 1f       	adc	r27, r25
    1126:	a6 0f       	add	r26, r22
    1128:	b7 1f       	adc	r27, r23
    112a:	aa 0f       	add	r26, r26
    112c:	bb 1f       	adc	r27, r27
    112e:	ae 01       	movw	r20, r28
    1130:	4f 5f       	subi	r20, 0xFF	; 255
    1132:	5f 4f       	sbci	r21, 0xFF	; 255
    1134:	a4 0f       	add	r26, r20
    1136:	b5 1f       	adc	r27, r21
    1138:	c9 01       	movw	r24, r18
    113a:	fc 01       	movw	r30, r24
    113c:	ee 0f       	add	r30, r30
    113e:	ff 1f       	adc	r31, r31
    1140:	ee 0f       	add	r30, r30
    1142:	ff 1f       	adc	r31, r31
    1144:	ee 0f       	add	r30, r30
    1146:	ff 1f       	adc	r31, r31
    1148:	88 0f       	add	r24, r24
    114a:	99 1f       	adc	r25, r25
    114c:	e8 0f       	add	r30, r24
    114e:	f9 1f       	adc	r31, r25
    1150:	e0 0f       	add	r30, r16
    1152:	f1 1f       	adc	r31, r17
    1154:	ee 0f       	add	r30, r30
    1156:	ff 1f       	adc	r31, r31
    1158:	e4 0f       	add	r30, r20
    115a:	f5 1f       	adc	r31, r21
    115c:	80 81       	ld	r24, Z
    115e:	91 81       	ldd	r25, Z+1	; 0x01
    1160:	8d 93       	st	X+, r24
    1162:	9c 93       	st	X, r25
				chess[fileb8][rankb8]=00;
    1164:	c9 01       	movw	r24, r18
    1166:	9c 01       	movw	r18, r24
    1168:	a3 e0       	ldi	r26, 0x03	; 3
    116a:	22 0f       	add	r18, r18
    116c:	33 1f       	adc	r19, r19
    116e:	aa 95       	dec	r26
    1170:	e1 f7       	brne	.-8      	; 0x116a <main+0x8fc>
    1172:	88 0f       	add	r24, r24
    1174:	99 1f       	adc	r25, r25
    1176:	28 0f       	add	r18, r24
    1178:	39 1f       	adc	r19, r25
    117a:	20 0f       	add	r18, r16
    117c:	31 1f       	adc	r19, r17
    117e:	22 0f       	add	r18, r18
    1180:	33 1f       	adc	r19, r19
    1182:	42 0f       	add	r20, r18
    1184:	53 1f       	adc	r21, r19
    1186:	fa 01       	movw	r30, r20
    1188:	11 82       	std	Z+1, r1	; 0x01
    118a:	10 82       	st	Z, r1
				rankb8=rank;
    118c:	70 93 7c 00 	sts	0x007C, r23
    1190:	60 93 7b 00 	sts	0x007B, r22
    1194:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			else if(fileb8!=file&&rankb8==rank)
    1198:	06 17       	cp	r16, r22
    119a:	17 07       	cpc	r17, r23
    119c:	11 f0       	breq	.+4      	; 0x11a2 <main+0x934>
    119e:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				x2=file;	x1=fileb8;
    11a2:	30 93 92 01 	sts	0x0192, r19
    11a6:	20 93 91 01 	sts	0x0191, r18
    11aa:	90 93 a2 01 	sts	0x01A2, r25
    11ae:	80 93 a1 01 	sts	0x01A1, r24
				y2=rank;	y1=y2;
    11b2:	10 93 90 01 	sts	0x0190, r17
    11b6:	00 93 8f 01 	sts	0x018F, r16
    11ba:	10 93 a8 01 	sts	0x01A8, r17
    11be:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[fileb8][rankb8];
    11c2:	60 91 93 01 	lds	r22, 0x0193
    11c6:	70 91 94 01 	lds	r23, 0x0194
    11ca:	20 91 79 00 	lds	r18, 0x0079
    11ce:	30 91 7a 00 	lds	r19, 0x007A
    11d2:	cb 01       	movw	r24, r22
    11d4:	dc 01       	movw	r26, r24
    11d6:	53 e0       	ldi	r21, 0x03	; 3
    11d8:	aa 0f       	add	r26, r26
    11da:	bb 1f       	adc	r27, r27
    11dc:	5a 95       	dec	r21
    11de:	e1 f7       	brne	.-8      	; 0x11d8 <main+0x96a>
    11e0:	88 0f       	add	r24, r24
    11e2:	99 1f       	adc	r25, r25
    11e4:	a8 0f       	add	r26, r24
    11e6:	b9 1f       	adc	r27, r25
    11e8:	a0 0f       	add	r26, r16
    11ea:	b1 1f       	adc	r27, r17
    11ec:	aa 0f       	add	r26, r26
    11ee:	bb 1f       	adc	r27, r27
    11f0:	ae 01       	movw	r20, r28
    11f2:	4f 5f       	subi	r20, 0xFF	; 255
    11f4:	5f 4f       	sbci	r21, 0xFF	; 255
    11f6:	a4 0f       	add	r26, r20
    11f8:	b5 1f       	adc	r27, r21
    11fa:	c9 01       	movw	r24, r18
    11fc:	fc 01       	movw	r30, r24
    11fe:	ee 0f       	add	r30, r30
    1200:	ff 1f       	adc	r31, r31
    1202:	ee 0f       	add	r30, r30
    1204:	ff 1f       	adc	r31, r31
    1206:	ee 0f       	add	r30, r30
    1208:	ff 1f       	adc	r31, r31
    120a:	88 0f       	add	r24, r24
    120c:	99 1f       	adc	r25, r25
    120e:	e8 0f       	add	r30, r24
    1210:	f9 1f       	adc	r31, r25
    1212:	e0 0f       	add	r30, r16
    1214:	f1 1f       	adc	r31, r17
    1216:	ee 0f       	add	r30, r30
    1218:	ff 1f       	adc	r31, r31
    121a:	e4 0f       	add	r30, r20
    121c:	f5 1f       	adc	r31, r21
    121e:	80 81       	ld	r24, Z
    1220:	91 81       	ldd	r25, Z+1	; 0x01
    1222:	8d 93       	st	X+, r24
    1224:	9c 93       	st	X, r25
				chess[fileb8][rankb8]=00;
    1226:	c9 01       	movw	r24, r18
    1228:	9c 01       	movw	r18, r24
    122a:	a3 e0       	ldi	r26, 0x03	; 3
    122c:	22 0f       	add	r18, r18
    122e:	33 1f       	adc	r19, r19
    1230:	aa 95       	dec	r26
    1232:	e1 f7       	brne	.-8      	; 0x122c <main+0x9be>
    1234:	88 0f       	add	r24, r24
    1236:	99 1f       	adc	r25, r25
    1238:	28 0f       	add	r18, r24
    123a:	39 1f       	adc	r19, r25
    123c:	20 0f       	add	r18, r16
    123e:	31 1f       	adc	r19, r17
    1240:	22 0f       	add	r18, r18
    1242:	33 1f       	adc	r19, r19
    1244:	42 0f       	add	r20, r18
    1246:	53 1f       	adc	r21, r19
    1248:	fa 01       	movw	r30, r20
    124a:	11 82       	std	Z+1, r1	; 0x01
    124c:	10 82       	st	Z, r1
				fileb8=file;
    124e:	60 93 79 00 	sts	0x0079, r22
    1252:	70 93 7a 00 	sts	0x007A, r23
    1256:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
		}
		goto END;
	}
	
	else if(letter==1)	//ASCII OF BISHOP
    125a:	81 30       	cpi	r24, 0x01	; 1
    125c:	91 05       	cpc	r25, r1
    125e:	09 f0       	breq	.+2      	; 0x1262 <main+0x9f4>
    1260:	04 c2       	rjmp	.+1032   	; 0x166a <main+0xdfc>
	{
		BISHOP:
		bishop=1;
    1262:	81 e0       	ldi	r24, 0x01	; 1
    1264:	90 e0       	ldi	r25, 0x00	; 0
    1266:	90 93 76 01 	sts	0x0176, r25
    126a:	80 93 75 01 	sts	0x0175, r24
		check_color();
    126e:	0e 94 9b 03 	call	0x736	; 0x736 <check_color>
		
		if(moves%2==0)							//WHITE BISHOP
    1272:	80 91 6f 01 	lds	r24, 0x016F
    1276:	90 91 70 01 	lds	r25, 0x0170
    127a:	80 fd       	sbrc	r24, 0
    127c:	f7 c0       	rjmp	.+494    	; 0x146c <main+0xbfe>
		{
			if(color==bc1_color)
    127e:	20 91 9f 01 	lds	r18, 0x019F
    1282:	30 91 a0 01 	lds	r19, 0x01A0
    1286:	80 91 7f 01 	lds	r24, 0x017F
    128a:	90 91 80 01 	lds	r25, 0x0180
    128e:	28 17       	cp	r18, r24
    1290:	39 07       	cpc	r19, r25
    1292:	09 f0       	breq	.+2      	; 0x1296 <main+0xa28>
    1294:	71 c0       	rjmp	.+226    	; 0x1378 <main+0xb0a>
			{
				x2=rank;	x1=rankw3;
    1296:	00 91 a3 01 	lds	r16, 0x01A3
    129a:	10 91 a4 01 	lds	r17, 0x01A4
    129e:	10 93 92 01 	sts	0x0192, r17
    12a2:	00 93 91 01 	sts	0x0191, r16
    12a6:	60 91 7f 00 	lds	r22, 0x007F
    12aa:	70 91 80 00 	lds	r23, 0x0080
    12ae:	70 93 a2 01 	sts	0x01A2, r23
    12b2:	60 93 a1 01 	sts	0x01A1, r22
				y2=file;	y1=filew3;
    12b6:	80 91 93 01 	lds	r24, 0x0193
    12ba:	90 91 94 01 	lds	r25, 0x0194
    12be:	90 93 90 01 	sts	0x0190, r25
    12c2:	80 93 8f 01 	sts	0x018F, r24
    12c6:	80 91 7d 00 	lds	r24, 0x007D
    12ca:	90 91 7e 00 	lds	r25, 0x007E
    12ce:	90 93 a8 01 	sts	0x01A8, r25
    12d2:	80 93 a7 01 	sts	0x01A7, r24
				
				chess[file][rank]=chess[filew3][rankw3];
    12d6:	f0 90 93 01 	lds	r15, 0x0193
    12da:	e0 90 94 01 	lds	r14, 0x0194
    12de:	20 91 7d 00 	lds	r18, 0x007D
    12e2:	30 91 7e 00 	lds	r19, 0x007E
    12e6:	8f 2d       	mov	r24, r15
    12e8:	9e 2d       	mov	r25, r14
    12ea:	dc 01       	movw	r26, r24
    12ec:	53 e0       	ldi	r21, 0x03	; 3
    12ee:	aa 0f       	add	r26, r26
    12f0:	bb 1f       	adc	r27, r27
    12f2:	5a 95       	dec	r21
    12f4:	e1 f7       	brne	.-8      	; 0x12ee <main+0xa80>
    12f6:	88 0f       	add	r24, r24
    12f8:	99 1f       	adc	r25, r25
    12fa:	a8 0f       	add	r26, r24
    12fc:	b9 1f       	adc	r27, r25
    12fe:	a0 0f       	add	r26, r16
    1300:	b1 1f       	adc	r27, r17
    1302:	aa 0f       	add	r26, r26
    1304:	bb 1f       	adc	r27, r27
    1306:	ae 01       	movw	r20, r28
    1308:	4f 5f       	subi	r20, 0xFF	; 255
    130a:	5f 4f       	sbci	r21, 0xFF	; 255
    130c:	a4 0f       	add	r26, r20
    130e:	b5 1f       	adc	r27, r21
    1310:	c9 01       	movw	r24, r18
    1312:	fc 01       	movw	r30, r24
    1314:	ee 0f       	add	r30, r30
    1316:	ff 1f       	adc	r31, r31
    1318:	ee 0f       	add	r30, r30
    131a:	ff 1f       	adc	r31, r31
    131c:	ee 0f       	add	r30, r30
    131e:	ff 1f       	adc	r31, r31
    1320:	88 0f       	add	r24, r24
    1322:	99 1f       	adc	r25, r25
    1324:	e8 0f       	add	r30, r24
    1326:	f9 1f       	adc	r31, r25
    1328:	e6 0f       	add	r30, r22
    132a:	f7 1f       	adc	r31, r23
    132c:	ee 0f       	add	r30, r30
    132e:	ff 1f       	adc	r31, r31
    1330:	e4 0f       	add	r30, r20
    1332:	f5 1f       	adc	r31, r21
    1334:	80 81       	ld	r24, Z
    1336:	91 81       	ldd	r25, Z+1	; 0x01
    1338:	8d 93       	st	X+, r24
    133a:	9c 93       	st	X, r25
				chess[filew3][rankw3]=00;
    133c:	c9 01       	movw	r24, r18
    133e:	9c 01       	movw	r18, r24
    1340:	f3 e0       	ldi	r31, 0x03	; 3
    1342:	22 0f       	add	r18, r18
    1344:	33 1f       	adc	r19, r19
    1346:	fa 95       	dec	r31
    1348:	e1 f7       	brne	.-8      	; 0x1342 <main+0xad4>
    134a:	88 0f       	add	r24, r24
    134c:	99 1f       	adc	r25, r25
    134e:	28 0f       	add	r18, r24
    1350:	39 1f       	adc	r19, r25
    1352:	26 0f       	add	r18, r22
    1354:	37 1f       	adc	r19, r23
    1356:	22 0f       	add	r18, r18
    1358:	33 1f       	adc	r19, r19
    135a:	42 0f       	add	r20, r18
    135c:	53 1f       	adc	r21, r19
    135e:	fa 01       	movw	r30, r20
    1360:	11 82       	std	Z+1, r1	; 0x01
    1362:	10 82       	st	Z, r1
				filew3=file;rankw3=rank;
    1364:	f0 92 7d 00 	sts	0x007D, r15
    1368:	e0 92 7e 00 	sts	0x007E, r14
    136c:	10 93 80 00 	sts	0x0080, r17
    1370:	00 93 7f 00 	sts	0x007F, r16
    1374:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			else if(color==bf1_color)
    1378:	80 91 8d 00 	lds	r24, 0x008D
    137c:	90 91 8e 00 	lds	r25, 0x008E
    1380:	28 17       	cp	r18, r24
    1382:	39 07       	cpc	r19, r25
    1384:	11 f0       	breq	.+4      	; 0x138a <main+0xb1c>
    1386:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				x2=rank;	x1=rankw6;
    138a:	00 91 a3 01 	lds	r16, 0x01A3
    138e:	10 91 a4 01 	lds	r17, 0x01A4
    1392:	10 93 92 01 	sts	0x0192, r17
    1396:	00 93 91 01 	sts	0x0191, r16
    139a:	60 91 83 00 	lds	r22, 0x0083
    139e:	70 91 84 00 	lds	r23, 0x0084
    13a2:	70 93 a2 01 	sts	0x01A2, r23
    13a6:	60 93 a1 01 	sts	0x01A1, r22
				y2=file;	y1=filew6;
    13aa:	80 91 93 01 	lds	r24, 0x0193
    13ae:	90 91 94 01 	lds	r25, 0x0194
    13b2:	90 93 90 01 	sts	0x0190, r25
    13b6:	80 93 8f 01 	sts	0x018F, r24
    13ba:	80 91 81 00 	lds	r24, 0x0081
    13be:	90 91 82 00 	lds	r25, 0x0082
    13c2:	90 93 a8 01 	sts	0x01A8, r25
    13c6:	80 93 a7 01 	sts	0x01A7, r24
				chess[file][rank]=chess[filew6][rankw6];
    13ca:	f0 90 93 01 	lds	r15, 0x0193
    13ce:	e0 90 94 01 	lds	r14, 0x0194
    13d2:	20 91 81 00 	lds	r18, 0x0081
    13d6:	30 91 82 00 	lds	r19, 0x0082
    13da:	8f 2d       	mov	r24, r15
    13dc:	9e 2d       	mov	r25, r14
    13de:	dc 01       	movw	r26, r24
    13e0:	53 e0       	ldi	r21, 0x03	; 3
    13e2:	aa 0f       	add	r26, r26
    13e4:	bb 1f       	adc	r27, r27
    13e6:	5a 95       	dec	r21
    13e8:	e1 f7       	brne	.-8      	; 0x13e2 <main+0xb74>
    13ea:	88 0f       	add	r24, r24
    13ec:	99 1f       	adc	r25, r25
    13ee:	a8 0f       	add	r26, r24
    13f0:	b9 1f       	adc	r27, r25
    13f2:	a0 0f       	add	r26, r16
    13f4:	b1 1f       	adc	r27, r17
    13f6:	aa 0f       	add	r26, r26
    13f8:	bb 1f       	adc	r27, r27
    13fa:	ae 01       	movw	r20, r28
    13fc:	4f 5f       	subi	r20, 0xFF	; 255
    13fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1400:	a4 0f       	add	r26, r20
    1402:	b5 1f       	adc	r27, r21
    1404:	c9 01       	movw	r24, r18
    1406:	fc 01       	movw	r30, r24
    1408:	ee 0f       	add	r30, r30
    140a:	ff 1f       	adc	r31, r31
    140c:	ee 0f       	add	r30, r30
    140e:	ff 1f       	adc	r31, r31
    1410:	ee 0f       	add	r30, r30
    1412:	ff 1f       	adc	r31, r31
    1414:	88 0f       	add	r24, r24
    1416:	99 1f       	adc	r25, r25
    1418:	e8 0f       	add	r30, r24
    141a:	f9 1f       	adc	r31, r25
    141c:	e6 0f       	add	r30, r22
    141e:	f7 1f       	adc	r31, r23
    1420:	ee 0f       	add	r30, r30
    1422:	ff 1f       	adc	r31, r31
    1424:	e4 0f       	add	r30, r20
    1426:	f5 1f       	adc	r31, r21
    1428:	80 81       	ld	r24, Z
    142a:	91 81       	ldd	r25, Z+1	; 0x01
    142c:	8d 93       	st	X+, r24
    142e:	9c 93       	st	X, r25
				chess[filew6][rankw6]=00;
    1430:	c9 01       	movw	r24, r18
    1432:	9c 01       	movw	r18, r24
    1434:	f3 e0       	ldi	r31, 0x03	; 3
    1436:	22 0f       	add	r18, r18
    1438:	33 1f       	adc	r19, r19
    143a:	fa 95       	dec	r31
    143c:	e1 f7       	brne	.-8      	; 0x1436 <main+0xbc8>
    143e:	88 0f       	add	r24, r24
    1440:	99 1f       	adc	r25, r25
    1442:	28 0f       	add	r18, r24
    1444:	39 1f       	adc	r19, r25
    1446:	26 0f       	add	r18, r22
    1448:	37 1f       	adc	r19, r23
    144a:	22 0f       	add	r18, r18
    144c:	33 1f       	adc	r19, r19
    144e:	42 0f       	add	r20, r18
    1450:	53 1f       	adc	r21, r19
    1452:	fa 01       	movw	r30, r20
    1454:	11 82       	std	Z+1, r1	; 0x01
    1456:	10 82       	st	Z, r1
				filew6=file;rankw6=rank;
    1458:	f0 92 81 00 	sts	0x0081, r15
    145c:	e0 92 82 00 	sts	0x0082, r14
    1460:	10 93 84 00 	sts	0x0084, r17
    1464:	00 93 83 00 	sts	0x0083, r16
    1468:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
		}
		
		else if(moves%2==1)							//BLACK BISHOP
    146c:	62 e0       	ldi	r22, 0x02	; 2
    146e:	70 e0       	ldi	r23, 0x00	; 0
    1470:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    1474:	01 97       	sbiw	r24, 0x01	; 1
    1476:	11 f0       	breq	.+4      	; 0x147c <main+0xc0e>
    1478:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
		{
			if(color==bc8_color)
    147c:	20 91 9f 01 	lds	r18, 0x019F
    1480:	30 91 a0 01 	lds	r19, 0x01A0
    1484:	80 91 8f 00 	lds	r24, 0x008F
    1488:	90 91 90 00 	lds	r25, 0x0090
    148c:	28 17       	cp	r18, r24
    148e:	39 07       	cpc	r19, r25
    1490:	09 f0       	breq	.+2      	; 0x1494 <main+0xc26>
    1492:	71 c0       	rjmp	.+226    	; 0x1576 <main+0xd08>
			{
				x2=rank;	x1=rankb3;
    1494:	00 91 a3 01 	lds	r16, 0x01A3
    1498:	10 91 a4 01 	lds	r17, 0x01A4
    149c:	10 93 92 01 	sts	0x0192, r17
    14a0:	00 93 91 01 	sts	0x0191, r16
    14a4:	60 91 87 00 	lds	r22, 0x0087
    14a8:	70 91 88 00 	lds	r23, 0x0088
    14ac:	70 93 a2 01 	sts	0x01A2, r23
    14b0:	60 93 a1 01 	sts	0x01A1, r22
				y2=file;	y1=fileb3;
    14b4:	80 91 93 01 	lds	r24, 0x0193
    14b8:	90 91 94 01 	lds	r25, 0x0194
    14bc:	90 93 90 01 	sts	0x0190, r25
    14c0:	80 93 8f 01 	sts	0x018F, r24
    14c4:	80 91 85 00 	lds	r24, 0x0085
    14c8:	90 91 86 00 	lds	r25, 0x0086
    14cc:	90 93 a8 01 	sts	0x01A8, r25
    14d0:	80 93 a7 01 	sts	0x01A7, r24
				
				chess[file][rank]=chess[fileb3][rankb3];
    14d4:	f0 90 93 01 	lds	r15, 0x0193
    14d8:	e0 90 94 01 	lds	r14, 0x0194
    14dc:	20 91 85 00 	lds	r18, 0x0085
    14e0:	30 91 86 00 	lds	r19, 0x0086
    14e4:	8f 2d       	mov	r24, r15
    14e6:	9e 2d       	mov	r25, r14
    14e8:	dc 01       	movw	r26, r24
    14ea:	53 e0       	ldi	r21, 0x03	; 3
    14ec:	aa 0f       	add	r26, r26
    14ee:	bb 1f       	adc	r27, r27
    14f0:	5a 95       	dec	r21
    14f2:	e1 f7       	brne	.-8      	; 0x14ec <main+0xc7e>
    14f4:	88 0f       	add	r24, r24
    14f6:	99 1f       	adc	r25, r25
    14f8:	a8 0f       	add	r26, r24
    14fa:	b9 1f       	adc	r27, r25
    14fc:	a0 0f       	add	r26, r16
    14fe:	b1 1f       	adc	r27, r17
    1500:	aa 0f       	add	r26, r26
    1502:	bb 1f       	adc	r27, r27
    1504:	ae 01       	movw	r20, r28
    1506:	4f 5f       	subi	r20, 0xFF	; 255
    1508:	5f 4f       	sbci	r21, 0xFF	; 255
    150a:	a4 0f       	add	r26, r20
    150c:	b5 1f       	adc	r27, r21
    150e:	c9 01       	movw	r24, r18
    1510:	fc 01       	movw	r30, r24
    1512:	ee 0f       	add	r30, r30
    1514:	ff 1f       	adc	r31, r31
    1516:	ee 0f       	add	r30, r30
    1518:	ff 1f       	adc	r31, r31
    151a:	ee 0f       	add	r30, r30
    151c:	ff 1f       	adc	r31, r31
    151e:	88 0f       	add	r24, r24
    1520:	99 1f       	adc	r25, r25
    1522:	e8 0f       	add	r30, r24
    1524:	f9 1f       	adc	r31, r25
    1526:	e6 0f       	add	r30, r22
    1528:	f7 1f       	adc	r31, r23
    152a:	ee 0f       	add	r30, r30
    152c:	ff 1f       	adc	r31, r31
    152e:	e4 0f       	add	r30, r20
    1530:	f5 1f       	adc	r31, r21
    1532:	80 81       	ld	r24, Z
    1534:	91 81       	ldd	r25, Z+1	; 0x01
    1536:	8d 93       	st	X+, r24
    1538:	9c 93       	st	X, r25
				chess[fileb3][rankb3]=00;
    153a:	c9 01       	movw	r24, r18
    153c:	9c 01       	movw	r18, r24
    153e:	f3 e0       	ldi	r31, 0x03	; 3
    1540:	22 0f       	add	r18, r18
    1542:	33 1f       	adc	r19, r19
    1544:	fa 95       	dec	r31
    1546:	e1 f7       	brne	.-8      	; 0x1540 <main+0xcd2>
    1548:	88 0f       	add	r24, r24
    154a:	99 1f       	adc	r25, r25
    154c:	28 0f       	add	r18, r24
    154e:	39 1f       	adc	r19, r25
    1550:	26 0f       	add	r18, r22
    1552:	37 1f       	adc	r19, r23
    1554:	22 0f       	add	r18, r18
    1556:	33 1f       	adc	r19, r19
    1558:	42 0f       	add	r20, r18
    155a:	53 1f       	adc	r21, r19
    155c:	fa 01       	movw	r30, r20
    155e:	11 82       	std	Z+1, r1	; 0x01
    1560:	10 82       	st	Z, r1
				fileb3=file;rankb3=rank;
    1562:	f0 92 85 00 	sts	0x0085, r15
    1566:	e0 92 86 00 	sts	0x0086, r14
    156a:	10 93 88 00 	sts	0x0088, r17
    156e:	00 93 87 00 	sts	0x0087, r16
    1572:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
			else if(color==bf8_color)
    1576:	80 91 81 01 	lds	r24, 0x0181
    157a:	90 91 82 01 	lds	r25, 0x0182
    157e:	28 17       	cp	r18, r24
    1580:	39 07       	cpc	r19, r25
    1582:	11 f0       	breq	.+4      	; 0x1588 <main+0xd1a>
    1584:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				x2=rank;	x1=rankb6;
    1588:	00 91 a3 01 	lds	r16, 0x01A3
    158c:	10 91 a4 01 	lds	r17, 0x01A4
    1590:	10 93 92 01 	sts	0x0192, r17
    1594:	00 93 91 01 	sts	0x0191, r16
    1598:	60 91 8b 00 	lds	r22, 0x008B
    159c:	70 91 8c 00 	lds	r23, 0x008C
    15a0:	70 93 a2 01 	sts	0x01A2, r23
    15a4:	60 93 a1 01 	sts	0x01A1, r22
				y2=file;	y1=fileb6;
    15a8:	80 91 93 01 	lds	r24, 0x0193
    15ac:	90 91 94 01 	lds	r25, 0x0194
    15b0:	90 93 90 01 	sts	0x0190, r25
    15b4:	80 93 8f 01 	sts	0x018F, r24
    15b8:	80 91 89 00 	lds	r24, 0x0089
    15bc:	90 91 8a 00 	lds	r25, 0x008A
    15c0:	90 93 a8 01 	sts	0x01A8, r25
    15c4:	80 93 a7 01 	sts	0x01A7, r24
				chess[file][rank]=chess[fileb6][rankb6];
    15c8:	f0 90 93 01 	lds	r15, 0x0193
    15cc:	e0 90 94 01 	lds	r14, 0x0194
    15d0:	20 91 89 00 	lds	r18, 0x0089
    15d4:	30 91 8a 00 	lds	r19, 0x008A
    15d8:	8f 2d       	mov	r24, r15
    15da:	9e 2d       	mov	r25, r14
    15dc:	dc 01       	movw	r26, r24
    15de:	53 e0       	ldi	r21, 0x03	; 3
    15e0:	aa 0f       	add	r26, r26
    15e2:	bb 1f       	adc	r27, r27
    15e4:	5a 95       	dec	r21
    15e6:	e1 f7       	brne	.-8      	; 0x15e0 <main+0xd72>
    15e8:	88 0f       	add	r24, r24
    15ea:	99 1f       	adc	r25, r25
    15ec:	a8 0f       	add	r26, r24
    15ee:	b9 1f       	adc	r27, r25
    15f0:	a0 0f       	add	r26, r16
    15f2:	b1 1f       	adc	r27, r17
    15f4:	aa 0f       	add	r26, r26
    15f6:	bb 1f       	adc	r27, r27
    15f8:	ae 01       	movw	r20, r28
    15fa:	4f 5f       	subi	r20, 0xFF	; 255
    15fc:	5f 4f       	sbci	r21, 0xFF	; 255
    15fe:	a4 0f       	add	r26, r20
    1600:	b5 1f       	adc	r27, r21
    1602:	c9 01       	movw	r24, r18
    1604:	fc 01       	movw	r30, r24
    1606:	ee 0f       	add	r30, r30
    1608:	ff 1f       	adc	r31, r31
    160a:	ee 0f       	add	r30, r30
    160c:	ff 1f       	adc	r31, r31
    160e:	ee 0f       	add	r30, r30
    1610:	ff 1f       	adc	r31, r31
    1612:	88 0f       	add	r24, r24
    1614:	99 1f       	adc	r25, r25
    1616:	e8 0f       	add	r30, r24
    1618:	f9 1f       	adc	r31, r25
    161a:	e6 0f       	add	r30, r22
    161c:	f7 1f       	adc	r31, r23
    161e:	ee 0f       	add	r30, r30
    1620:	ff 1f       	adc	r31, r31
    1622:	e4 0f       	add	r30, r20
    1624:	f5 1f       	adc	r31, r21
    1626:	80 81       	ld	r24, Z
    1628:	91 81       	ldd	r25, Z+1	; 0x01
    162a:	8d 93       	st	X+, r24
    162c:	9c 93       	st	X, r25
				chess[fileb6][rankb6]=00;
    162e:	c9 01       	movw	r24, r18
    1630:	9c 01       	movw	r18, r24
    1632:	f3 e0       	ldi	r31, 0x03	; 3
    1634:	22 0f       	add	r18, r18
    1636:	33 1f       	adc	r19, r19
    1638:	fa 95       	dec	r31
    163a:	e1 f7       	brne	.-8      	; 0x1634 <main+0xdc6>
    163c:	88 0f       	add	r24, r24
    163e:	99 1f       	adc	r25, r25
    1640:	28 0f       	add	r18, r24
    1642:	39 1f       	adc	r19, r25
    1644:	26 0f       	add	r18, r22
    1646:	37 1f       	adc	r19, r23
    1648:	22 0f       	add	r18, r18
    164a:	33 1f       	adc	r19, r19
    164c:	42 0f       	add	r20, r18
    164e:	53 1f       	adc	r21, r19
    1650:	fa 01       	movw	r30, r20
    1652:	11 82       	std	Z+1, r1	; 0x01
    1654:	10 82       	st	Z, r1
				fileb6=file;rankb6=rank;
    1656:	f0 92 89 00 	sts	0x0089, r15
    165a:	e0 92 8a 00 	sts	0x008A, r14
    165e:	10 93 8c 00 	sts	0x008C, r17
    1662:	00 93 8b 00 	sts	0x008B, r16
    1666:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
		}
		goto END;
	}
	
	else if(letter==2)	//ASCII OF KING
    166a:	82 30       	cpi	r24, 0x02	; 2
    166c:	91 05       	cpc	r25, r1
    166e:	09 f0       	breq	.+2      	; 0x1672 <main+0xe04>
    1670:	ba c2       	rjmp	.+1396   	; 0x1be6 <main+0x1378>
	{
		KING:
		check_color();
    1672:	0e 94 9b 03 	call	0x736	; 0x736 <check_color>
		
		if(moves%2==0)
    1676:	80 91 6f 01 	lds	r24, 0x016F
    167a:	90 91 70 01 	lds	r25, 0x0170
    167e:	80 fd       	sbrc	r24, 0
    1680:	56 c1       	rjmp	.+684    	; 0x192e <main+0x10c0>
		{
			if(color!=ke1_color)						//WHITE KING as HROOK
    1682:	20 91 9f 01 	lds	r18, 0x019F
    1686:	30 91 a0 01 	lds	r19, 0x01A0
    168a:	80 91 83 01 	lds	r24, 0x0183
    168e:	90 91 84 01 	lds	r25, 0x0184
    1692:	e0 91 93 01 	lds	r30, 0x0193
    1696:	f0 91 94 01 	lds	r31, 0x0194
    169a:	40 91 91 00 	lds	r20, 0x0091
    169e:	50 91 92 00 	lds	r21, 0x0092
    16a2:	28 17       	cp	r18, r24
    16a4:	39 07       	cpc	r19, r25
    16a6:	09 f4       	brne	.+2      	; 0x16aa <main+0xe3c>
    16a8:	d3 c0       	rjmp	.+422    	; 0x1850 <main+0xfe2>
			{
				queen_hrook=1;
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	90 93 78 01 	sts	0x0178, r25
    16b2:	80 93 77 01 	sts	0x0177, r24
    16b6:	60 91 a3 01 	lds	r22, 0x01A3
    16ba:	70 91 a4 01 	lds	r23, 0x01A4
    16be:	00 91 93 00 	lds	r16, 0x0093
    16c2:	10 91 94 00 	lds	r17, 0x0094
				if(filew5==file&&rankw5!=rank)
    16c6:	4e 17       	cp	r20, r30
    16c8:	5f 07       	cpc	r21, r31
    16ca:	09 f0       	breq	.+2      	; 0x16ce <main+0xe60>
    16cc:	60 c0       	rjmp	.+192    	; 0x178e <main+0xf20>
    16ce:	06 17       	cp	r16, r22
    16d0:	17 07       	cpc	r17, r23
    16d2:	11 f4       	brne	.+4      	; 0x16d8 <main+0xe6a>
    16d4:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				{
					x2=file;	x1=x2;
    16d8:	50 93 92 01 	sts	0x0192, r21
    16dc:	40 93 91 01 	sts	0x0191, r20
    16e0:	50 93 a2 01 	sts	0x01A2, r21
    16e4:	40 93 a1 01 	sts	0x01A1, r20
					y2=rank;	y1=rankw5;
    16e8:	70 93 90 01 	sts	0x0190, r23
    16ec:	60 93 8f 01 	sts	0x018F, r22
    16f0:	10 93 a8 01 	sts	0x01A8, r17
    16f4:	00 93 a7 01 	sts	0x01A7, r16
					
					chess[file][rank]=chess[filew5][rankw5];
    16f8:	20 91 91 00 	lds	r18, 0x0091
    16fc:	30 91 92 00 	lds	r19, 0x0092
    1700:	80 91 93 01 	lds	r24, 0x0193
    1704:	90 91 94 01 	lds	r25, 0x0194
    1708:	dc 01       	movw	r26, r24
    170a:	53 e0       	ldi	r21, 0x03	; 3
    170c:	aa 0f       	add	r26, r26
    170e:	bb 1f       	adc	r27, r27
    1710:	5a 95       	dec	r21
    1712:	e1 f7       	brne	.-8      	; 0x170c <main+0xe9e>
    1714:	88 0f       	add	r24, r24
    1716:	99 1f       	adc	r25, r25
    1718:	a8 0f       	add	r26, r24
    171a:	b9 1f       	adc	r27, r25
    171c:	a6 0f       	add	r26, r22
    171e:	b7 1f       	adc	r27, r23
    1720:	aa 0f       	add	r26, r26
    1722:	bb 1f       	adc	r27, r27
    1724:	ae 01       	movw	r20, r28
    1726:	4f 5f       	subi	r20, 0xFF	; 255
    1728:	5f 4f       	sbci	r21, 0xFF	; 255
    172a:	a4 0f       	add	r26, r20
    172c:	b5 1f       	adc	r27, r21
    172e:	c9 01       	movw	r24, r18
    1730:	fc 01       	movw	r30, r24
    1732:	ee 0f       	add	r30, r30
    1734:	ff 1f       	adc	r31, r31
    1736:	ee 0f       	add	r30, r30
    1738:	ff 1f       	adc	r31, r31
    173a:	ee 0f       	add	r30, r30
    173c:	ff 1f       	adc	r31, r31
    173e:	88 0f       	add	r24, r24
    1740:	99 1f       	adc	r25, r25
    1742:	e8 0f       	add	r30, r24
    1744:	f9 1f       	adc	r31, r25
    1746:	e0 0f       	add	r30, r16
    1748:	f1 1f       	adc	r31, r17
    174a:	ee 0f       	add	r30, r30
    174c:	ff 1f       	adc	r31, r31
    174e:	e4 0f       	add	r30, r20
    1750:	f5 1f       	adc	r31, r21
    1752:	80 81       	ld	r24, Z
    1754:	91 81       	ldd	r25, Z+1	; 0x01
    1756:	8d 93       	st	X+, r24
    1758:	9c 93       	st	X, r25
					chess[filew5][rankw5]=00;
    175a:	c9 01       	movw	r24, r18
    175c:	9c 01       	movw	r18, r24
    175e:	a3 e0       	ldi	r26, 0x03	; 3
    1760:	22 0f       	add	r18, r18
    1762:	33 1f       	adc	r19, r19
    1764:	aa 95       	dec	r26
    1766:	e1 f7       	brne	.-8      	; 0x1760 <main+0xef2>
    1768:	88 0f       	add	r24, r24
    176a:	99 1f       	adc	r25, r25
    176c:	28 0f       	add	r18, r24
    176e:	39 1f       	adc	r19, r25
    1770:	20 0f       	add	r18, r16
    1772:	31 1f       	adc	r19, r17
    1774:	22 0f       	add	r18, r18
    1776:	33 1f       	adc	r19, r19
    1778:	42 0f       	add	r20, r18
    177a:	53 1f       	adc	r21, r19
    177c:	fa 01       	movw	r30, r20
    177e:	11 82       	std	Z+1, r1	; 0x01
    1780:	10 82       	st	Z, r1
					rankw5=rank;
    1782:	70 93 94 00 	sts	0x0094, r23
    1786:	60 93 93 00 	sts	0x0093, r22
    178a:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				}
				else if(filew5!=file&&rankw5==rank)
    178e:	06 17       	cp	r16, r22
    1790:	17 07       	cpc	r17, r23
    1792:	11 f0       	breq	.+4      	; 0x1798 <main+0xf2a>
    1794:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				{
					x2=file;	x1=filew5;
    1798:	f0 93 92 01 	sts	0x0192, r31
    179c:	e0 93 91 01 	sts	0x0191, r30
    17a0:	50 93 a2 01 	sts	0x01A2, r21
    17a4:	40 93 a1 01 	sts	0x01A1, r20
					y2=rank;	y1=y2;
    17a8:	10 93 90 01 	sts	0x0190, r17
    17ac:	00 93 8f 01 	sts	0x018F, r16
    17b0:	10 93 a8 01 	sts	0x01A8, r17
    17b4:	00 93 a7 01 	sts	0x01A7, r16
					
					chess[file][rank]=chess[filew5][rankw5];
    17b8:	60 91 93 01 	lds	r22, 0x0193
    17bc:	70 91 94 01 	lds	r23, 0x0194
    17c0:	20 91 91 00 	lds	r18, 0x0091
    17c4:	30 91 92 00 	lds	r19, 0x0092
    17c8:	cb 01       	movw	r24, r22
    17ca:	dc 01       	movw	r26, r24
    17cc:	53 e0       	ldi	r21, 0x03	; 3
    17ce:	aa 0f       	add	r26, r26
    17d0:	bb 1f       	adc	r27, r27
    17d2:	5a 95       	dec	r21
    17d4:	e1 f7       	brne	.-8      	; 0x17ce <main+0xf60>
    17d6:	88 0f       	add	r24, r24
    17d8:	99 1f       	adc	r25, r25
    17da:	a8 0f       	add	r26, r24
    17dc:	b9 1f       	adc	r27, r25
    17de:	a0 0f       	add	r26, r16
    17e0:	b1 1f       	adc	r27, r17
    17e2:	aa 0f       	add	r26, r26
    17e4:	bb 1f       	adc	r27, r27
    17e6:	ae 01       	movw	r20, r28
    17e8:	4f 5f       	subi	r20, 0xFF	; 255
    17ea:	5f 4f       	sbci	r21, 0xFF	; 255
    17ec:	a4 0f       	add	r26, r20
    17ee:	b5 1f       	adc	r27, r21
    17f0:	c9 01       	movw	r24, r18
    17f2:	fc 01       	movw	r30, r24
    17f4:	ee 0f       	add	r30, r30
    17f6:	ff 1f       	adc	r31, r31
    17f8:	ee 0f       	add	r30, r30
    17fa:	ff 1f       	adc	r31, r31
    17fc:	ee 0f       	add	r30, r30
    17fe:	ff 1f       	adc	r31, r31
    1800:	88 0f       	add	r24, r24
    1802:	99 1f       	adc	r25, r25
    1804:	e8 0f       	add	r30, r24
    1806:	f9 1f       	adc	r31, r25
    1808:	e0 0f       	add	r30, r16
    180a:	f1 1f       	adc	r31, r17
    180c:	ee 0f       	add	r30, r30
    180e:	ff 1f       	adc	r31, r31
    1810:	e4 0f       	add	r30, r20
    1812:	f5 1f       	adc	r31, r21
    1814:	80 81       	ld	r24, Z
    1816:	91 81       	ldd	r25, Z+1	; 0x01
    1818:	8d 93       	st	X+, r24
    181a:	9c 93       	st	X, r25
					chess[filew5][rankw5]=00;
    181c:	c9 01       	movw	r24, r18
    181e:	9c 01       	movw	r18, r24
    1820:	a3 e0       	ldi	r26, 0x03	; 3
    1822:	22 0f       	add	r18, r18
    1824:	33 1f       	adc	r19, r19
    1826:	aa 95       	dec	r26
    1828:	e1 f7       	brne	.-8      	; 0x1822 <main+0xfb4>
    182a:	88 0f       	add	r24, r24
    182c:	99 1f       	adc	r25, r25
    182e:	28 0f       	add	r18, r24
    1830:	39 1f       	adc	r19, r25
    1832:	20 0f       	add	r18, r16
    1834:	31 1f       	adc	r19, r17
    1836:	22 0f       	add	r18, r18
    1838:	33 1f       	adc	r19, r19
    183a:	42 0f       	add	r20, r18
    183c:	53 1f       	adc	r21, r19
    183e:	fa 01       	movw	r30, r20
    1840:	11 82       	std	Z+1, r1	; 0x01
    1842:	10 82       	st	Z, r1
					filew5=file;
    1844:	60 93 91 00 	sts	0x0091, r22
    1848:	70 93 92 00 	sts	0x0092, r23
    184c:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				}
			}
			
			else if(color==ke1_color)						//WHITE KING as BISHOP
			{
				queen_bishop=1;
    1850:	81 e0       	ldi	r24, 0x01	; 1
    1852:	90 e0       	ldi	r25, 0x00	; 0
    1854:	90 93 7a 01 	sts	0x017A, r25
    1858:	80 93 79 01 	sts	0x0179, r24
				x2=rank;	x1=rankw5;
    185c:	00 91 a3 01 	lds	r16, 0x01A3
    1860:	10 91 a4 01 	lds	r17, 0x01A4
    1864:	10 93 92 01 	sts	0x0192, r17
    1868:	00 93 91 01 	sts	0x0191, r16
    186c:	60 91 93 00 	lds	r22, 0x0093
    1870:	70 91 94 00 	lds	r23, 0x0094
    1874:	70 93 a2 01 	sts	0x01A2, r23
    1878:	60 93 a1 01 	sts	0x01A1, r22
				y2=file;	y1=filew5;
    187c:	f0 93 90 01 	sts	0x0190, r31
    1880:	e0 93 8f 01 	sts	0x018F, r30
    1884:	50 93 a8 01 	sts	0x01A8, r21
    1888:	40 93 a7 01 	sts	0x01A7, r20
				
				chess[file][rank]=chess[filew5][rankw5];
    188c:	f0 90 93 01 	lds	r15, 0x0193
    1890:	e0 90 94 01 	lds	r14, 0x0194
    1894:	20 91 91 00 	lds	r18, 0x0091
    1898:	30 91 92 00 	lds	r19, 0x0092
    189c:	8f 2d       	mov	r24, r15
    189e:	9e 2d       	mov	r25, r14
    18a0:	dc 01       	movw	r26, r24
    18a2:	53 e0       	ldi	r21, 0x03	; 3
    18a4:	aa 0f       	add	r26, r26
    18a6:	bb 1f       	adc	r27, r27
    18a8:	5a 95       	dec	r21
    18aa:	e1 f7       	brne	.-8      	; 0x18a4 <main+0x1036>
    18ac:	88 0f       	add	r24, r24
    18ae:	99 1f       	adc	r25, r25
    18b0:	a8 0f       	add	r26, r24
    18b2:	b9 1f       	adc	r27, r25
    18b4:	a0 0f       	add	r26, r16
    18b6:	b1 1f       	adc	r27, r17
    18b8:	aa 0f       	add	r26, r26
    18ba:	bb 1f       	adc	r27, r27
    18bc:	ae 01       	movw	r20, r28
    18be:	4f 5f       	subi	r20, 0xFF	; 255
    18c0:	5f 4f       	sbci	r21, 0xFF	; 255
    18c2:	a4 0f       	add	r26, r20
    18c4:	b5 1f       	adc	r27, r21
    18c6:	c9 01       	movw	r24, r18
    18c8:	fc 01       	movw	r30, r24
    18ca:	ee 0f       	add	r30, r30
    18cc:	ff 1f       	adc	r31, r31
    18ce:	ee 0f       	add	r30, r30
    18d0:	ff 1f       	adc	r31, r31
    18d2:	ee 0f       	add	r30, r30
    18d4:	ff 1f       	adc	r31, r31
    18d6:	88 0f       	add	r24, r24
    18d8:	99 1f       	adc	r25, r25
    18da:	e8 0f       	add	r30, r24
    18dc:	f9 1f       	adc	r31, r25
    18de:	e6 0f       	add	r30, r22
    18e0:	f7 1f       	adc	r31, r23
    18e2:	ee 0f       	add	r30, r30
    18e4:	ff 1f       	adc	r31, r31
    18e6:	e4 0f       	add	r30, r20
    18e8:	f5 1f       	adc	r31, r21
    18ea:	80 81       	ld	r24, Z
    18ec:	91 81       	ldd	r25, Z+1	; 0x01
    18ee:	8d 93       	st	X+, r24
    18f0:	9c 93       	st	X, r25
				chess[filew5][rankw5]=00;
    18f2:	c9 01       	movw	r24, r18
    18f4:	9c 01       	movw	r18, r24
    18f6:	f3 e0       	ldi	r31, 0x03	; 3
    18f8:	22 0f       	add	r18, r18
    18fa:	33 1f       	adc	r19, r19
    18fc:	fa 95       	dec	r31
    18fe:	e1 f7       	brne	.-8      	; 0x18f8 <main+0x108a>
    1900:	88 0f       	add	r24, r24
    1902:	99 1f       	adc	r25, r25
    1904:	28 0f       	add	r18, r24
    1906:	39 1f       	adc	r19, r25
    1908:	26 0f       	add	r18, r22
    190a:	37 1f       	adc	r19, r23
    190c:	22 0f       	add	r18, r18
    190e:	33 1f       	adc	r19, r19
    1910:	42 0f       	add	r20, r18
    1912:	53 1f       	adc	r21, r19
    1914:	fa 01       	movw	r30, r20
    1916:	11 82       	std	Z+1, r1	; 0x01
    1918:	10 82       	st	Z, r1
				filew5=file;rankw5=rank;
    191a:	f0 92 91 00 	sts	0x0091, r15
    191e:	e0 92 92 00 	sts	0x0092, r14
    1922:	10 93 94 00 	sts	0x0094, r17
    1926:	00 93 93 00 	sts	0x0093, r16
    192a:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
		}
		
		else if(moves%2==1)
    192e:	62 e0       	ldi	r22, 0x02	; 2
    1930:	70 e0       	ldi	r23, 0x00	; 0
    1932:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    1936:	ac 01       	movw	r20, r24
    1938:	81 30       	cpi	r24, 0x01	; 1
    193a:	91 05       	cpc	r25, r1
    193c:	11 f0       	breq	.+4      	; 0x1942 <main+0x10d4>
    193e:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
		{
			if(color!=ke8_color)						//BLACK KING as HROOK
    1942:	20 91 9f 01 	lds	r18, 0x019F
    1946:	30 91 a0 01 	lds	r19, 0x01A0
    194a:	80 91 99 00 	lds	r24, 0x0099
    194e:	90 91 9a 00 	lds	r25, 0x009A
    1952:	e0 91 93 01 	lds	r30, 0x0193
    1956:	f0 91 94 01 	lds	r31, 0x0194
    195a:	a0 91 95 00 	lds	r26, 0x0095
    195e:	b0 91 96 00 	lds	r27, 0x0096
    1962:	28 17       	cp	r18, r24
    1964:	39 07       	cpc	r19, r25
    1966:	09 f4       	brne	.+2      	; 0x196a <main+0x10fc>
    1968:	d1 c0       	rjmp	.+418    	; 0x1b0c <main+0x129e>
			{
				queen_hrook=1;
    196a:	50 93 78 01 	sts	0x0178, r21
    196e:	40 93 77 01 	sts	0x0177, r20
    1972:	60 91 a3 01 	lds	r22, 0x01A3
    1976:	70 91 a4 01 	lds	r23, 0x01A4
    197a:	00 91 97 00 	lds	r16, 0x0097
    197e:	10 91 98 00 	lds	r17, 0x0098
				if(fileb5==file&&rankb5!=rank)
    1982:	ae 17       	cp	r26, r30
    1984:	bf 07       	cpc	r27, r31
    1986:	09 f0       	breq	.+2      	; 0x198a <main+0x111c>
    1988:	60 c0       	rjmp	.+192    	; 0x1a4a <main+0x11dc>
    198a:	06 17       	cp	r16, r22
    198c:	17 07       	cpc	r17, r23
    198e:	11 f4       	brne	.+4      	; 0x1994 <main+0x1126>
    1990:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				{
					x2=file;	x1=x2;
    1994:	b0 93 92 01 	sts	0x0192, r27
    1998:	a0 93 91 01 	sts	0x0191, r26
    199c:	b0 93 a2 01 	sts	0x01A2, r27
    19a0:	a0 93 a1 01 	sts	0x01A1, r26
					y2=rank;	y1=rankb5;
    19a4:	70 93 90 01 	sts	0x0190, r23
    19a8:	60 93 8f 01 	sts	0x018F, r22
    19ac:	10 93 a8 01 	sts	0x01A8, r17
    19b0:	00 93 a7 01 	sts	0x01A7, r16
					
					chess[file][rank]=chess[fileb5][rankb5];
    19b4:	20 91 95 00 	lds	r18, 0x0095
    19b8:	30 91 96 00 	lds	r19, 0x0096
    19bc:	80 91 93 01 	lds	r24, 0x0193
    19c0:	90 91 94 01 	lds	r25, 0x0194
    19c4:	dc 01       	movw	r26, r24
    19c6:	53 e0       	ldi	r21, 0x03	; 3
    19c8:	aa 0f       	add	r26, r26
    19ca:	bb 1f       	adc	r27, r27
    19cc:	5a 95       	dec	r21
    19ce:	e1 f7       	brne	.-8      	; 0x19c8 <main+0x115a>
    19d0:	88 0f       	add	r24, r24
    19d2:	99 1f       	adc	r25, r25
    19d4:	a8 0f       	add	r26, r24
    19d6:	b9 1f       	adc	r27, r25
    19d8:	a6 0f       	add	r26, r22
    19da:	b7 1f       	adc	r27, r23
    19dc:	aa 0f       	add	r26, r26
    19de:	bb 1f       	adc	r27, r27
    19e0:	ae 01       	movw	r20, r28
    19e2:	4f 5f       	subi	r20, 0xFF	; 255
    19e4:	5f 4f       	sbci	r21, 0xFF	; 255
    19e6:	a4 0f       	add	r26, r20
    19e8:	b5 1f       	adc	r27, r21
    19ea:	c9 01       	movw	r24, r18
    19ec:	fc 01       	movw	r30, r24
    19ee:	ee 0f       	add	r30, r30
    19f0:	ff 1f       	adc	r31, r31
    19f2:	ee 0f       	add	r30, r30
    19f4:	ff 1f       	adc	r31, r31
    19f6:	ee 0f       	add	r30, r30
    19f8:	ff 1f       	adc	r31, r31
    19fa:	88 0f       	add	r24, r24
    19fc:	99 1f       	adc	r25, r25
    19fe:	e8 0f       	add	r30, r24
    1a00:	f9 1f       	adc	r31, r25
    1a02:	e0 0f       	add	r30, r16
    1a04:	f1 1f       	adc	r31, r17
    1a06:	ee 0f       	add	r30, r30
    1a08:	ff 1f       	adc	r31, r31
    1a0a:	e4 0f       	add	r30, r20
    1a0c:	f5 1f       	adc	r31, r21
    1a0e:	80 81       	ld	r24, Z
    1a10:	91 81       	ldd	r25, Z+1	; 0x01
    1a12:	8d 93       	st	X+, r24
    1a14:	9c 93       	st	X, r25
					chess[fileb5][rankb5]=00;
    1a16:	c9 01       	movw	r24, r18
    1a18:	9c 01       	movw	r18, r24
    1a1a:	a3 e0       	ldi	r26, 0x03	; 3
    1a1c:	22 0f       	add	r18, r18
    1a1e:	33 1f       	adc	r19, r19
    1a20:	aa 95       	dec	r26
    1a22:	e1 f7       	brne	.-8      	; 0x1a1c <main+0x11ae>
    1a24:	88 0f       	add	r24, r24
    1a26:	99 1f       	adc	r25, r25
    1a28:	28 0f       	add	r18, r24
    1a2a:	39 1f       	adc	r19, r25
    1a2c:	20 0f       	add	r18, r16
    1a2e:	31 1f       	adc	r19, r17
    1a30:	22 0f       	add	r18, r18
    1a32:	33 1f       	adc	r19, r19
    1a34:	42 0f       	add	r20, r18
    1a36:	53 1f       	adc	r21, r19
    1a38:	fa 01       	movw	r30, r20
    1a3a:	11 82       	std	Z+1, r1	; 0x01
    1a3c:	10 82       	st	Z, r1
					rankb5=rank;
    1a3e:	70 93 98 00 	sts	0x0098, r23
    1a42:	60 93 97 00 	sts	0x0097, r22
    1a46:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				}
				else if(fileb5!=file&&rankb5==rank)
    1a4a:	06 17       	cp	r16, r22
    1a4c:	17 07       	cpc	r17, r23
    1a4e:	11 f0       	breq	.+4      	; 0x1a54 <main+0x11e6>
    1a50:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				{
					x2=file;	x1=fileb5;
    1a54:	f0 93 92 01 	sts	0x0192, r31
    1a58:	e0 93 91 01 	sts	0x0191, r30
    1a5c:	b0 93 a2 01 	sts	0x01A2, r27
    1a60:	a0 93 a1 01 	sts	0x01A1, r26
					y2=rank;	y1=y2;
    1a64:	10 93 90 01 	sts	0x0190, r17
    1a68:	00 93 8f 01 	sts	0x018F, r16
    1a6c:	10 93 a8 01 	sts	0x01A8, r17
    1a70:	00 93 a7 01 	sts	0x01A7, r16
					
					chess[file][rank]=chess[fileb5][rankb5];
    1a74:	60 91 93 01 	lds	r22, 0x0193
    1a78:	70 91 94 01 	lds	r23, 0x0194
    1a7c:	20 91 95 00 	lds	r18, 0x0095
    1a80:	30 91 96 00 	lds	r19, 0x0096
    1a84:	cb 01       	movw	r24, r22
    1a86:	dc 01       	movw	r26, r24
    1a88:	53 e0       	ldi	r21, 0x03	; 3
    1a8a:	aa 0f       	add	r26, r26
    1a8c:	bb 1f       	adc	r27, r27
    1a8e:	5a 95       	dec	r21
    1a90:	e1 f7       	brne	.-8      	; 0x1a8a <main+0x121c>
    1a92:	88 0f       	add	r24, r24
    1a94:	99 1f       	adc	r25, r25
    1a96:	a8 0f       	add	r26, r24
    1a98:	b9 1f       	adc	r27, r25
    1a9a:	a0 0f       	add	r26, r16
    1a9c:	b1 1f       	adc	r27, r17
    1a9e:	aa 0f       	add	r26, r26
    1aa0:	bb 1f       	adc	r27, r27
    1aa2:	ae 01       	movw	r20, r28
    1aa4:	4f 5f       	subi	r20, 0xFF	; 255
    1aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    1aa8:	a4 0f       	add	r26, r20
    1aaa:	b5 1f       	adc	r27, r21
    1aac:	c9 01       	movw	r24, r18
    1aae:	fc 01       	movw	r30, r24
    1ab0:	ee 0f       	add	r30, r30
    1ab2:	ff 1f       	adc	r31, r31
    1ab4:	ee 0f       	add	r30, r30
    1ab6:	ff 1f       	adc	r31, r31
    1ab8:	ee 0f       	add	r30, r30
    1aba:	ff 1f       	adc	r31, r31
    1abc:	88 0f       	add	r24, r24
    1abe:	99 1f       	adc	r25, r25
    1ac0:	e8 0f       	add	r30, r24
    1ac2:	f9 1f       	adc	r31, r25
    1ac4:	e0 0f       	add	r30, r16
    1ac6:	f1 1f       	adc	r31, r17
    1ac8:	ee 0f       	add	r30, r30
    1aca:	ff 1f       	adc	r31, r31
    1acc:	e4 0f       	add	r30, r20
    1ace:	f5 1f       	adc	r31, r21
    1ad0:	80 81       	ld	r24, Z
    1ad2:	91 81       	ldd	r25, Z+1	; 0x01
    1ad4:	8d 93       	st	X+, r24
    1ad6:	9c 93       	st	X, r25
					chess[fileb5][rankb5]=00;
    1ad8:	c9 01       	movw	r24, r18
    1ada:	9c 01       	movw	r18, r24
    1adc:	a3 e0       	ldi	r26, 0x03	; 3
    1ade:	22 0f       	add	r18, r18
    1ae0:	33 1f       	adc	r19, r19
    1ae2:	aa 95       	dec	r26
    1ae4:	e1 f7       	brne	.-8      	; 0x1ade <main+0x1270>
    1ae6:	88 0f       	add	r24, r24
    1ae8:	99 1f       	adc	r25, r25
    1aea:	28 0f       	add	r18, r24
    1aec:	39 1f       	adc	r19, r25
    1aee:	20 0f       	add	r18, r16
    1af0:	31 1f       	adc	r19, r17
    1af2:	22 0f       	add	r18, r18
    1af4:	33 1f       	adc	r19, r19
    1af6:	42 0f       	add	r20, r18
    1af8:	53 1f       	adc	r21, r19
    1afa:	fa 01       	movw	r30, r20
    1afc:	11 82       	std	Z+1, r1	; 0x01
    1afe:	10 82       	st	Z, r1
					fileb5=file;
    1b00:	60 93 95 00 	sts	0x0095, r22
    1b04:	70 93 96 00 	sts	0x0096, r23
    1b08:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				}
			}
			
			else if(color==ke8_color)						//BLACK KING as BISHOP
			{
				queen_bishop=1;
    1b0c:	50 93 7a 01 	sts	0x017A, r21
    1b10:	40 93 79 01 	sts	0x0179, r20
				x2=rank;	x1=rankb5;
    1b14:	00 91 a3 01 	lds	r16, 0x01A3
    1b18:	10 91 a4 01 	lds	r17, 0x01A4
    1b1c:	10 93 92 01 	sts	0x0192, r17
    1b20:	00 93 91 01 	sts	0x0191, r16
    1b24:	60 91 97 00 	lds	r22, 0x0097
    1b28:	70 91 98 00 	lds	r23, 0x0098
    1b2c:	70 93 a2 01 	sts	0x01A2, r23
    1b30:	60 93 a1 01 	sts	0x01A1, r22
				y2=file;	y1=fileb5;
    1b34:	f0 93 90 01 	sts	0x0190, r31
    1b38:	e0 93 8f 01 	sts	0x018F, r30
    1b3c:	b0 93 a8 01 	sts	0x01A8, r27
    1b40:	a0 93 a7 01 	sts	0x01A7, r26
				
				chess[file][rank]=chess[fileb5][rankb5];
    1b44:	f0 90 93 01 	lds	r15, 0x0193
    1b48:	e0 90 94 01 	lds	r14, 0x0194
    1b4c:	20 91 95 00 	lds	r18, 0x0095
    1b50:	30 91 96 00 	lds	r19, 0x0096
    1b54:	8f 2d       	mov	r24, r15
    1b56:	9e 2d       	mov	r25, r14
    1b58:	dc 01       	movw	r26, r24
    1b5a:	53 e0       	ldi	r21, 0x03	; 3
    1b5c:	aa 0f       	add	r26, r26
    1b5e:	bb 1f       	adc	r27, r27
    1b60:	5a 95       	dec	r21
    1b62:	e1 f7       	brne	.-8      	; 0x1b5c <main+0x12ee>
    1b64:	88 0f       	add	r24, r24
    1b66:	99 1f       	adc	r25, r25
    1b68:	a8 0f       	add	r26, r24
    1b6a:	b9 1f       	adc	r27, r25
    1b6c:	a0 0f       	add	r26, r16
    1b6e:	b1 1f       	adc	r27, r17
    1b70:	aa 0f       	add	r26, r26
    1b72:	bb 1f       	adc	r27, r27
    1b74:	ae 01       	movw	r20, r28
    1b76:	4f 5f       	subi	r20, 0xFF	; 255
    1b78:	5f 4f       	sbci	r21, 0xFF	; 255
    1b7a:	a4 0f       	add	r26, r20
    1b7c:	b5 1f       	adc	r27, r21
    1b7e:	c9 01       	movw	r24, r18
    1b80:	fc 01       	movw	r30, r24
    1b82:	ee 0f       	add	r30, r30
    1b84:	ff 1f       	adc	r31, r31
    1b86:	ee 0f       	add	r30, r30
    1b88:	ff 1f       	adc	r31, r31
    1b8a:	ee 0f       	add	r30, r30
    1b8c:	ff 1f       	adc	r31, r31
    1b8e:	88 0f       	add	r24, r24
    1b90:	99 1f       	adc	r25, r25
    1b92:	e8 0f       	add	r30, r24
    1b94:	f9 1f       	adc	r31, r25
    1b96:	e6 0f       	add	r30, r22
    1b98:	f7 1f       	adc	r31, r23
    1b9a:	ee 0f       	add	r30, r30
    1b9c:	ff 1f       	adc	r31, r31
    1b9e:	e4 0f       	add	r30, r20
    1ba0:	f5 1f       	adc	r31, r21
    1ba2:	80 81       	ld	r24, Z
    1ba4:	91 81       	ldd	r25, Z+1	; 0x01
    1ba6:	8d 93       	st	X+, r24
    1ba8:	9c 93       	st	X, r25
				chess[fileb5][rankb5]=00;
    1baa:	c9 01       	movw	r24, r18
    1bac:	9c 01       	movw	r18, r24
    1bae:	f3 e0       	ldi	r31, 0x03	; 3
    1bb0:	22 0f       	add	r18, r18
    1bb2:	33 1f       	adc	r19, r19
    1bb4:	fa 95       	dec	r31
    1bb6:	e1 f7       	brne	.-8      	; 0x1bb0 <main+0x1342>
    1bb8:	88 0f       	add	r24, r24
    1bba:	99 1f       	adc	r25, r25
    1bbc:	28 0f       	add	r18, r24
    1bbe:	39 1f       	adc	r19, r25
    1bc0:	26 0f       	add	r18, r22
    1bc2:	37 1f       	adc	r19, r23
    1bc4:	22 0f       	add	r18, r18
    1bc6:	33 1f       	adc	r19, r19
    1bc8:	42 0f       	add	r20, r18
    1bca:	53 1f       	adc	r21, r19
    1bcc:	fa 01       	movw	r30, r20
    1bce:	11 82       	std	Z+1, r1	; 0x01
    1bd0:	10 82       	st	Z, r1
				fileb5=file;rankb5=rank;
    1bd2:	f0 92 95 00 	sts	0x0095, r15
    1bd6:	e0 92 96 00 	sts	0x0096, r14
    1bda:	10 93 98 00 	sts	0x0098, r17
    1bde:	00 93 97 00 	sts	0x0097, r16
    1be2:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			}
		}
		goto END;
	}
	
	else if(letter==3)	//ASCII OF QUEEN
    1be6:	83 30       	cpi	r24, 0x03	; 3
    1be8:	91 05       	cpc	r25, r1
    1bea:	09 f0       	breq	.+2      	; 0x1bee <main+0x1380>
    1bec:	dd c2       	rjmp	.+1466   	; 0x21a8 <main+0x193a>
	{
		QUEEN:
		if(moves%2==0)
    1bee:	80 91 6f 01 	lds	r24, 0x016F
    1bf2:	90 91 70 01 	lds	r25, 0x0170
    1bf6:	80 fd       	sbrc	r24, 0
    1bf8:	6b c1       	rjmp	.+726    	; 0x1ed0 <main+0x1662>
		{
			if(filew4==file&&rankw4!=rank)						//WHITE QUEEN as HROOK
    1bfa:	20 91 9b 00 	lds	r18, 0x009B
    1bfe:	30 91 9c 00 	lds	r19, 0x009C
    1c02:	40 91 93 01 	lds	r20, 0x0193
    1c06:	50 91 94 01 	lds	r21, 0x0194
    1c0a:	60 91 a3 01 	lds	r22, 0x01A3
    1c0e:	70 91 a4 01 	lds	r23, 0x01A4
    1c12:	00 91 9d 00 	lds	r16, 0x009D
    1c16:	10 91 9e 00 	lds	r17, 0x009E
    1c1a:	24 17       	cp	r18, r20
    1c1c:	35 07       	cpc	r19, r21
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <main+0x13b4>
    1c20:	64 c0       	rjmp	.+200    	; 0x1cea <main+0x147c>
    1c22:	06 17       	cp	r16, r22
    1c24:	17 07       	cpc	r17, r23
    1c26:	09 f4       	brne	.+2      	; 0x1c2a <main+0x13bc>
    1c28:	c4 c0       	rjmp	.+392    	; 0x1db2 <main+0x1544>
			{
				queen_hrook=1;
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	90 93 78 01 	sts	0x0178, r25
    1c32:	80 93 77 01 	sts	0x0177, r24
				x2=file;	x1=x2;
    1c36:	30 93 92 01 	sts	0x0192, r19
    1c3a:	20 93 91 01 	sts	0x0191, r18
    1c3e:	30 93 a2 01 	sts	0x01A2, r19
    1c42:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=rankw4;
    1c46:	70 93 90 01 	sts	0x0190, r23
    1c4a:	60 93 8f 01 	sts	0x018F, r22
    1c4e:	10 93 a8 01 	sts	0x01A8, r17
    1c52:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[filew4][rankw4];
    1c56:	20 91 9b 00 	lds	r18, 0x009B
    1c5a:	30 91 9c 00 	lds	r19, 0x009C
    1c5e:	80 91 93 01 	lds	r24, 0x0193
    1c62:	90 91 94 01 	lds	r25, 0x0194
    1c66:	dc 01       	movw	r26, r24
    1c68:	53 e0       	ldi	r21, 0x03	; 3
    1c6a:	aa 0f       	add	r26, r26
    1c6c:	bb 1f       	adc	r27, r27
    1c6e:	5a 95       	dec	r21
    1c70:	e1 f7       	brne	.-8      	; 0x1c6a <main+0x13fc>
    1c72:	88 0f       	add	r24, r24
    1c74:	99 1f       	adc	r25, r25
    1c76:	a8 0f       	add	r26, r24
    1c78:	b9 1f       	adc	r27, r25
    1c7a:	a6 0f       	add	r26, r22
    1c7c:	b7 1f       	adc	r27, r23
    1c7e:	aa 0f       	add	r26, r26
    1c80:	bb 1f       	adc	r27, r27
    1c82:	ae 01       	movw	r20, r28
    1c84:	4f 5f       	subi	r20, 0xFF	; 255
    1c86:	5f 4f       	sbci	r21, 0xFF	; 255
    1c88:	a4 0f       	add	r26, r20
    1c8a:	b5 1f       	adc	r27, r21
    1c8c:	c9 01       	movw	r24, r18
    1c8e:	fc 01       	movw	r30, r24
    1c90:	ee 0f       	add	r30, r30
    1c92:	ff 1f       	adc	r31, r31
    1c94:	ee 0f       	add	r30, r30
    1c96:	ff 1f       	adc	r31, r31
    1c98:	ee 0f       	add	r30, r30
    1c9a:	ff 1f       	adc	r31, r31
    1c9c:	88 0f       	add	r24, r24
    1c9e:	99 1f       	adc	r25, r25
    1ca0:	e8 0f       	add	r30, r24
    1ca2:	f9 1f       	adc	r31, r25
    1ca4:	e0 0f       	add	r30, r16
    1ca6:	f1 1f       	adc	r31, r17
    1ca8:	ee 0f       	add	r30, r30
    1caa:	ff 1f       	adc	r31, r31
    1cac:	e4 0f       	add	r30, r20
    1cae:	f5 1f       	adc	r31, r21
    1cb0:	80 81       	ld	r24, Z
    1cb2:	91 81       	ldd	r25, Z+1	; 0x01
    1cb4:	8d 93       	st	X+, r24
    1cb6:	9c 93       	st	X, r25
				chess[filew4][rankw4]=00;
    1cb8:	c9 01       	movw	r24, r18
    1cba:	9c 01       	movw	r18, r24
    1cbc:	a3 e0       	ldi	r26, 0x03	; 3
    1cbe:	22 0f       	add	r18, r18
    1cc0:	33 1f       	adc	r19, r19
    1cc2:	aa 95       	dec	r26
    1cc4:	e1 f7       	brne	.-8      	; 0x1cbe <main+0x1450>
    1cc6:	88 0f       	add	r24, r24
    1cc8:	99 1f       	adc	r25, r25
    1cca:	28 0f       	add	r18, r24
    1ccc:	39 1f       	adc	r19, r25
    1cce:	20 0f       	add	r18, r16
    1cd0:	31 1f       	adc	r19, r17
    1cd2:	22 0f       	add	r18, r18
    1cd4:	33 1f       	adc	r19, r19
    1cd6:	42 0f       	add	r20, r18
    1cd8:	53 1f       	adc	r21, r19
    1cda:	fa 01       	movw	r30, r20
    1cdc:	11 82       	std	Z+1, r1	; 0x01
    1cde:	10 82       	st	Z, r1
				rankw4=rank;
    1ce0:	70 93 9e 00 	sts	0x009E, r23
    1ce4:	60 93 9d 00 	sts	0x009D, r22
    1ce8:	64 c0       	rjmp	.+200    	; 0x1db2 <main+0x1544>
			}
			else if(filew4!=file&&rankw4==rank)
    1cea:	06 17       	cp	r16, r22
    1cec:	17 07       	cpc	r17, r23
    1cee:	09 f0       	breq	.+2      	; 0x1cf2 <main+0x1484>
    1cf0:	60 c0       	rjmp	.+192    	; 0x1db2 <main+0x1544>
			{
				queen_hrook=1;
    1cf2:	81 e0       	ldi	r24, 0x01	; 1
    1cf4:	90 e0       	ldi	r25, 0x00	; 0
    1cf6:	90 93 78 01 	sts	0x0178, r25
    1cfa:	80 93 77 01 	sts	0x0177, r24
				x2=file;	x1=filew4;
    1cfe:	50 93 92 01 	sts	0x0192, r21
    1d02:	40 93 91 01 	sts	0x0191, r20
    1d06:	30 93 a2 01 	sts	0x01A2, r19
    1d0a:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=y2;
    1d0e:	10 93 90 01 	sts	0x0190, r17
    1d12:	00 93 8f 01 	sts	0x018F, r16
    1d16:	10 93 a8 01 	sts	0x01A8, r17
    1d1a:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[filew4][rankw4];
    1d1e:	60 91 93 01 	lds	r22, 0x0193
    1d22:	70 91 94 01 	lds	r23, 0x0194
    1d26:	20 91 9b 00 	lds	r18, 0x009B
    1d2a:	30 91 9c 00 	lds	r19, 0x009C
    1d2e:	cb 01       	movw	r24, r22
    1d30:	dc 01       	movw	r26, r24
    1d32:	53 e0       	ldi	r21, 0x03	; 3
    1d34:	aa 0f       	add	r26, r26
    1d36:	bb 1f       	adc	r27, r27
    1d38:	5a 95       	dec	r21
    1d3a:	e1 f7       	brne	.-8      	; 0x1d34 <main+0x14c6>
    1d3c:	88 0f       	add	r24, r24
    1d3e:	99 1f       	adc	r25, r25
    1d40:	a8 0f       	add	r26, r24
    1d42:	b9 1f       	adc	r27, r25
    1d44:	a0 0f       	add	r26, r16
    1d46:	b1 1f       	adc	r27, r17
    1d48:	aa 0f       	add	r26, r26
    1d4a:	bb 1f       	adc	r27, r27
    1d4c:	ae 01       	movw	r20, r28
    1d4e:	4f 5f       	subi	r20, 0xFF	; 255
    1d50:	5f 4f       	sbci	r21, 0xFF	; 255
    1d52:	a4 0f       	add	r26, r20
    1d54:	b5 1f       	adc	r27, r21
    1d56:	c9 01       	movw	r24, r18
    1d58:	fc 01       	movw	r30, r24
    1d5a:	ee 0f       	add	r30, r30
    1d5c:	ff 1f       	adc	r31, r31
    1d5e:	ee 0f       	add	r30, r30
    1d60:	ff 1f       	adc	r31, r31
    1d62:	ee 0f       	add	r30, r30
    1d64:	ff 1f       	adc	r31, r31
    1d66:	88 0f       	add	r24, r24
    1d68:	99 1f       	adc	r25, r25
    1d6a:	e8 0f       	add	r30, r24
    1d6c:	f9 1f       	adc	r31, r25
    1d6e:	e0 0f       	add	r30, r16
    1d70:	f1 1f       	adc	r31, r17
    1d72:	ee 0f       	add	r30, r30
    1d74:	ff 1f       	adc	r31, r31
    1d76:	e4 0f       	add	r30, r20
    1d78:	f5 1f       	adc	r31, r21
    1d7a:	80 81       	ld	r24, Z
    1d7c:	91 81       	ldd	r25, Z+1	; 0x01
    1d7e:	8d 93       	st	X+, r24
    1d80:	9c 93       	st	X, r25
				chess[filew4][rankw4]=00;
    1d82:	c9 01       	movw	r24, r18
    1d84:	9c 01       	movw	r18, r24
    1d86:	a3 e0       	ldi	r26, 0x03	; 3
    1d88:	22 0f       	add	r18, r18
    1d8a:	33 1f       	adc	r19, r19
    1d8c:	aa 95       	dec	r26
    1d8e:	e1 f7       	brne	.-8      	; 0x1d88 <main+0x151a>
    1d90:	88 0f       	add	r24, r24
    1d92:	99 1f       	adc	r25, r25
    1d94:	28 0f       	add	r18, r24
    1d96:	39 1f       	adc	r19, r25
    1d98:	20 0f       	add	r18, r16
    1d9a:	31 1f       	adc	r19, r17
    1d9c:	22 0f       	add	r18, r18
    1d9e:	33 1f       	adc	r19, r19
    1da0:	42 0f       	add	r20, r18
    1da2:	53 1f       	adc	r21, r19
    1da4:	fa 01       	movw	r30, r20
    1da6:	11 82       	std	Z+1, r1	; 0x01
    1da8:	10 82       	st	Z, r1
				filew4=file;
    1daa:	60 93 9b 00 	sts	0x009B, r22
    1dae:	70 93 9c 00 	sts	0x009C, r23
			}
			
			check_color();
    1db2:	0e 94 9b 03 	call	0x736	; 0x736 <check_color>
			if(color==qd1_color)						//WHITE QUEEN as BISHOP
    1db6:	20 91 9f 01 	lds	r18, 0x019F
    1dba:	30 91 a0 01 	lds	r19, 0x01A0
    1dbe:	80 91 a3 00 	lds	r24, 0x00A3
    1dc2:	90 91 a4 00 	lds	r25, 0x00A4
    1dc6:	28 17       	cp	r18, r24
    1dc8:	39 07       	cpc	r19, r25
    1dca:	11 f0       	breq	.+4      	; 0x1dd0 <main+0x1562>
    1dcc:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
			{
				queen_bishop=1;
    1dd0:	81 e0       	ldi	r24, 0x01	; 1
    1dd2:	90 e0       	ldi	r25, 0x00	; 0
    1dd4:	90 93 7a 01 	sts	0x017A, r25
    1dd8:	80 93 79 01 	sts	0x0179, r24
				if(filew4!=file&&rankw4!=rank)
    1ddc:	20 91 9b 00 	lds	r18, 0x009B
    1de0:	30 91 9c 00 	lds	r19, 0x009C
    1de4:	80 91 93 01 	lds	r24, 0x0193
    1de8:	90 91 94 01 	lds	r25, 0x0194
    1dec:	28 17       	cp	r18, r24
    1dee:	39 07       	cpc	r19, r25
    1df0:	11 f4       	brne	.+4      	; 0x1df6 <main+0x1588>
    1df2:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
    1df6:	e0 90 a3 01 	lds	r14, 0x01A3
    1dfa:	f0 90 a4 01 	lds	r15, 0x01A4
    1dfe:	00 91 9d 00 	lds	r16, 0x009D
    1e02:	10 91 9e 00 	lds	r17, 0x009E
    1e06:	0e 15       	cp	r16, r14
    1e08:	1f 05       	cpc	r17, r15
    1e0a:	11 f4       	brne	.+4      	; 0x1e10 <main+0x15a2>
    1e0c:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				{
					x2=rank;	x1=rankw4;
    1e10:	f0 92 92 01 	sts	0x0192, r15
    1e14:	e0 92 91 01 	sts	0x0191, r14
    1e18:	10 93 a2 01 	sts	0x01A2, r17
    1e1c:	00 93 a1 01 	sts	0x01A1, r16
					y2=file;	y1=filew4;
    1e20:	90 93 90 01 	sts	0x0190, r25
    1e24:	80 93 8f 01 	sts	0x018F, r24
    1e28:	30 93 a8 01 	sts	0x01A8, r19
    1e2c:	20 93 a7 01 	sts	0x01A7, r18
					
					chess[file][rank]=chess[filew4][rankw4];
    1e30:	60 91 93 01 	lds	r22, 0x0193
    1e34:	70 91 94 01 	lds	r23, 0x0194
    1e38:	20 91 9b 00 	lds	r18, 0x009B
    1e3c:	30 91 9c 00 	lds	r19, 0x009C
    1e40:	cb 01       	movw	r24, r22
    1e42:	dc 01       	movw	r26, r24
    1e44:	53 e0       	ldi	r21, 0x03	; 3
    1e46:	aa 0f       	add	r26, r26
    1e48:	bb 1f       	adc	r27, r27
    1e4a:	5a 95       	dec	r21
    1e4c:	e1 f7       	brne	.-8      	; 0x1e46 <main+0x15d8>
    1e4e:	88 0f       	add	r24, r24
    1e50:	99 1f       	adc	r25, r25
    1e52:	a8 0f       	add	r26, r24
    1e54:	b9 1f       	adc	r27, r25
    1e56:	ae 0d       	add	r26, r14
    1e58:	bf 1d       	adc	r27, r15
    1e5a:	aa 0f       	add	r26, r26
    1e5c:	bb 1f       	adc	r27, r27
    1e5e:	ae 01       	movw	r20, r28
    1e60:	4f 5f       	subi	r20, 0xFF	; 255
    1e62:	5f 4f       	sbci	r21, 0xFF	; 255
    1e64:	a4 0f       	add	r26, r20
    1e66:	b5 1f       	adc	r27, r21
    1e68:	c9 01       	movw	r24, r18
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	ee 0f       	add	r30, r30
    1e6e:	ff 1f       	adc	r31, r31
    1e70:	ee 0f       	add	r30, r30
    1e72:	ff 1f       	adc	r31, r31
    1e74:	ee 0f       	add	r30, r30
    1e76:	ff 1f       	adc	r31, r31
    1e78:	88 0f       	add	r24, r24
    1e7a:	99 1f       	adc	r25, r25
    1e7c:	e8 0f       	add	r30, r24
    1e7e:	f9 1f       	adc	r31, r25
    1e80:	e0 0f       	add	r30, r16
    1e82:	f1 1f       	adc	r31, r17
    1e84:	ee 0f       	add	r30, r30
    1e86:	ff 1f       	adc	r31, r31
    1e88:	e4 0f       	add	r30, r20
    1e8a:	f5 1f       	adc	r31, r21
    1e8c:	80 81       	ld	r24, Z
    1e8e:	91 81       	ldd	r25, Z+1	; 0x01
    1e90:	8d 93       	st	X+, r24
    1e92:	9c 93       	st	X, r25
					chess[filew4][rankw4]=00;
    1e94:	c9 01       	movw	r24, r18
    1e96:	9c 01       	movw	r18, r24
    1e98:	a3 e0       	ldi	r26, 0x03	; 3
    1e9a:	22 0f       	add	r18, r18
    1e9c:	33 1f       	adc	r19, r19
    1e9e:	aa 95       	dec	r26
    1ea0:	e1 f7       	brne	.-8      	; 0x1e9a <main+0x162c>
    1ea2:	88 0f       	add	r24, r24
    1ea4:	99 1f       	adc	r25, r25
    1ea6:	28 0f       	add	r18, r24
    1ea8:	39 1f       	adc	r19, r25
    1eaa:	20 0f       	add	r18, r16
    1eac:	31 1f       	adc	r19, r17
    1eae:	22 0f       	add	r18, r18
    1eb0:	33 1f       	adc	r19, r19
    1eb2:	42 0f       	add	r20, r18
    1eb4:	53 1f       	adc	r21, r19
    1eb6:	fa 01       	movw	r30, r20
    1eb8:	11 82       	std	Z+1, r1	; 0x01
    1eba:	10 82       	st	Z, r1
					filew4=file;rankw4=rank;
    1ebc:	60 93 9b 00 	sts	0x009B, r22
    1ec0:	70 93 9c 00 	sts	0x009C, r23
    1ec4:	f0 92 9e 00 	sts	0x009E, r15
    1ec8:	e0 92 9d 00 	sts	0x009D, r14
    1ecc:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
				}
			}
		}
		
		else if(moves%2==1)
    1ed0:	62 e0       	ldi	r22, 0x02	; 2
    1ed2:	70 e0       	ldi	r23, 0x00	; 0
    1ed4:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    1ed8:	81 30       	cpi	r24, 0x01	; 1
    1eda:	91 05       	cpc	r25, r1
    1edc:	11 f0       	breq	.+4      	; 0x1ee2 <main+0x1674>
    1ede:	0c 94 71 17 	jmp	0x2ee2	; 0x2ee2 <main+0x2674>
		{
			if(fileb4==file&&rankb4!=rank)						//BLACK QUEEN as HROOK
    1ee2:	20 91 9f 00 	lds	r18, 0x009F
    1ee6:	30 91 a0 00 	lds	r19, 0x00A0
    1eea:	40 91 93 01 	lds	r20, 0x0193
    1eee:	50 91 94 01 	lds	r21, 0x0194
    1ef2:	60 91 a3 01 	lds	r22, 0x01A3
    1ef6:	70 91 a4 01 	lds	r23, 0x01A4
    1efa:	00 91 a1 00 	lds	r16, 0x00A1
    1efe:	10 91 a2 00 	lds	r17, 0x00A2
    1f02:	24 17       	cp	r18, r20
    1f04:	35 07       	cpc	r19, r21
    1f06:	09 f0       	breq	.+2      	; 0x1f0a <main+0x169c>
    1f08:	62 c0       	rjmp	.+196    	; 0x1fce <main+0x1760>
    1f0a:	06 17       	cp	r16, r22
    1f0c:	17 07       	cpc	r17, r23
    1f0e:	09 f4       	brne	.+2      	; 0x1f12 <main+0x16a4>
    1f10:	c0 c0       	rjmp	.+384    	; 0x2092 <main+0x1824>
			{
				queen_hrook=1;
    1f12:	90 93 78 01 	sts	0x0178, r25
    1f16:	80 93 77 01 	sts	0x0177, r24
				x2=file;	x1=x2;
    1f1a:	30 93 92 01 	sts	0x0192, r19
    1f1e:	20 93 91 01 	sts	0x0191, r18
    1f22:	30 93 a2 01 	sts	0x01A2, r19
    1f26:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=rankb4;
    1f2a:	70 93 90 01 	sts	0x0190, r23
    1f2e:	60 93 8f 01 	sts	0x018F, r22
    1f32:	10 93 a8 01 	sts	0x01A8, r17
    1f36:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[fileb4][rankb4];
    1f3a:	20 91 9f 00 	lds	r18, 0x009F
    1f3e:	30 91 a0 00 	lds	r19, 0x00A0
    1f42:	80 91 93 01 	lds	r24, 0x0193
    1f46:	90 91 94 01 	lds	r25, 0x0194
    1f4a:	dc 01       	movw	r26, r24
    1f4c:	53 e0       	ldi	r21, 0x03	; 3
    1f4e:	aa 0f       	add	r26, r26
    1f50:	bb 1f       	adc	r27, r27
    1f52:	5a 95       	dec	r21
    1f54:	e1 f7       	brne	.-8      	; 0x1f4e <main+0x16e0>
    1f56:	88 0f       	add	r24, r24
    1f58:	99 1f       	adc	r25, r25
    1f5a:	a8 0f       	add	r26, r24
    1f5c:	b9 1f       	adc	r27, r25
    1f5e:	a6 0f       	add	r26, r22
    1f60:	b7 1f       	adc	r27, r23
    1f62:	aa 0f       	add	r26, r26
    1f64:	bb 1f       	adc	r27, r27
    1f66:	ae 01       	movw	r20, r28
    1f68:	4f 5f       	subi	r20, 0xFF	; 255
    1f6a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f6c:	a4 0f       	add	r26, r20
    1f6e:	b5 1f       	adc	r27, r21
    1f70:	c9 01       	movw	r24, r18
    1f72:	fc 01       	movw	r30, r24
    1f74:	ee 0f       	add	r30, r30
    1f76:	ff 1f       	adc	r31, r31
    1f78:	ee 0f       	add	r30, r30
    1f7a:	ff 1f       	adc	r31, r31
    1f7c:	ee 0f       	add	r30, r30
    1f7e:	ff 1f       	adc	r31, r31
    1f80:	88 0f       	add	r24, r24
    1f82:	99 1f       	adc	r25, r25
    1f84:	e8 0f       	add	r30, r24
    1f86:	f9 1f       	adc	r31, r25
    1f88:	e0 0f       	add	r30, r16
    1f8a:	f1 1f       	adc	r31, r17
    1f8c:	ee 0f       	add	r30, r30
    1f8e:	ff 1f       	adc	r31, r31
    1f90:	e4 0f       	add	r30, r20
    1f92:	f5 1f       	adc	r31, r21
    1f94:	80 81       	ld	r24, Z
    1f96:	91 81       	ldd	r25, Z+1	; 0x01
    1f98:	8d 93       	st	X+, r24
    1f9a:	9c 93       	st	X, r25
				chess[fileb4][rankb4]=00;
    1f9c:	c9 01       	movw	r24, r18
    1f9e:	9c 01       	movw	r18, r24
    1fa0:	a3 e0       	ldi	r26, 0x03	; 3
    1fa2:	22 0f       	add	r18, r18
    1fa4:	33 1f       	adc	r19, r19
    1fa6:	aa 95       	dec	r26
    1fa8:	e1 f7       	brne	.-8      	; 0x1fa2 <main+0x1734>
    1faa:	88 0f       	add	r24, r24
    1fac:	99 1f       	adc	r25, r25
    1fae:	28 0f       	add	r18, r24
    1fb0:	39 1f       	adc	r19, r25
    1fb2:	20 0f       	add	r18, r16
    1fb4:	31 1f       	adc	r19, r17
    1fb6:	22 0f       	add	r18, r18
    1fb8:	33 1f       	adc	r19, r19
    1fba:	42 0f       	add	r20, r18
    1fbc:	53 1f       	adc	r21, r19
    1fbe:	fa 01       	movw	r30, r20
    1fc0:	11 82       	std	Z+1, r1	; 0x01
    1fc2:	10 82       	st	Z, r1
				rankb4=rank;
    1fc4:	70 93 a2 00 	sts	0x00A2, r23
    1fc8:	60 93 a1 00 	sts	0x00A1, r22
    1fcc:	62 c0       	rjmp	.+196    	; 0x2092 <main+0x1824>
			}
			else if(fileb4!=file&&rankb4==rank)
    1fce:	06 17       	cp	r16, r22
    1fd0:	17 07       	cpc	r17, r23
    1fd2:	09 f0       	breq	.+2      	; 0x1fd6 <main+0x1768>
    1fd4:	5e c0       	rjmp	.+188    	; 0x2092 <main+0x1824>
			{
				queen_hrook=1;
    1fd6:	90 93 78 01 	sts	0x0178, r25
    1fda:	80 93 77 01 	sts	0x0177, r24
				x2=file;	x1=fileb4;
    1fde:	50 93 92 01 	sts	0x0192, r21
    1fe2:	40 93 91 01 	sts	0x0191, r20
    1fe6:	30 93 a2 01 	sts	0x01A2, r19
    1fea:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=y2;
    1fee:	10 93 90 01 	sts	0x0190, r17
    1ff2:	00 93 8f 01 	sts	0x018F, r16
    1ff6:	10 93 a8 01 	sts	0x01A8, r17
    1ffa:	00 93 a7 01 	sts	0x01A7, r16
				
				chess[file][rank]=chess[fileb4][rankb4];
    1ffe:	60 91 93 01 	lds	r22, 0x0193
    2002:	70 91 94 01 	lds	r23, 0x0194
    2006:	20 91 9f 00 	lds	r18, 0x009F
    200a:	30 91 a0 00 	lds	r19, 0x00A0
    200e:	cb 01       	movw	r24, r22
    2010:	dc 01       	movw	r26, r24
    2012:	53 e0       	ldi	r21, 0x03	; 3
    2014:	aa 0f       	add	r26, r26
    2016:	bb 1f       	adc	r27, r27
    2018:	5a 95       	dec	r21
    201a:	e1 f7       	brne	.-8      	; 0x2014 <main+0x17a6>
    201c:	88 0f       	add	r24, r24
    201e:	99 1f       	adc	r25, r25
    2020:	a8 0f       	add	r26, r24
    2022:	b9 1f       	adc	r27, r25
    2024:	a0 0f       	add	r26, r16
    2026:	b1 1f       	adc	r27, r17
    2028:	aa 0f       	add	r26, r26
    202a:	bb 1f       	adc	r27, r27
    202c:	ae 01       	movw	r20, r28
    202e:	4f 5f       	subi	r20, 0xFF	; 255
    2030:	5f 4f       	sbci	r21, 0xFF	; 255
    2032:	a4 0f       	add	r26, r20
    2034:	b5 1f       	adc	r27, r21
    2036:	c9 01       	movw	r24, r18
    2038:	fc 01       	movw	r30, r24
    203a:	ee 0f       	add	r30, r30
    203c:	ff 1f       	adc	r31, r31
    203e:	ee 0f       	add	r30, r30
    2040:	ff 1f       	adc	r31, r31
    2042:	ee 0f       	add	r30, r30
    2044:	ff 1f       	adc	r31, r31
    2046:	88 0f       	add	r24, r24
    2048:	99 1f       	adc	r25, r25
    204a:	e8 0f       	add	r30, r24
    204c:	f9 1f       	adc	r31, r25
    204e:	e0 0f       	add	r30, r16
    2050:	f1 1f       	adc	r31, r17
    2052:	ee 0f       	add	r30, r30
    2054:	ff 1f       	adc	r31, r31
    2056:	e4 0f       	add	r30, r20
    2058:	f5 1f       	adc	r31, r21
    205a:	80 81       	ld	r24, Z
    205c:	91 81       	ldd	r25, Z+1	; 0x01
    205e:	8d 93       	st	X+, r24
    2060:	9c 93       	st	X, r25
				chess[fileb4][rankb4]=00;
    2062:	c9 01       	movw	r24, r18
    2064:	9c 01       	movw	r18, r24
    2066:	a3 e0       	ldi	r26, 0x03	; 3
    2068:	22 0f       	add	r18, r18
    206a:	33 1f       	adc	r19, r19
    206c:	aa 95       	dec	r26
    206e:	e1 f7       	brne	.-8      	; 0x2068 <main+0x17fa>
    2070:	88 0f       	add	r24, r24
    2072:	99 1f       	adc	r25, r25
    2074:	28 0f       	add	r18, r24
    2076:	39 1f       	adc	r19, r25
    2078:	20 0f       	add	r18, r16
    207a:	31 1f       	adc	r19, r17
    207c:	22 0f       	add	r18, r18
    207e:	33 1f       	adc	r19, r19
    2080:	42 0f       	add	r20, r18
    2082:	53 1f       	adc	r21, r19
    2084:	fa 01       	movw	r30, r20
    2086:	11 82       	std	Z+1, r1	; 0x01
    2088:	10 82       	st	Z, r1
				fileb4=file;
    208a:	60 93 9f 00 	sts	0x009F, r22
    208e:	70 93 a0 00 	sts	0x00A0, r23
			}
			
			check_color();
    2092:	0e 94 9b 03 	call	0x736	; 0x736 <check_color>
			if(color==qd8_color)						//BLACK QUEEN as BISHOP
    2096:	20 91 9f 01 	lds	r18, 0x019F
    209a:	30 91 a0 01 	lds	r19, 0x01A0
    209e:	80 91 85 01 	lds	r24, 0x0185
    20a2:	90 91 86 01 	lds	r25, 0x0186
    20a6:	28 17       	cp	r18, r24
    20a8:	39 07       	cpc	r19, r25
    20aa:	09 f0       	breq	.+2      	; 0x20ae <main+0x1840>
    20ac:	1a c7       	rjmp	.+3636   	; 0x2ee2 <main+0x2674>
			{
				queen_bishop=1;
    20ae:	81 e0       	ldi	r24, 0x01	; 1
    20b0:	90 e0       	ldi	r25, 0x00	; 0
    20b2:	90 93 7a 01 	sts	0x017A, r25
    20b6:	80 93 79 01 	sts	0x0179, r24
				if(fileb4!=file&&rankb4!=rank)
    20ba:	20 91 9f 00 	lds	r18, 0x009F
    20be:	30 91 a0 00 	lds	r19, 0x00A0
    20c2:	80 91 93 01 	lds	r24, 0x0193
    20c6:	90 91 94 01 	lds	r25, 0x0194
    20ca:	28 17       	cp	r18, r24
    20cc:	39 07       	cpc	r19, r25
    20ce:	09 f4       	brne	.+2      	; 0x20d2 <main+0x1864>
    20d0:	08 c7       	rjmp	.+3600   	; 0x2ee2 <main+0x2674>
    20d2:	e0 90 a3 01 	lds	r14, 0x01A3
    20d6:	f0 90 a4 01 	lds	r15, 0x01A4
    20da:	00 91 a1 00 	lds	r16, 0x00A1
    20de:	10 91 a2 00 	lds	r17, 0x00A2
    20e2:	0e 15       	cp	r16, r14
    20e4:	1f 05       	cpc	r17, r15
    20e6:	09 f4       	brne	.+2      	; 0x20ea <main+0x187c>
    20e8:	fc c6       	rjmp	.+3576   	; 0x2ee2 <main+0x2674>
				{
					x2=rank;	x1=rankb4;
    20ea:	f0 92 92 01 	sts	0x0192, r15
    20ee:	e0 92 91 01 	sts	0x0191, r14
    20f2:	10 93 a2 01 	sts	0x01A2, r17
    20f6:	00 93 a1 01 	sts	0x01A1, r16
					y2=file;	y1=fileb4;
    20fa:	90 93 90 01 	sts	0x0190, r25
    20fe:	80 93 8f 01 	sts	0x018F, r24
    2102:	30 93 a8 01 	sts	0x01A8, r19
    2106:	20 93 a7 01 	sts	0x01A7, r18
					
					chess[file][rank]=chess[fileb4][rankb4];
    210a:	60 91 93 01 	lds	r22, 0x0193
    210e:	70 91 94 01 	lds	r23, 0x0194
    2112:	20 91 9f 00 	lds	r18, 0x009F
    2116:	30 91 a0 00 	lds	r19, 0x00A0
    211a:	cb 01       	movw	r24, r22
    211c:	dc 01       	movw	r26, r24
    211e:	53 e0       	ldi	r21, 0x03	; 3
    2120:	aa 0f       	add	r26, r26
    2122:	bb 1f       	adc	r27, r27
    2124:	5a 95       	dec	r21
    2126:	e1 f7       	brne	.-8      	; 0x2120 <main+0x18b2>
    2128:	88 0f       	add	r24, r24
    212a:	99 1f       	adc	r25, r25
    212c:	a8 0f       	add	r26, r24
    212e:	b9 1f       	adc	r27, r25
    2130:	ae 0d       	add	r26, r14
    2132:	bf 1d       	adc	r27, r15
    2134:	aa 0f       	add	r26, r26
    2136:	bb 1f       	adc	r27, r27
    2138:	ae 01       	movw	r20, r28
    213a:	4f 5f       	subi	r20, 0xFF	; 255
    213c:	5f 4f       	sbci	r21, 0xFF	; 255
    213e:	a4 0f       	add	r26, r20
    2140:	b5 1f       	adc	r27, r21
    2142:	c9 01       	movw	r24, r18
    2144:	fc 01       	movw	r30, r24
    2146:	ee 0f       	add	r30, r30
    2148:	ff 1f       	adc	r31, r31
    214a:	ee 0f       	add	r30, r30
    214c:	ff 1f       	adc	r31, r31
    214e:	ee 0f       	add	r30, r30
    2150:	ff 1f       	adc	r31, r31
    2152:	88 0f       	add	r24, r24
    2154:	99 1f       	adc	r25, r25
    2156:	e8 0f       	add	r30, r24
    2158:	f9 1f       	adc	r31, r25
    215a:	e0 0f       	add	r30, r16
    215c:	f1 1f       	adc	r31, r17
    215e:	ee 0f       	add	r30, r30
    2160:	ff 1f       	adc	r31, r31
    2162:	e4 0f       	add	r30, r20
    2164:	f5 1f       	adc	r31, r21
    2166:	80 81       	ld	r24, Z
    2168:	91 81       	ldd	r25, Z+1	; 0x01
    216a:	8d 93       	st	X+, r24
    216c:	9c 93       	st	X, r25
					chess[fileb4][rankb4]=00;
    216e:	c9 01       	movw	r24, r18
    2170:	9c 01       	movw	r18, r24
    2172:	f3 e0       	ldi	r31, 0x03	; 3
    2174:	22 0f       	add	r18, r18
    2176:	33 1f       	adc	r19, r19
    2178:	fa 95       	dec	r31
    217a:	e1 f7       	brne	.-8      	; 0x2174 <main+0x1906>
    217c:	88 0f       	add	r24, r24
    217e:	99 1f       	adc	r25, r25
    2180:	28 0f       	add	r18, r24
    2182:	39 1f       	adc	r19, r25
    2184:	20 0f       	add	r18, r16
    2186:	31 1f       	adc	r19, r17
    2188:	22 0f       	add	r18, r18
    218a:	33 1f       	adc	r19, r19
    218c:	42 0f       	add	r20, r18
    218e:	53 1f       	adc	r21, r19
    2190:	fa 01       	movw	r30, r20
    2192:	11 82       	std	Z+1, r1	; 0x01
    2194:	10 82       	st	Z, r1
					fileb4=file;rankb4=rank;
    2196:	60 93 9f 00 	sts	0x009F, r22
    219a:	70 93 a0 00 	sts	0x00A0, r23
    219e:	f0 92 a2 00 	sts	0x00A2, r15
    21a2:	e0 92 a1 00 	sts	0x00A1, r14
    21a6:	9d c6       	rjmp	.+3386   	; 0x2ee2 <main+0x2674>
			}
		}
		goto END;
	}
	
	else if(letter==4)						//KNIGHT
    21a8:	04 97       	sbiw	r24, 0x04	; 4
    21aa:	09 f0       	breq	.+2      	; 0x21ae <main+0x1940>
    21ac:	9a c6       	rjmp	.+3380   	; 0x2ee2 <main+0x2674>
	{
		KNIGHT:
		bishop=1;
    21ae:	a1 e0       	ldi	r26, 0x01	; 1
    21b0:	aa 2e       	mov	r10, r26
    21b2:	b1 2c       	mov	r11, r1
    21b4:	b0 92 76 01 	sts	0x0176, r11
    21b8:	a0 92 75 01 	sts	0x0175, r10
		if(moves%2==0)
    21bc:	80 91 6f 01 	lds	r24, 0x016F
    21c0:	90 91 70 01 	lds	r25, 0x0170
    21c4:	80 fd       	sbrc	r24, 0
    21c6:	b9 c1       	rjmp	.+882    	; 0x253a <main+0x1ccc>
		{
			if(chess[file-2][rank-1]==21)
    21c8:	60 91 93 01 	lds	r22, 0x0193
    21cc:	70 91 94 01 	lds	r23, 0x0194
    21d0:	9b 01       	movw	r18, r22
    21d2:	22 50       	subi	r18, 0x02	; 2
    21d4:	30 40       	sbci	r19, 0x00	; 0
    21d6:	40 91 a3 01 	lds	r20, 0x01A3
    21da:	50 91 a4 01 	lds	r21, 0x01A4
    21de:	6a 01       	movw	r12, r20
    21e0:	08 94       	sec
    21e2:	c1 08       	sbc	r12, r1
    21e4:	d1 08       	sbc	r13, r1
    21e6:	89 01       	movw	r16, r18
    21e8:	00 0f       	add	r16, r16
    21ea:	11 1f       	adc	r17, r17
    21ec:	c9 01       	movw	r24, r18
    21ee:	e3 e0       	ldi	r30, 0x03	; 3
    21f0:	88 0f       	add	r24, r24
    21f2:	99 1f       	adc	r25, r25
    21f4:	ea 95       	dec	r30
    21f6:	e1 f7       	brne	.-8      	; 0x21f0 <main+0x1982>
    21f8:	08 0f       	add	r16, r24
    21fa:	19 1f       	adc	r17, r25
    21fc:	f8 01       	movw	r30, r16
    21fe:	ec 0d       	add	r30, r12
    2200:	fd 1d       	adc	r31, r13
    2202:	ee 0f       	add	r30, r30
    2204:	ff 1f       	adc	r31, r31
    2206:	de 01       	movw	r26, r28
    2208:	11 96       	adiw	r26, 0x01	; 1
    220a:	ea 0f       	add	r30, r26
    220c:	fb 1f       	adc	r31, r27
    220e:	80 81       	ld	r24, Z
    2210:	91 81       	ldd	r25, Z+1	; 0x01
    2212:	85 31       	cpi	r24, 0x15	; 21
    2214:	91 05       	cpc	r25, r1
    2216:	09 f4       	brne	.+2      	; 0x221a <main+0x19ac>
    2218:	61 c0       	rjmp	.+194    	; 0x22dc <main+0x1a6e>
				chess[file][rank]=21;
				chess[file-2][rank-1]=00;
				goto FINISH;
			}
			
			else if(chess[file-2][rank-1]==71)
    221a:	87 34       	cpi	r24, 0x47	; 71
    221c:	91 05       	cpc	r25, r1
    221e:	09 f4       	brne	.+2      	; 0x2222 <main+0x19b4>
    2220:	5d c0       	rjmp	.+186    	; 0x22dc <main+0x1a6e>
				chess[file][rank]=71;
				chess[file-2][rank-1]=00;
				goto FINISH;
			}
			
			else if(chess[file-2][rank+1]==21)
    2222:	7a 01       	movw	r14, r20
    2224:	08 94       	sec
    2226:	e1 1c       	adc	r14, r1
    2228:	f1 1c       	adc	r15, r1
    222a:	f8 01       	movw	r30, r16
    222c:	ee 0d       	add	r30, r14
    222e:	ff 1d       	adc	r31, r15
    2230:	ee 0f       	add	r30, r30
    2232:	ff 1f       	adc	r31, r31
    2234:	ea 0f       	add	r30, r26
    2236:	fb 1f       	adc	r31, r27
    2238:	80 81       	ld	r24, Z
    223a:	91 81       	ldd	r25, Z+1	; 0x01
    223c:	85 31       	cpi	r24, 0x15	; 21
    223e:	91 05       	cpc	r25, r1
    2240:	69 f5       	brne	.+90     	; 0x229c <main+0x1a2e>
			{
				x2=file;	x1=file-2;
    2242:	70 93 92 01 	sts	0x0192, r23
    2246:	60 93 91 01 	sts	0x0191, r22
    224a:	30 93 a2 01 	sts	0x01A2, r19
    224e:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=rank+1;
    2252:	50 93 90 01 	sts	0x0190, r21
    2256:	40 93 8f 01 	sts	0x018F, r20
    225a:	f0 92 a8 01 	sts	0x01A8, r15
    225e:	e0 92 a7 01 	sts	0x01A7, r14
				chess[file][rank]=21;
    2262:	fb 01       	movw	r30, r22
    2264:	23 e0       	ldi	r18, 0x03	; 3
    2266:	ee 0f       	add	r30, r30
    2268:	ff 1f       	adc	r31, r31
    226a:	2a 95       	dec	r18
    226c:	e1 f7       	brne	.-8      	; 0x2266 <main+0x19f8>
    226e:	66 0f       	add	r22, r22
    2270:	77 1f       	adc	r23, r23
    2272:	e6 0f       	add	r30, r22
    2274:	f7 1f       	adc	r31, r23
    2276:	e4 0f       	add	r30, r20
    2278:	f5 1f       	adc	r31, r21
    227a:	ee 0f       	add	r30, r30
    227c:	ff 1f       	adc	r31, r31
    227e:	ea 0f       	add	r30, r26
    2280:	fb 1f       	adc	r31, r27
    2282:	91 83       	std	Z+1, r25	; 0x01
    2284:	80 83       	st	Z, r24
				chess[file-2][rank+1]=00;
    2286:	40 0f       	add	r20, r16
    2288:	51 1f       	adc	r21, r17
    228a:	4f 5f       	subi	r20, 0xFF	; 255
    228c:	5f 4f       	sbci	r21, 0xFF	; 255
    228e:	44 0f       	add	r20, r20
    2290:	55 1f       	adc	r21, r21
    2292:	a4 0f       	add	r26, r20
    2294:	b5 1f       	adc	r27, r21
    2296:	1d 92       	st	X+, r1
    2298:	1c 92       	st	X, r1
    229a:	92 c3       	rjmp	.+1828   	; 0x29c0 <main+0x2152>
				goto FINISH;
			}
			
			else if(chess[file-2][rank+1]==71)
    229c:	87 34       	cpi	r24, 0x47	; 71
    229e:	91 05       	cpc	r25, r1
    22a0:	81 f2       	breq	.-96     	; 0x2242 <main+0x19d4>
				chess[file][rank]=71;
				chess[file-2][rank+1]=00;
				goto FINISH;
			}
			
			else if(chess[file+2][rank-1]==21)
    22a2:	9b 01       	movw	r18, r22
    22a4:	2e 5f       	subi	r18, 0xFE	; 254
    22a6:	3f 4f       	sbci	r19, 0xFF	; 255
    22a8:	89 01       	movw	r16, r18
    22aa:	00 0f       	add	r16, r16
    22ac:	11 1f       	adc	r17, r17
    22ae:	c9 01       	movw	r24, r18
    22b0:	e3 e0       	ldi	r30, 0x03	; 3
    22b2:	88 0f       	add	r24, r24
    22b4:	99 1f       	adc	r25, r25
    22b6:	ea 95       	dec	r30
    22b8:	e1 f7       	brne	.-8      	; 0x22b2 <main+0x1a44>
    22ba:	08 0f       	add	r16, r24
    22bc:	19 1f       	adc	r17, r25
    22be:	f8 01       	movw	r30, r16
    22c0:	ec 0d       	add	r30, r12
    22c2:	fd 1d       	adc	r31, r13
    22c4:	ee 0f       	add	r30, r30
    22c6:	ff 1f       	adc	r31, r31
    22c8:	ea 0f       	add	r30, r26
    22ca:	fb 1f       	adc	r31, r27
    22cc:	80 81       	ld	r24, Z
    22ce:	91 81       	ldd	r25, Z+1	; 0x01
    22d0:	85 31       	cpi	r24, 0x15	; 21
    22d2:	91 05       	cpc	r25, r1
    22d4:	19 f0       	breq	.+6      	; 0x22dc <main+0x1a6e>
				chess[file][rank]=21;
				chess[file+2][rank-1]=00;
				goto FINISH;
			}
			
			else if(chess[file+2][rank-1]==71)
    22d6:	87 34       	cpi	r24, 0x47	; 71
    22d8:	91 05       	cpc	r25, r1
    22da:	39 f5       	brne	.+78     	; 0x232a <main+0x1abc>
			{
				x2=file;	x1=file+2;
    22dc:	70 93 92 01 	sts	0x0192, r23
    22e0:	60 93 91 01 	sts	0x0191, r22
    22e4:	30 93 a2 01 	sts	0x01A2, r19
    22e8:	20 93 a1 01 	sts	0x01A1, r18
				y2=rank;	y1=rank-1;
    22ec:	50 93 90 01 	sts	0x0190, r21
    22f0:	40 93 8f 01 	sts	0x018F, r20
    22f4:	d0 92 a8 01 	sts	0x01A8, r13
    22f8:	c0 92 a7 01 	sts	0x01A7, r12
				chess[file][rank]=71;
    22fc:	fb 01       	movw	r30, r22
    22fe:	23 e0       	ldi	r18, 0x03	; 3
    2300:	ee 0f       	add	r30, r30
    2302:	ff 1f       	adc	r31, r31
    2304:	2a 95       	dec	r18
    2306:	e1 f7       	brne	.-8      	; 0x2300 <main+0x1a92>
    2308:	66 0f       	add	r22, r22
    230a:	77 1f       	adc	r23, r23
    230c:	e6 0f       	add	r30, r22
    230e:	f7 1f       	adc	r31, r23
    2310:	e4 0f       	add	r30, r20
    2312:	f5 1f       	adc	r31, r21
    2314:	ee 0f       	add	r30, r30
    2316:	ff 1f       	adc	r31, r31
    2318:	ea 0f       	add	r30, r26
    231a:	fb 1f       	adc	r31, r27
    231c:	91 83       	std	Z+1, r25	; 0x01
    231e:	80 83       	st	Z, r24
				chess[file+2][rank-1]=00;
    2320:	40 0f       	add	r20, r16
    2322:	51 1f       	adc	r21, r17
    2324:	4a 19       	sub	r20, r10
    2326:	5b 09       	sbc	r21, r11
    2328:	b2 cf       	rjmp	.-156    	; 0x228e <main+0x1a20>
				goto FINISH;
			}
			
			else if(chess[file+2][rank+1]==21)
    232a:	f8 01       	movw	r30, r16
    232c:	ee 0d       	add	r30, r14
    232e:	ff 1d       	adc	r31, r15
    2330:	ee 0f       	add	r30, r30
    2332:	ff 1f       	adc	r31, r31
    2334:	ea 0f       	add	r30, r26
    2336:	fb 1f       	adc	r31, r27
    2338:	80 81       	ld	r24, Z
    233a:	91 81       	ldd	r25, Z+1	; 0x01
    233c:	85 31       	cpi	r24, 0x15	; 21
    233e:	91 05       	cpc	r25, r1
    2340:	09 f4       	brne	.+2      	; 0x2344 <main+0x1ad6>
    2342:	7f cf       	rjmp	.-258    	; 0x2242 <main+0x19d4>
				chess[file][rank]=21;
				chess[file+2][rank+1]=00;
				goto FINISH;
			}
			
			else if(chess[file+2][rank+1]==71)
    2344:	87 34       	cpi	r24, 0x47	; 71
    2346:	91 05       	cpc	r25, r1
    2348:	09 f4       	brne	.+2      	; 0x234c <main+0x1ade>
    234a:	7b cf       	rjmp	.-266    	; 0x2242 <main+0x19d4>
				chess[file][rank]=71;
				chess[file+2][rank+1]=00;
				goto FINISH;
			}
			
			else if(chess[file-1][rank-2]==21)
    234c:	7b 01       	movw	r14, r22
    234e:	08 94       	sec
    2350:	e1 08       	sbc	r14, r1
    2352:	f1 08       	sbc	r15, r1
    2354:	fa 01       	movw	r30, r20
    2356:	32 97       	sbiw	r30, 0x02	; 2
    2358:	c7 01       	movw	r24, r14
    235a:	88 0f       	add	r24, r24
    235c:	99 1f       	adc	r25, r25
    235e:	97 01       	movw	r18, r14
    2360:	03 e0       	ldi	r16, 0x03	; 3
    2362:	22 0f       	add	r18, r18
    2364:	33 1f       	adc	r19, r19
    2366:	0a 95       	dec	r16
    2368:	e1 f7       	brne	.-8      	; 0x2362 <main+0x1af4>
    236a:	82 0f       	add	r24, r18
    236c:	93 1f       	adc	r25, r19
    236e:	8e 0f       	add	r24, r30
    2370:	9f 1f       	adc	r25, r31
    2372:	88 0f       	add	r24, r24
    2374:	99 1f       	adc	r25, r25
    2376:	a8 0f       	add	r26, r24
    2378:	b9 1f       	adc	r27, r25
    237a:	0d 90       	ld	r0, X+
    237c:	bc 91       	ld	r27, X
    237e:	a0 2d       	mov	r26, r0
    2380:	a5 31       	cpi	r26, 0x15	; 21
    2382:	b1 05       	cpc	r27, r1
    2384:	09 f0       	breq	.+2      	; 0x2388 <main+0x1b1a>
    2386:	47 c0       	rjmp	.+142    	; 0x2416 <main+0x1ba8>
			{
				x2=file;	x1=file-1;
    2388:	70 93 92 01 	sts	0x0192, r23
    238c:	60 93 91 01 	sts	0x0191, r22
    2390:	80 91 93 01 	lds	r24, 0x0193
    2394:	90 91 94 01 	lds	r25, 0x0194
    2398:	ac 01       	movw	r20, r24
    239a:	41 50       	subi	r20, 0x01	; 1
    239c:	50 40       	sbci	r21, 0x00	; 0
    239e:	50 93 a2 01 	sts	0x01A2, r21
    23a2:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank-2;
    23a6:	20 91 a3 01 	lds	r18, 0x01A3
    23aa:	30 91 a4 01 	lds	r19, 0x01A4
    23ae:	30 93 90 01 	sts	0x0190, r19
    23b2:	20 93 8f 01 	sts	0x018F, r18
    23b6:	22 50       	subi	r18, 0x02	; 2
    23b8:	30 40       	sbci	r19, 0x00	; 0
    23ba:	30 93 a8 01 	sts	0x01A8, r19
    23be:	20 93 a7 01 	sts	0x01A7, r18
    23c2:	2e 5f       	subi	r18, 0xFE	; 254
    23c4:	3f 4f       	sbci	r19, 0xFF	; 255
				chess[file][rank]=21;
    23c6:	fc 01       	movw	r30, r24
    23c8:	b3 e0       	ldi	r27, 0x03	; 3
    23ca:	ee 0f       	add	r30, r30
    23cc:	ff 1f       	adc	r31, r31
    23ce:	ba 95       	dec	r27
    23d0:	e1 f7       	brne	.-8      	; 0x23ca <main+0x1b5c>
    23d2:	88 0f       	add	r24, r24
    23d4:	99 1f       	adc	r25, r25
    23d6:	e8 0f       	add	r30, r24
    23d8:	f9 1f       	adc	r31, r25
    23da:	e2 0f       	add	r30, r18
    23dc:	f3 1f       	adc	r31, r19
    23de:	ee 0f       	add	r30, r30
    23e0:	ff 1f       	adc	r31, r31
    23e2:	de 01       	movw	r26, r28
    23e4:	11 96       	adiw	r26, 0x01	; 1
    23e6:	ea 0f       	add	r30, r26
    23e8:	fb 1f       	adc	r31, r27
    23ea:	85 e1       	ldi	r24, 0x15	; 21
    23ec:	90 e0       	ldi	r25, 0x00	; 0
    23ee:	91 83       	std	Z+1, r25	; 0x01
    23f0:	80 83       	st	Z, r24
				chess[file-1][rank-2]=00;
    23f2:	ca 01       	movw	r24, r20
    23f4:	63 e0       	ldi	r22, 0x03	; 3
    23f6:	88 0f       	add	r24, r24
    23f8:	99 1f       	adc	r25, r25
    23fa:	6a 95       	dec	r22
    23fc:	e1 f7       	brne	.-8      	; 0x23f6 <main+0x1b88>
    23fe:	44 0f       	add	r20, r20
    2400:	55 1f       	adc	r21, r21
    2402:	84 0f       	add	r24, r20
    2404:	95 1f       	adc	r25, r21
    2406:	82 0f       	add	r24, r18
    2408:	93 1f       	adc	r25, r19
    240a:	02 97       	sbiw	r24, 0x02	; 2
    240c:	88 0f       	add	r24, r24
    240e:	99 1f       	adc	r25, r25
    2410:	a8 0f       	add	r26, r24
    2412:	b9 1f       	adc	r27, r25
    2414:	40 cf       	rjmp	.-384    	; 0x2296 <main+0x1a28>
    2416:	8e 01       	movw	r16, r28
    2418:	0f 5f       	subi	r16, 0xFF	; 255
    241a:	1f 4f       	sbci	r17, 0xFF	; 255
				goto FINISH;
			}
			
			else if(chess[file-1][rank-2]==71)
    241c:	a7 34       	cpi	r26, 0x47	; 71
    241e:	b1 05       	cpc	r27, r1
    2420:	61 f4       	brne	.+24     	; 0x243a <main+0x1bcc>
			{
				x2=file;	x1=file-1;
    2422:	70 93 92 01 	sts	0x0192, r23
    2426:	60 93 91 01 	sts	0x0191, r22
    242a:	20 91 93 01 	lds	r18, 0x0193
    242e:	30 91 94 01 	lds	r19, 0x0194
    2432:	a9 01       	movw	r20, r18
    2434:	41 50       	subi	r20, 0x01	; 1
    2436:	50 40       	sbci	r21, 0x00	; 0
    2438:	fd c1       	rjmp	.+1018   	; 0x2834 <main+0x1fc6>
				chess[file][rank]=71;
				chess[file-1][rank-2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank-2]==21)
    243a:	cb 01       	movw	r24, r22
    243c:	01 96       	adiw	r24, 0x01	; 1
    243e:	9c 01       	movw	r18, r24
    2440:	a3 e0       	ldi	r26, 0x03	; 3
    2442:	22 0f       	add	r18, r18
    2444:	33 1f       	adc	r19, r19
    2446:	aa 95       	dec	r26
    2448:	e1 f7       	brne	.-8      	; 0x2442 <main+0x1bd4>
    244a:	88 0f       	add	r24, r24
    244c:	99 1f       	adc	r25, r25
    244e:	28 0f       	add	r18, r24
    2450:	39 1f       	adc	r19, r25
    2452:	e2 0f       	add	r30, r18
    2454:	f3 1f       	adc	r31, r19
    2456:	ee 0f       	add	r30, r30
    2458:	ff 1f       	adc	r31, r31
    245a:	e0 0f       	add	r30, r16
    245c:	f1 1f       	adc	r31, r17
    245e:	a0 81       	ld	r26, Z
    2460:	b1 81       	ldd	r27, Z+1	; 0x01
    2462:	a5 31       	cpi	r26, 0x15	; 21
    2464:	b1 05       	cpc	r27, r1
    2466:	19 f0       	breq	.+6      	; 0x246e <main+0x1c00>
				chess[file][rank]=21;
				chess[file+1][rank-2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank-2]==71)
    2468:	a7 34       	cpi	r26, 0x47	; 71
    246a:	b1 05       	cpc	r27, r1
    246c:	29 f4       	brne	.+10     	; 0x2478 <main+0x1c0a>
			{
				x2=file;	x1=file+1;
    246e:	70 93 92 01 	sts	0x0192, r23
    2472:	60 93 91 01 	sts	0x0191, r22
    2476:	d7 c1       	rjmp	.+942    	; 0x2826 <main+0x1fb8>
				chess[file][rank]=71;
				chess[file+1][rank-2]=00;
				goto FINISH;
			}
			
			else if(chess[file-1][rank+2]==21)
    2478:	da 01       	movw	r26, r20
    247a:	12 96       	adiw	r26, 0x02	; 2
    247c:	f7 01       	movw	r30, r14
    247e:	43 e0       	ldi	r20, 0x03	; 3
    2480:	ee 0f       	add	r30, r30
    2482:	ff 1f       	adc	r31, r31
    2484:	4a 95       	dec	r20
    2486:	e1 f7       	brne	.-8      	; 0x2480 <main+0x1c12>
    2488:	ee 0c       	add	r14, r14
    248a:	ff 1c       	adc	r15, r15
    248c:	ee 0d       	add	r30, r14
    248e:	ff 1d       	adc	r31, r15
    2490:	ea 0f       	add	r30, r26
    2492:	fb 1f       	adc	r31, r27
    2494:	ee 0f       	add	r30, r30
    2496:	ff 1f       	adc	r31, r31
    2498:	e0 0f       	add	r30, r16
    249a:	f1 1f       	adc	r31, r17
    249c:	e0 80       	ld	r14, Z
    249e:	f1 80       	ldd	r15, Z+1	; 0x01
    24a0:	f5 e1       	ldi	r31, 0x15	; 21
    24a2:	ef 16       	cp	r14, r31
    24a4:	f1 04       	cpc	r15, r1
    24a6:	21 f0       	breq	.+8      	; 0x24b0 <main+0x1c42>
				chess[file][rank]=21;
				chess[file-1][rank+2]=00;
				goto FINISH;
			}
			
			else if(chess[file-1][rank+2]==71)
    24a8:	87 e4       	ldi	r24, 0x47	; 71
    24aa:	e8 16       	cp	r14, r24
    24ac:	f1 04       	cpc	r15, r1
    24ae:	29 f4       	brne	.+10     	; 0x24ba <main+0x1c4c>
			{
				x2=file;	x1=file-1;
    24b0:	70 93 92 01 	sts	0x0192, r23
    24b4:	60 93 91 01 	sts	0x0191, r22
    24b8:	06 c2       	rjmp	.+1036   	; 0x28c6 <main+0x2058>
				chess[file][rank]=71;
				chess[file-1][rank+2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank+2]==21)
    24ba:	a2 0f       	add	r26, r18
    24bc:	b3 1f       	adc	r27, r19
    24be:	aa 0f       	add	r26, r26
    24c0:	bb 1f       	adc	r27, r27
    24c2:	a0 0f       	add	r26, r16
    24c4:	b1 1f       	adc	r27, r17
    24c6:	0d 90       	ld	r0, X+
    24c8:	bc 91       	ld	r27, X
    24ca:	a0 2d       	mov	r26, r0
    24cc:	a5 31       	cpi	r26, 0x15	; 21
    24ce:	b1 05       	cpc	r27, r1
    24d0:	21 f0       	breq	.+8      	; 0x24da <main+0x1c6c>
				chess[file][rank]=21;
				chess[file+1][rank+2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank+2]==71)
    24d2:	a7 34       	cpi	r26, 0x47	; 71
    24d4:	b1 05       	cpc	r27, r1
    24d6:	09 f0       	breq	.+2      	; 0x24da <main+0x1c6c>
    24d8:	73 c2       	rjmp	.+1254   	; 0x29c0 <main+0x2152>
			{
				x2=file;	x1=file+1;
    24da:	70 93 92 01 	sts	0x0192, r23
    24de:	60 93 91 01 	sts	0x0191, r22
    24e2:	20 91 93 01 	lds	r18, 0x0193
    24e6:	30 91 94 01 	lds	r19, 0x0194
    24ea:	a9 01       	movw	r20, r18
    24ec:	4f 5f       	subi	r20, 0xFF	; 255
    24ee:	5f 4f       	sbci	r21, 0xFF	; 255
    24f0:	50 93 a2 01 	sts	0x01A2, r21
    24f4:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank+2;
    24f8:	80 91 a3 01 	lds	r24, 0x01A3
    24fc:	90 91 a4 01 	lds	r25, 0x01A4
    2500:	90 93 90 01 	sts	0x0190, r25
    2504:	80 93 8f 01 	sts	0x018F, r24
    2508:	02 96       	adiw	r24, 0x02	; 2
    250a:	90 93 a8 01 	sts	0x01A8, r25
    250e:	80 93 a7 01 	sts	0x01A7, r24
    2512:	02 97       	sbiw	r24, 0x02	; 2
				chess[file][rank]=71;
    2514:	f9 01       	movw	r30, r18
    2516:	73 e0       	ldi	r23, 0x03	; 3
    2518:	ee 0f       	add	r30, r30
    251a:	ff 1f       	adc	r31, r31
    251c:	7a 95       	dec	r23
    251e:	e1 f7       	brne	.-8      	; 0x2518 <main+0x1caa>
    2520:	22 0f       	add	r18, r18
    2522:	33 1f       	adc	r19, r19
    2524:	e2 0f       	add	r30, r18
    2526:	f3 1f       	adc	r31, r19
    2528:	e8 0f       	add	r30, r24
    252a:	f9 1f       	adc	r31, r25
    252c:	ee 0f       	add	r30, r30
    252e:	ff 1f       	adc	r31, r31
    2530:	e0 0f       	add	r30, r16
    2532:	f1 1f       	adc	r31, r17
    2534:	b1 83       	std	Z+1, r27	; 0x01
    2536:	a0 83       	st	Z, r26
    2538:	30 c2       	rjmp	.+1120   	; 0x299a <main+0x212c>
				chess[file+1][rank+2]=00;
				goto FINISH;
			}
		}
		
		else if(moves%2==1)
    253a:	62 e0       	ldi	r22, 0x02	; 2
    253c:	70 e0       	ldi	r23, 0x00	; 0
    253e:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2542:	5c 01       	movw	r10, r24
    2544:	81 30       	cpi	r24, 0x01	; 1
    2546:	91 05       	cpc	r25, r1
    2548:	09 f0       	breq	.+2      	; 0x254c <main+0x1cde>
    254a:	3a c2       	rjmp	.+1140   	; 0x29c0 <main+0x2152>
		{
			if(chess[file-2][rank-1]==28)
    254c:	40 91 93 01 	lds	r20, 0x0193
    2550:	50 91 94 01 	lds	r21, 0x0194
    2554:	ba 01       	movw	r22, r20
    2556:	62 50       	subi	r22, 0x02	; 2
    2558:	70 40       	sbci	r23, 0x00	; 0
    255a:	20 91 a3 01 	lds	r18, 0x01A3
    255e:	30 91 a4 01 	lds	r19, 0x01A4
    2562:	69 01       	movw	r12, r18
    2564:	08 94       	sec
    2566:	c1 08       	sbc	r12, r1
    2568:	d1 08       	sbc	r13, r1
    256a:	8b 01       	movw	r16, r22
    256c:	00 0f       	add	r16, r16
    256e:	11 1f       	adc	r17, r17
    2570:	cb 01       	movw	r24, r22
    2572:	e3 e0       	ldi	r30, 0x03	; 3
    2574:	88 0f       	add	r24, r24
    2576:	99 1f       	adc	r25, r25
    2578:	ea 95       	dec	r30
    257a:	e1 f7       	brne	.-8      	; 0x2574 <main+0x1d06>
    257c:	08 0f       	add	r16, r24
    257e:	19 1f       	adc	r17, r25
    2580:	f8 01       	movw	r30, r16
    2582:	ec 0d       	add	r30, r12
    2584:	fd 1d       	adc	r31, r13
    2586:	ee 0f       	add	r30, r30
    2588:	ff 1f       	adc	r31, r31
    258a:	de 01       	movw	r26, r28
    258c:	11 96       	adiw	r26, 0x01	; 1
    258e:	ea 0f       	add	r30, r26
    2590:	fb 1f       	adc	r31, r27
    2592:	80 81       	ld	r24, Z
    2594:	91 81       	ldd	r25, Z+1	; 0x01
    2596:	8c 31       	cpi	r24, 0x1C	; 28
    2598:	91 05       	cpc	r25, r1
    259a:	a9 f1       	breq	.+106    	; 0x2606 <main+0x1d98>
				chess[file][rank]=28;
				chess[file-2][rank-1]=00;
				goto FINISH;
			}
			
			else if(chess[file-2][rank-1]==78)
    259c:	8e 34       	cpi	r24, 0x4E	; 78
    259e:	91 05       	cpc	r25, r1
    25a0:	91 f1       	breq	.+100    	; 0x2606 <main+0x1d98>
				chess[file][rank]=78;
				chess[file-2][rank-1]=00;
				goto FINISH;
			}
			
			else if(chess[file-2][rank+1]==28)
    25a2:	79 01       	movw	r14, r18
    25a4:	08 94       	sec
    25a6:	e1 1c       	adc	r14, r1
    25a8:	f1 1c       	adc	r15, r1
    25aa:	f8 01       	movw	r30, r16
    25ac:	ee 0d       	add	r30, r14
    25ae:	ff 1d       	adc	r31, r15
    25b0:	ee 0f       	add	r30, r30
    25b2:	ff 1f       	adc	r31, r31
    25b4:	ea 0f       	add	r30, r26
    25b6:	fb 1f       	adc	r31, r27
    25b8:	80 81       	ld	r24, Z
    25ba:	91 81       	ldd	r25, Z+1	; 0x01
    25bc:	8c 31       	cpi	r24, 0x1C	; 28
    25be:	91 05       	cpc	r25, r1
    25c0:	09 f4       	brne	.+2      	; 0x25c4 <main+0x1d56>
    25c2:	54 c0       	rjmp	.+168    	; 0x266c <main+0x1dfe>
				chess[file][rank]=28;
				chess[file-2][rank+1]=00;
				goto FINISH;
			}
			
			else if(chess[file-2][rank+1]==78)
    25c4:	8e 34       	cpi	r24, 0x4E	; 78
    25c6:	91 05       	cpc	r25, r1
    25c8:	09 f4       	brne	.+2      	; 0x25cc <main+0x1d5e>
    25ca:	50 c0       	rjmp	.+160    	; 0x266c <main+0x1dfe>
				chess[file][rank]=78;
				chess[file-2][rank+1]=00;
				goto FINISH;
			}
			
			else if(chess[file+2][rank-1]==28)
    25cc:	ba 01       	movw	r22, r20
    25ce:	6e 5f       	subi	r22, 0xFE	; 254
    25d0:	7f 4f       	sbci	r23, 0xFF	; 255
    25d2:	8b 01       	movw	r16, r22
    25d4:	00 0f       	add	r16, r16
    25d6:	11 1f       	adc	r17, r17
    25d8:	cb 01       	movw	r24, r22
    25da:	e3 e0       	ldi	r30, 0x03	; 3
    25dc:	88 0f       	add	r24, r24
    25de:	99 1f       	adc	r25, r25
    25e0:	ea 95       	dec	r30
    25e2:	e1 f7       	brne	.-8      	; 0x25dc <main+0x1d6e>
    25e4:	08 0f       	add	r16, r24
    25e6:	19 1f       	adc	r17, r25
    25e8:	f8 01       	movw	r30, r16
    25ea:	ec 0d       	add	r30, r12
    25ec:	fd 1d       	adc	r31, r13
    25ee:	ee 0f       	add	r30, r30
    25f0:	ff 1f       	adc	r31, r31
    25f2:	ea 0f       	add	r30, r26
    25f4:	fb 1f       	adc	r31, r27
    25f6:	80 81       	ld	r24, Z
    25f8:	91 81       	ldd	r25, Z+1	; 0x01
    25fa:	8c 31       	cpi	r24, 0x1C	; 28
    25fc:	91 05       	cpc	r25, r1
    25fe:	19 f0       	breq	.+6      	; 0x2606 <main+0x1d98>
				chess[file][rank]=28;
				chess[file+2][rank-1]=00;
				goto FINISH;
			}
			
			else if(chess[file+2][rank-1]==78)
    2600:	8e 34       	cpi	r24, 0x4E	; 78
    2602:	91 05       	cpc	r25, r1
    2604:	39 f5       	brne	.+78     	; 0x2654 <main+0x1de6>
			{
				x2=file;	x1=file+2;
    2606:	50 93 92 01 	sts	0x0192, r21
    260a:	40 93 91 01 	sts	0x0191, r20
    260e:	70 93 a2 01 	sts	0x01A2, r23
    2612:	60 93 a1 01 	sts	0x01A1, r22
				y2=rank;	y1=rank-1;
    2616:	30 93 90 01 	sts	0x0190, r19
    261a:	20 93 8f 01 	sts	0x018F, r18
    261e:	d0 92 a8 01 	sts	0x01A8, r13
    2622:	c0 92 a7 01 	sts	0x01A7, r12
				chess[file][rank]=78;
    2626:	fa 01       	movw	r30, r20
    2628:	73 e0       	ldi	r23, 0x03	; 3
    262a:	ee 0f       	add	r30, r30
    262c:	ff 1f       	adc	r31, r31
    262e:	7a 95       	dec	r23
    2630:	e1 f7       	brne	.-8      	; 0x262a <main+0x1dbc>
    2632:	44 0f       	add	r20, r20
    2634:	55 1f       	adc	r21, r21
    2636:	e4 0f       	add	r30, r20
    2638:	f5 1f       	adc	r31, r21
    263a:	e2 0f       	add	r30, r18
    263c:	f3 1f       	adc	r31, r19
    263e:	ee 0f       	add	r30, r30
    2640:	ff 1f       	adc	r31, r31
    2642:	ea 0f       	add	r30, r26
    2644:	fb 1f       	adc	r31, r27
    2646:	91 83       	std	Z+1, r25	; 0x01
    2648:	80 83       	st	Z, r24
				chess[file+2][rank-1]=00;
    264a:	20 0f       	add	r18, r16
    264c:	31 1f       	adc	r19, r17
    264e:	2a 19       	sub	r18, r10
    2650:	3b 09       	sbc	r19, r11
    2652:	32 c0       	rjmp	.+100    	; 0x26b8 <main+0x1e4a>
				goto FINISH;
			}
			
			else if(chess[file+2][rank+1]==28)
    2654:	f8 01       	movw	r30, r16
    2656:	ee 0d       	add	r30, r14
    2658:	ff 1d       	adc	r31, r15
    265a:	ee 0f       	add	r30, r30
    265c:	ff 1f       	adc	r31, r31
    265e:	ea 0f       	add	r30, r26
    2660:	fb 1f       	adc	r31, r27
    2662:	80 81       	ld	r24, Z
    2664:	91 81       	ldd	r25, Z+1	; 0x01
    2666:	8c 31       	cpi	r24, 0x1C	; 28
    2668:	91 05       	cpc	r25, r1
    266a:	59 f5       	brne	.+86     	; 0x26c2 <main+0x1e54>
			{
				x2=file;	x1=file+2;
    266c:	50 93 92 01 	sts	0x0192, r21
    2670:	40 93 91 01 	sts	0x0191, r20
    2674:	70 93 a2 01 	sts	0x01A2, r23
    2678:	60 93 a1 01 	sts	0x01A1, r22
				y2=rank;	y1=rank+1;
    267c:	30 93 90 01 	sts	0x0190, r19
    2680:	20 93 8f 01 	sts	0x018F, r18
    2684:	f0 92 a8 01 	sts	0x01A8, r15
    2688:	e0 92 a7 01 	sts	0x01A7, r14
				chess[file][rank]=28;
    268c:	fa 01       	movw	r30, r20
    268e:	73 e0       	ldi	r23, 0x03	; 3
    2690:	ee 0f       	add	r30, r30
    2692:	ff 1f       	adc	r31, r31
    2694:	7a 95       	dec	r23
    2696:	e1 f7       	brne	.-8      	; 0x2690 <main+0x1e22>
    2698:	44 0f       	add	r20, r20
    269a:	55 1f       	adc	r21, r21
    269c:	e4 0f       	add	r30, r20
    269e:	f5 1f       	adc	r31, r21
    26a0:	e2 0f       	add	r30, r18
    26a2:	f3 1f       	adc	r31, r19
    26a4:	ee 0f       	add	r30, r30
    26a6:	ff 1f       	adc	r31, r31
    26a8:	ea 0f       	add	r30, r26
    26aa:	fb 1f       	adc	r31, r27
    26ac:	91 83       	std	Z+1, r25	; 0x01
    26ae:	80 83       	st	Z, r24
				chess[file+2][rank+1]=00;
    26b0:	20 0f       	add	r18, r16
    26b2:	31 1f       	adc	r19, r17
    26b4:	2f 5f       	subi	r18, 0xFF	; 255
    26b6:	3f 4f       	sbci	r19, 0xFF	; 255
    26b8:	22 0f       	add	r18, r18
    26ba:	33 1f       	adc	r19, r19
    26bc:	a2 0f       	add	r26, r18
    26be:	b3 1f       	adc	r27, r19
    26c0:	ea cd       	rjmp	.-1068   	; 0x2296 <main+0x1a28>
    26c2:	8d 01       	movw	r16, r26
				goto FINISH;
			}
			
			else if(chess[file+2][rank+1]==78)
    26c4:	8e 34       	cpi	r24, 0x4E	; 78
    26c6:	91 05       	cpc	r25, r1
    26c8:	09 f0       	breq	.+2      	; 0x26cc <main+0x1e5e>
    26ca:	41 c0       	rjmp	.+130    	; 0x274e <main+0x1ee0>
			{
				x2=file;	x1=file+2;
    26cc:	50 93 92 01 	sts	0x0192, r21
    26d0:	40 93 91 01 	sts	0x0191, r20
    26d4:	80 91 93 01 	lds	r24, 0x0193
    26d8:	90 91 94 01 	lds	r25, 0x0194
    26dc:	ac 01       	movw	r20, r24
    26de:	4e 5f       	subi	r20, 0xFE	; 254
    26e0:	5f 4f       	sbci	r21, 0xFF	; 255
    26e2:	50 93 a2 01 	sts	0x01A2, r21
    26e6:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank+1;
    26ea:	20 91 a3 01 	lds	r18, 0x01A3
    26ee:	30 91 a4 01 	lds	r19, 0x01A4
    26f2:	30 93 90 01 	sts	0x0190, r19
    26f6:	20 93 8f 01 	sts	0x018F, r18
    26fa:	2f 5f       	subi	r18, 0xFF	; 255
    26fc:	3f 4f       	sbci	r19, 0xFF	; 255
    26fe:	30 93 a8 01 	sts	0x01A8, r19
    2702:	20 93 a7 01 	sts	0x01A7, r18
    2706:	21 50       	subi	r18, 0x01	; 1
    2708:	30 40       	sbci	r19, 0x00	; 0
				chess[file][rank]=78;
    270a:	fc 01       	movw	r30, r24
    270c:	73 e0       	ldi	r23, 0x03	; 3
    270e:	ee 0f       	add	r30, r30
    2710:	ff 1f       	adc	r31, r31
    2712:	7a 95       	dec	r23
    2714:	e1 f7       	brne	.-8      	; 0x270e <main+0x1ea0>
    2716:	88 0f       	add	r24, r24
    2718:	99 1f       	adc	r25, r25
    271a:	e8 0f       	add	r30, r24
    271c:	f9 1f       	adc	r31, r25
    271e:	e2 0f       	add	r30, r18
    2720:	f3 1f       	adc	r31, r19
    2722:	ee 0f       	add	r30, r30
    2724:	ff 1f       	adc	r31, r31
    2726:	ea 0f       	add	r30, r26
    2728:	fb 1f       	adc	r31, r27
    272a:	8e e4       	ldi	r24, 0x4E	; 78
    272c:	90 e0       	ldi	r25, 0x00	; 0
    272e:	91 83       	std	Z+1, r25	; 0x01
    2730:	80 83       	st	Z, r24
				chess[file+2][rank+1]=00;
    2732:	fa 01       	movw	r30, r20
    2734:	b3 e0       	ldi	r27, 0x03	; 3
    2736:	ee 0f       	add	r30, r30
    2738:	ff 1f       	adc	r31, r31
    273a:	ba 95       	dec	r27
    273c:	e1 f7       	brne	.-8      	; 0x2736 <main+0x1ec8>
    273e:	44 0f       	add	r20, r20
    2740:	55 1f       	adc	r21, r21
    2742:	e4 0f       	add	r30, r20
    2744:	f5 1f       	adc	r31, r21
    2746:	e2 0f       	add	r30, r18
    2748:	f3 1f       	adc	r31, r19
    274a:	31 96       	adiw	r30, 0x01	; 1
    274c:	33 c1       	rjmp	.+614    	; 0x29b4 <main+0x2146>
				goto FINISH;
			}
			
			else if(chess[file-1][rank-2]==28)
    274e:	ca 01       	movw	r24, r20
    2750:	01 97       	sbiw	r24, 0x01	; 1
    2752:	d9 01       	movw	r26, r18
    2754:	12 97       	sbiw	r26, 0x02	; 2
    2756:	7c 01       	movw	r14, r24
    2758:	73 e0       	ldi	r23, 0x03	; 3
    275a:	ee 0c       	add	r14, r14
    275c:	ff 1c       	adc	r15, r15
    275e:	7a 95       	dec	r23
    2760:	e1 f7       	brne	.-8      	; 0x275a <main+0x1eec>
    2762:	88 0f       	add	r24, r24
    2764:	99 1f       	adc	r25, r25
    2766:	e8 0e       	add	r14, r24
    2768:	f9 1e       	adc	r15, r25
    276a:	f7 01       	movw	r30, r14
    276c:	ea 0f       	add	r30, r26
    276e:	fb 1f       	adc	r31, r27
    2770:	ee 0f       	add	r30, r30
    2772:	ff 1f       	adc	r31, r31
    2774:	e0 0f       	add	r30, r16
    2776:	f1 1f       	adc	r31, r17
    2778:	60 81       	ld	r22, Z
    277a:	71 81       	ldd	r23, Z+1	; 0x01
    277c:	6c 31       	cpi	r22, 0x1C	; 28
    277e:	71 05       	cpc	r23, r1
    2780:	19 f0       	breq	.+6      	; 0x2788 <main+0x1f1a>
				chess[file][rank]=28;
				chess[file-1][rank-2]=00;
				goto FINISH;
			}
			
			else if(chess[file-1][rank-2]==78)
    2782:	6e 34       	cpi	r22, 0x4E	; 78
    2784:	71 05       	cpc	r23, r1
    2786:	81 f5       	brne	.+96     	; 0x27e8 <main+0x1f7a>
			{
				x2=file;	x1=file-1;
    2788:	50 93 92 01 	sts	0x0192, r21
    278c:	40 93 91 01 	sts	0x0191, r20
    2790:	20 91 93 01 	lds	r18, 0x0193
    2794:	30 91 94 01 	lds	r19, 0x0194
    2798:	a9 01       	movw	r20, r18
    279a:	41 50       	subi	r20, 0x01	; 1
    279c:	50 40       	sbci	r21, 0x00	; 0
    279e:	50 93 a2 01 	sts	0x01A2, r21
    27a2:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank-2;
    27a6:	80 91 a3 01 	lds	r24, 0x01A3
    27aa:	90 91 a4 01 	lds	r25, 0x01A4
    27ae:	90 93 90 01 	sts	0x0190, r25
    27b2:	80 93 8f 01 	sts	0x018F, r24
    27b6:	02 97       	sbiw	r24, 0x02	; 2
    27b8:	90 93 a8 01 	sts	0x01A8, r25
    27bc:	80 93 a7 01 	sts	0x01A7, r24
    27c0:	02 96       	adiw	r24, 0x02	; 2
				chess[file][rank]=78;
    27c2:	f9 01       	movw	r30, r18
    27c4:	a3 e0       	ldi	r26, 0x03	; 3
    27c6:	ee 0f       	add	r30, r30
    27c8:	ff 1f       	adc	r31, r31
    27ca:	aa 95       	dec	r26
    27cc:	e1 f7       	brne	.-8      	; 0x27c6 <main+0x1f58>
    27ce:	22 0f       	add	r18, r18
    27d0:	33 1f       	adc	r19, r19
    27d2:	e2 0f       	add	r30, r18
    27d4:	f3 1f       	adc	r31, r19
    27d6:	e8 0f       	add	r30, r24
    27d8:	f9 1f       	adc	r31, r25
    27da:	ee 0f       	add	r30, r30
    27dc:	ff 1f       	adc	r31, r31
    27de:	e0 0f       	add	r30, r16
    27e0:	f1 1f       	adc	r31, r17
    27e2:	71 83       	std	Z+1, r23	; 0x01
    27e4:	60 83       	st	Z, r22
    27e6:	4a c0       	rjmp	.+148    	; 0x287c <main+0x200e>
				chess[file-1][rank-2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank-2]==28)
    27e8:	ca 01       	movw	r24, r20
    27ea:	01 96       	adiw	r24, 0x01	; 1
    27ec:	bc 01       	movw	r22, r24
    27ee:	e3 e0       	ldi	r30, 0x03	; 3
    27f0:	66 0f       	add	r22, r22
    27f2:	77 1f       	adc	r23, r23
    27f4:	ea 95       	dec	r30
    27f6:	e1 f7       	brne	.-8      	; 0x27f0 <main+0x1f82>
    27f8:	88 0f       	add	r24, r24
    27fa:	99 1f       	adc	r25, r25
    27fc:	68 0f       	add	r22, r24
    27fe:	79 1f       	adc	r23, r25
    2800:	a6 0f       	add	r26, r22
    2802:	b7 1f       	adc	r27, r23
    2804:	aa 0f       	add	r26, r26
    2806:	bb 1f       	adc	r27, r27
    2808:	a0 0f       	add	r26, r16
    280a:	b1 1f       	adc	r27, r17
    280c:	0d 90       	ld	r0, X+
    280e:	bc 91       	ld	r27, X
    2810:	a0 2d       	mov	r26, r0
    2812:	ac 31       	cpi	r26, 0x1C	; 28
    2814:	b1 05       	cpc	r27, r1
    2816:	19 f0       	breq	.+6      	; 0x281e <main+0x1fb0>
				chess[file][rank]=28;
				chess[file+1][rank-2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank-2]==78)
    2818:	ae 34       	cpi	r26, 0x4E	; 78
    281a:	b1 05       	cpc	r27, r1
    281c:	e9 f5       	brne	.+122    	; 0x2898 <main+0x202a>
			{
				x2=file;	x1=file+1;
    281e:	50 93 92 01 	sts	0x0192, r21
    2822:	40 93 91 01 	sts	0x0191, r20
    2826:	20 91 93 01 	lds	r18, 0x0193
    282a:	30 91 94 01 	lds	r19, 0x0194
    282e:	a9 01       	movw	r20, r18
    2830:	4f 5f       	subi	r20, 0xFF	; 255
    2832:	5f 4f       	sbci	r21, 0xFF	; 255
    2834:	50 93 a2 01 	sts	0x01A2, r21
    2838:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank-2;
    283c:	80 91 a3 01 	lds	r24, 0x01A3
    2840:	90 91 a4 01 	lds	r25, 0x01A4
    2844:	90 93 90 01 	sts	0x0190, r25
    2848:	80 93 8f 01 	sts	0x018F, r24
    284c:	02 97       	sbiw	r24, 0x02	; 2
    284e:	90 93 a8 01 	sts	0x01A8, r25
    2852:	80 93 a7 01 	sts	0x01A7, r24
    2856:	02 96       	adiw	r24, 0x02	; 2
				chess[file][rank]=78;
    2858:	f9 01       	movw	r30, r18
    285a:	63 e0       	ldi	r22, 0x03	; 3
    285c:	ee 0f       	add	r30, r30
    285e:	ff 1f       	adc	r31, r31
    2860:	6a 95       	dec	r22
    2862:	e1 f7       	brne	.-8      	; 0x285c <main+0x1fee>
    2864:	22 0f       	add	r18, r18
    2866:	33 1f       	adc	r19, r19
    2868:	e2 0f       	add	r30, r18
    286a:	f3 1f       	adc	r31, r19
    286c:	e8 0f       	add	r30, r24
    286e:	f9 1f       	adc	r31, r25
    2870:	ee 0f       	add	r30, r30
    2872:	ff 1f       	adc	r31, r31
    2874:	e0 0f       	add	r30, r16
    2876:	f1 1f       	adc	r31, r17
    2878:	b1 83       	std	Z+1, r27	; 0x01
    287a:	a0 83       	st	Z, r26
				chess[file+1][rank-2]=00;
    287c:	fa 01       	movw	r30, r20
    287e:	33 e0       	ldi	r19, 0x03	; 3
    2880:	ee 0f       	add	r30, r30
    2882:	ff 1f       	adc	r31, r31
    2884:	3a 95       	dec	r19
    2886:	e1 f7       	brne	.-8      	; 0x2880 <main+0x2012>
    2888:	44 0f       	add	r20, r20
    288a:	55 1f       	adc	r21, r21
    288c:	e4 0f       	add	r30, r20
    288e:	f5 1f       	adc	r31, r21
    2890:	e8 0f       	add	r30, r24
    2892:	f9 1f       	adc	r31, r25
    2894:	32 97       	sbiw	r30, 0x02	; 2
    2896:	8e c0       	rjmp	.+284    	; 0x29b4 <main+0x2146>
				goto FINISH;
			}
			
			else if(chess[file-1][rank+2]==28)
    2898:	d9 01       	movw	r26, r18
    289a:	12 96       	adiw	r26, 0x02	; 2
    289c:	f7 01       	movw	r30, r14
    289e:	ea 0f       	add	r30, r26
    28a0:	fb 1f       	adc	r31, r27
    28a2:	ee 0f       	add	r30, r30
    28a4:	ff 1f       	adc	r31, r31
    28a6:	e0 0f       	add	r30, r16
    28a8:	f1 1f       	adc	r31, r17
    28aa:	e0 80       	ld	r14, Z
    28ac:	f1 80       	ldd	r15, Z+1	; 0x01
    28ae:	fc e1       	ldi	r31, 0x1C	; 28
    28b0:	ef 16       	cp	r14, r31
    28b2:	f1 04       	cpc	r15, r1
    28b4:	21 f0       	breq	.+8      	; 0x28be <main+0x2050>
				chess[file][rank]=28;
				chess[file-1][rank+2]=00;
				goto FINISH;
			}
			
			else if(chess[file-1][rank+2]==78)
    28b6:	8e e4       	ldi	r24, 0x4E	; 78
    28b8:	e8 16       	cp	r14, r24
    28ba:	f1 04       	cpc	r15, r1
    28bc:	81 f5       	brne	.+96     	; 0x291e <main+0x20b0>
			{
				x2=file;	x1=file-1;
    28be:	50 93 92 01 	sts	0x0192, r21
    28c2:	40 93 91 01 	sts	0x0191, r20
    28c6:	20 91 93 01 	lds	r18, 0x0193
    28ca:	30 91 94 01 	lds	r19, 0x0194
    28ce:	a9 01       	movw	r20, r18
    28d0:	41 50       	subi	r20, 0x01	; 1
    28d2:	50 40       	sbci	r21, 0x00	; 0
    28d4:	50 93 a2 01 	sts	0x01A2, r21
    28d8:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank+2;
    28dc:	80 91 a3 01 	lds	r24, 0x01A3
    28e0:	90 91 a4 01 	lds	r25, 0x01A4
    28e4:	90 93 90 01 	sts	0x0190, r25
    28e8:	80 93 8f 01 	sts	0x018F, r24
    28ec:	02 96       	adiw	r24, 0x02	; 2
    28ee:	90 93 a8 01 	sts	0x01A8, r25
    28f2:	80 93 a7 01 	sts	0x01A7, r24
    28f6:	02 97       	sbiw	r24, 0x02	; 2
				chess[file][rank]=78;
    28f8:	f9 01       	movw	r30, r18
    28fa:	73 e0       	ldi	r23, 0x03	; 3
    28fc:	ee 0f       	add	r30, r30
    28fe:	ff 1f       	adc	r31, r31
    2900:	7a 95       	dec	r23
    2902:	e1 f7       	brne	.-8      	; 0x28fc <main+0x208e>
    2904:	22 0f       	add	r18, r18
    2906:	33 1f       	adc	r19, r19
    2908:	e2 0f       	add	r30, r18
    290a:	f3 1f       	adc	r31, r19
    290c:	e8 0f       	add	r30, r24
    290e:	f9 1f       	adc	r31, r25
    2910:	ee 0f       	add	r30, r30
    2912:	ff 1f       	adc	r31, r31
    2914:	e0 0f       	add	r30, r16
    2916:	f1 1f       	adc	r31, r17
    2918:	f1 82       	std	Z+1, r15	; 0x01
    291a:	e0 82       	st	Z, r14
    291c:	3e c0       	rjmp	.+124    	; 0x299a <main+0x212c>
				chess[file-1][rank+2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank+2]==28)
    291e:	a6 0f       	add	r26, r22
    2920:	b7 1f       	adc	r27, r23
    2922:	aa 0f       	add	r26, r26
    2924:	bb 1f       	adc	r27, r27
    2926:	a0 0f       	add	r26, r16
    2928:	b1 1f       	adc	r27, r17
    292a:	6d 91       	ld	r22, X+
    292c:	7c 91       	ld	r23, X
    292e:	6c 31       	cpi	r22, 0x1C	; 28
    2930:	71 05       	cpc	r23, r1
    2932:	21 f0       	breq	.+8      	; 0x293c <main+0x20ce>
				chess[file][rank]=28;
				chess[file+1][rank+2]=00;
				goto FINISH;
			}
			
			else if(chess[file+1][rank+2]==78)
    2934:	6e 34       	cpi	r22, 0x4E	; 78
    2936:	71 05       	cpc	r23, r1
    2938:	09 f0       	breq	.+2      	; 0x293c <main+0x20ce>
    293a:	42 c0       	rjmp	.+132    	; 0x29c0 <main+0x2152>
			{
				x2=file;	x1=file+1;
    293c:	50 93 92 01 	sts	0x0192, r21
    2940:	40 93 91 01 	sts	0x0191, r20
    2944:	20 91 93 01 	lds	r18, 0x0193
    2948:	30 91 94 01 	lds	r19, 0x0194
    294c:	a9 01       	movw	r20, r18
    294e:	4f 5f       	subi	r20, 0xFF	; 255
    2950:	5f 4f       	sbci	r21, 0xFF	; 255
    2952:	50 93 a2 01 	sts	0x01A2, r21
    2956:	40 93 a1 01 	sts	0x01A1, r20
				y2=rank;	y1=rank+2;
    295a:	80 91 a3 01 	lds	r24, 0x01A3
    295e:	90 91 a4 01 	lds	r25, 0x01A4
    2962:	90 93 90 01 	sts	0x0190, r25
    2966:	80 93 8f 01 	sts	0x018F, r24
    296a:	02 96       	adiw	r24, 0x02	; 2
    296c:	90 93 a8 01 	sts	0x01A8, r25
    2970:	80 93 a7 01 	sts	0x01A7, r24
    2974:	02 97       	sbiw	r24, 0x02	; 2
				chess[file][rank]=78;
    2976:	f9 01       	movw	r30, r18
    2978:	b3 e0       	ldi	r27, 0x03	; 3
    297a:	ee 0f       	add	r30, r30
    297c:	ff 1f       	adc	r31, r31
    297e:	ba 95       	dec	r27
    2980:	e1 f7       	brne	.-8      	; 0x297a <main+0x210c>
    2982:	22 0f       	add	r18, r18
    2984:	33 1f       	adc	r19, r19
    2986:	e2 0f       	add	r30, r18
    2988:	f3 1f       	adc	r31, r19
    298a:	e8 0f       	add	r30, r24
    298c:	f9 1f       	adc	r31, r25
    298e:	ee 0f       	add	r30, r30
    2990:	ff 1f       	adc	r31, r31
    2992:	e0 0f       	add	r30, r16
    2994:	f1 1f       	adc	r31, r17
    2996:	71 83       	std	Z+1, r23	; 0x01
    2998:	60 83       	st	Z, r22
				chess[file+1][rank+2]=00;
    299a:	fa 01       	movw	r30, r20
    299c:	23 e0       	ldi	r18, 0x03	; 3
    299e:	ee 0f       	add	r30, r30
    29a0:	ff 1f       	adc	r31, r31
    29a2:	2a 95       	dec	r18
    29a4:	e1 f7       	brne	.-8      	; 0x299e <main+0x2130>
    29a6:	44 0f       	add	r20, r20
    29a8:	55 1f       	adc	r21, r21
    29aa:	e4 0f       	add	r30, r20
    29ac:	f5 1f       	adc	r31, r21
    29ae:	e8 0f       	add	r30, r24
    29b0:	f9 1f       	adc	r31, r25
    29b2:	32 96       	adiw	r30, 0x02	; 2
    29b4:	ee 0f       	add	r30, r30
    29b6:	ff 1f       	adc	r31, r31
    29b8:	e0 0f       	add	r30, r16
    29ba:	f1 1f       	adc	r31, r17
    29bc:	11 82       	std	Z+1, r1	; 0x01
    29be:	10 82       	st	Z, r1
				goto FINISH;
			}
		}
		
		FINISH:
		lcd_clear();
    29c0:	81 e0       	ldi	r24, 0x01	; 1
    29c2:	60 e0       	ldi	r22, 0x00	; 0
    29c4:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
    29c8:	8c c2       	rjmp	.+1304   	; 0x2ee2 <main+0x2674>
	}
	goto END;
}

else if(len==5)
    29ca:	85 30       	cpi	r24, 0x05	; 5
    29cc:	91 05       	cpc	r25, r1
    29ce:	09 f0       	breq	.+2      	; 0x29d2 <main+0x2164>
    29d0:	76 c0       	rjmp	.+236    	; 0x2abe <main+0x2250>
{
	if(letter==0)	//ASCII OF HROOK	
    29d2:	80 91 8d 01 	lds	r24, 0x018D
    29d6:	90 91 8e 01 	lds	r25, 0x018E
    29da:	89 2b       	or	r24, r25
    29dc:	09 f0       	breq	.+2      	; 0x29e0 <main+0x2172>
    29de:	67 c0       	rjmp	.+206    	; 0x2aae <main+0x2240>
	{
		hrook=1;
    29e0:	81 e0       	ldi	r24, 0x01	; 1
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	90 93 74 01 	sts	0x0174, r25
    29e8:	80 93 73 01 	sts	0x0173, r24
		x2=file;	y2=rank;
    29ec:	80 91 93 01 	lds	r24, 0x0193
    29f0:	90 91 94 01 	lds	r25, 0x0194
    29f4:	90 93 92 01 	sts	0x0192, r25
    29f8:	80 93 91 01 	sts	0x0191, r24
    29fc:	20 91 a3 01 	lds	r18, 0x01A3
    2a00:	30 91 a4 01 	lds	r19, 0x01A4
    2a04:	30 93 90 01 	sts	0x0190, r19
    2a08:	20 93 8f 01 	sts	0x018F, r18
		x1=file0;	y1=rank0;
    2a0c:	80 91 8b 01 	lds	r24, 0x018B
    2a10:	90 91 8c 01 	lds	r25, 0x018C
    2a14:	90 93 a2 01 	sts	0x01A2, r25
    2a18:	80 93 a1 01 	sts	0x01A1, r24
    2a1c:	40 91 95 01 	lds	r20, 0x0195
    2a20:	50 91 96 01 	lds	r21, 0x0196
    2a24:	50 93 a8 01 	sts	0x01A8, r21
    2a28:	40 93 a7 01 	sts	0x01A7, r20
		chess[file][rank]=chess[file0][rank0];
    2a2c:	60 91 8b 01 	lds	r22, 0x018B
    2a30:	70 91 8c 01 	lds	r23, 0x018C
    2a34:	80 91 93 01 	lds	r24, 0x0193
    2a38:	90 91 94 01 	lds	r25, 0x0194
    2a3c:	dc 01       	movw	r26, r24
    2a3e:	e3 e0       	ldi	r30, 0x03	; 3
    2a40:	aa 0f       	add	r26, r26
    2a42:	bb 1f       	adc	r27, r27
    2a44:	ea 95       	dec	r30
    2a46:	e1 f7       	brne	.-8      	; 0x2a40 <main+0x21d2>
    2a48:	88 0f       	add	r24, r24
    2a4a:	99 1f       	adc	r25, r25
    2a4c:	a8 0f       	add	r26, r24
    2a4e:	b9 1f       	adc	r27, r25
    2a50:	a2 0f       	add	r26, r18
    2a52:	b3 1f       	adc	r27, r19
    2a54:	aa 0f       	add	r26, r26
    2a56:	bb 1f       	adc	r27, r27
    2a58:	a0 0f       	add	r26, r16
    2a5a:	b1 1f       	adc	r27, r17
    2a5c:	cb 01       	movw	r24, r22
    2a5e:	fc 01       	movw	r30, r24
    2a60:	33 e0       	ldi	r19, 0x03	; 3
    2a62:	ee 0f       	add	r30, r30
    2a64:	ff 1f       	adc	r31, r31
    2a66:	3a 95       	dec	r19
    2a68:	e1 f7       	brne	.-8      	; 0x2a62 <main+0x21f4>
    2a6a:	88 0f       	add	r24, r24
    2a6c:	99 1f       	adc	r25, r25
    2a6e:	e8 0f       	add	r30, r24
    2a70:	f9 1f       	adc	r31, r25
    2a72:	e4 0f       	add	r30, r20
    2a74:	f5 1f       	adc	r31, r21
    2a76:	ee 0f       	add	r30, r30
    2a78:	ff 1f       	adc	r31, r31
    2a7a:	e0 0f       	add	r30, r16
    2a7c:	f1 1f       	adc	r31, r17
    2a7e:	80 81       	ld	r24, Z
    2a80:	91 81       	ldd	r25, Z+1	; 0x01
    2a82:	8d 93       	st	X+, r24
    2a84:	9c 93       	st	X, r25
		chess[file0][rank0]=00;
    2a86:	cb 01       	movw	r24, r22
    2a88:	9c 01       	movw	r18, r24
    2a8a:	b3 e0       	ldi	r27, 0x03	; 3
    2a8c:	22 0f       	add	r18, r18
    2a8e:	33 1f       	adc	r19, r19
    2a90:	ba 95       	dec	r27
    2a92:	e1 f7       	brne	.-8      	; 0x2a8c <main+0x221e>
    2a94:	88 0f       	add	r24, r24
    2a96:	99 1f       	adc	r25, r25
    2a98:	28 0f       	add	r18, r24
    2a9a:	39 1f       	adc	r19, r25
    2a9c:	24 0f       	add	r18, r20
    2a9e:	35 1f       	adc	r19, r21
    2aa0:	22 0f       	add	r18, r18
    2aa2:	33 1f       	adc	r19, r19
    2aa4:	02 0f       	add	r16, r18
    2aa6:	13 1f       	adc	r17, r19
    2aa8:	f8 01       	movw	r30, r16
    2aaa:	11 82       	std	Z+1, r1	; 0x01
    2aac:	10 82       	st	Z, r1
	}
	
	if(letter==4)	//ASCII OF KNIGHT	
    2aae:	80 91 8d 01 	lds	r24, 0x018D
    2ab2:	90 91 8e 01 	lds	r25, 0x018E
    2ab6:	04 97       	sbiw	r24, 0x04	; 4
    2ab8:	09 f0       	breq	.+2      	; 0x2abc <main+0x224e>
    2aba:	13 c2       	rjmp	.+1062   	; 0x2ee2 <main+0x2674>
    2abc:	a6 c1       	rjmp	.+844    	; 0x2e0a <main+0x259c>
		chess[file0][rank0]=00;
	}
	goto END;
}

else if(len==4)
    2abe:	84 30       	cpi	r24, 0x04	; 4
    2ac0:	91 05       	cpc	r25, r1
    2ac2:	09 f0       	breq	.+2      	; 0x2ac6 <main+0x2258>
    2ac4:	f5 c0       	rjmp	.+490    	; 0x2cb0 <main+0x2442>
{
	/*if(secondlast_array_element==ASCII OF =)
	{*/
		if(letter==0)			//ASCII OF HROOK
    2ac6:	20 91 8d 01 	lds	r18, 0x018D
    2aca:	30 91 8e 01 	lds	r19, 0x018E
    2ace:	21 15       	cp	r18, r1
    2ad0:	31 05       	cpc	r19, r1
    2ad2:	e9 f4       	brne	.+58     	; 0x2b0e <main+0x22a0>
		{
			if(moves%2==0)
    2ad4:	80 91 6f 01 	lds	r24, 0x016F
    2ad8:	90 91 70 01 	lds	r25, 0x0170
    2adc:	80 fd       	sbrc	r24, 0
    2ade:	08 c0       	rjmp	.+16     	; 0x2af0 <main+0x2282>
			{
				kill_black=1;
    2ae0:	81 e0       	ldi	r24, 0x01	; 1
    2ae2:	90 e0       	ldi	r25, 0x00	; 0
    2ae4:	90 93 7e 01 	sts	0x017E, r25
    2ae8:	80 93 7d 01 	sts	0x017D, r24
    2aec:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <main+0x334>
			}
			
			else if(moves%2==1)
    2af0:	62 e0       	ldi	r22, 0x02	; 2
    2af2:	70 e0       	ldi	r23, 0x00	; 0
    2af4:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2af8:	81 30       	cpi	r24, 0x01	; 1
    2afa:	91 05       	cpc	r25, r1
    2afc:	11 f0       	breq	.+4      	; 0x2b02 <main+0x2294>
    2afe:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <main+0x334>
			{
				kill_white=1;
    2b02:	90 93 7c 01 	sts	0x017C, r25
    2b06:	80 93 7b 01 	sts	0x017B, r24
    2b0a:	0c 94 d1 05 	jmp	0xba2	; 0xba2 <main+0x334>
			}
			goto HROOK;
		}
		
		else if(letter==1)			//ASCII OF BISHOP
    2b0e:	21 30       	cpi	r18, 0x01	; 1
    2b10:	31 05       	cpc	r19, r1
    2b12:	d9 f4       	brne	.+54     	; 0x2b4a <main+0x22dc>
		{
			if(moves%2==0)
    2b14:	80 91 6f 01 	lds	r24, 0x016F
    2b18:	90 91 70 01 	lds	r25, 0x0170
    2b1c:	80 fd       	sbrc	r24, 0
    2b1e:	06 c0       	rjmp	.+12     	; 0x2b2c <main+0x22be>
			{
				kill_black=1;
    2b20:	30 93 7e 01 	sts	0x017E, r19
    2b24:	20 93 7d 01 	sts	0x017D, r18
    2b28:	0c 94 31 09 	jmp	0x1262	; 0x1262 <main+0x9f4>
			}
			
			else if(moves%2==1)
    2b2c:	62 e0       	ldi	r22, 0x02	; 2
    2b2e:	70 e0       	ldi	r23, 0x00	; 0
    2b30:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2b34:	81 30       	cpi	r24, 0x01	; 1
    2b36:	91 05       	cpc	r25, r1
    2b38:	11 f0       	breq	.+4      	; 0x2b3e <main+0x22d0>
    2b3a:	0c 94 31 09 	jmp	0x1262	; 0x1262 <main+0x9f4>
			{
				kill_white=1;
    2b3e:	90 93 7c 01 	sts	0x017C, r25
    2b42:	80 93 7b 01 	sts	0x017B, r24
    2b46:	0c 94 31 09 	jmp	0x1262	; 0x1262 <main+0x9f4>
			}
			goto BISHOP;
		}
		
		else if(letter==2)			//ASCII OF KING
    2b4a:	22 30       	cpi	r18, 0x02	; 2
    2b4c:	31 05       	cpc	r19, r1
    2b4e:	f1 f4       	brne	.+60     	; 0x2b8c <main+0x231e>
		{
			if(moves%2==0)
    2b50:	80 91 6f 01 	lds	r24, 0x016F
    2b54:	90 91 70 01 	lds	r25, 0x0170
    2b58:	80 fd       	sbrc	r24, 0
    2b5a:	08 c0       	rjmp	.+16     	; 0x2b6c <main+0x22fe>
			{
				kill_black=1;
    2b5c:	81 e0       	ldi	r24, 0x01	; 1
    2b5e:	90 e0       	ldi	r25, 0x00	; 0
    2b60:	90 93 7e 01 	sts	0x017E, r25
    2b64:	80 93 7d 01 	sts	0x017D, r24
    2b68:	0c 94 39 0b 	jmp	0x1672	; 0x1672 <main+0xe04>
			}
			
			else if(moves%2==1)
    2b6c:	62 e0       	ldi	r22, 0x02	; 2
    2b6e:	70 e0       	ldi	r23, 0x00	; 0
    2b70:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2b74:	01 97       	sbiw	r24, 0x01	; 1
    2b76:	11 f0       	breq	.+4      	; 0x2b7c <main+0x230e>
    2b78:	0c 94 39 0b 	jmp	0x1672	; 0x1672 <main+0xe04>
			{
				kill_white=1;
    2b7c:	81 e0       	ldi	r24, 0x01	; 1
    2b7e:	90 e0       	ldi	r25, 0x00	; 0
    2b80:	90 93 7c 01 	sts	0x017C, r25
    2b84:	80 93 7b 01 	sts	0x017B, r24
    2b88:	0c 94 39 0b 	jmp	0x1672	; 0x1672 <main+0xe04>
			}
			goto KING;
		}
		
		else if(letter==3)			//ASCII OF QUEEN
    2b8c:	23 30       	cpi	r18, 0x03	; 3
    2b8e:	31 05       	cpc	r19, r1
    2b90:	d1 f4       	brne	.+52     	; 0x2bc6 <main+0x2358>
		{
			if(moves%2==0)
    2b92:	80 91 6f 01 	lds	r24, 0x016F
    2b96:	90 91 70 01 	lds	r25, 0x0170
    2b9a:	80 fd       	sbrc	r24, 0
    2b9c:	07 c0       	rjmp	.+14     	; 0x2bac <main+0x233e>
			{
				kill_black=1;
    2b9e:	81 e0       	ldi	r24, 0x01	; 1
    2ba0:	90 e0       	ldi	r25, 0x00	; 0
    2ba2:	90 93 7e 01 	sts	0x017E, r25
    2ba6:	80 93 7d 01 	sts	0x017D, r24
    2baa:	21 c8       	rjmp	.-4030   	; 0x1bee <main+0x1380>
			}
			
			else if(moves%2==1)
    2bac:	62 e0       	ldi	r22, 0x02	; 2
    2bae:	70 e0       	ldi	r23, 0x00	; 0
    2bb0:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2bb4:	81 30       	cpi	r24, 0x01	; 1
    2bb6:	91 05       	cpc	r25, r1
    2bb8:	09 f0       	breq	.+2      	; 0x2bbc <main+0x234e>
    2bba:	19 c8       	rjmp	.-4046   	; 0x1bee <main+0x1380>
			{
				kill_white=1;
    2bbc:	90 93 7c 01 	sts	0x017C, r25
    2bc0:	80 93 7b 01 	sts	0x017B, r24
    2bc4:	14 c8       	rjmp	.-4056   	; 0x1bee <main+0x1380>
    2bc6:	80 91 6f 01 	lds	r24, 0x016F
    2bca:	90 91 70 01 	lds	r25, 0x0170
			}
			goto QUEEN;
		}
		
		else if(letter==4)			//ASCII OF KNIGHT
    2bce:	24 30       	cpi	r18, 0x04	; 4
    2bd0:	31 05       	cpc	r19, r1
    2bd2:	b1 f4       	brne	.+44     	; 0x2c00 <main+0x2392>
		{
			if(moves%2==0)
    2bd4:	80 fd       	sbrc	r24, 0
    2bd6:	07 c0       	rjmp	.+14     	; 0x2be6 <main+0x2378>
			{
				kill_black=1;
    2bd8:	81 e0       	ldi	r24, 0x01	; 1
    2bda:	90 e0       	ldi	r25, 0x00	; 0
    2bdc:	90 93 7e 01 	sts	0x017E, r25
    2be0:	80 93 7d 01 	sts	0x017D, r24
    2be4:	e4 ca       	rjmp	.-2616   	; 0x21ae <main+0x1940>
			}
			
			else if(moves%2==1)
    2be6:	62 e0       	ldi	r22, 0x02	; 2
    2be8:	70 e0       	ldi	r23, 0x00	; 0
    2bea:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2bee:	81 30       	cpi	r24, 0x01	; 1
    2bf0:	91 05       	cpc	r25, r1
    2bf2:	09 f0       	breq	.+2      	; 0x2bf6 <main+0x2388>
    2bf4:	dc ca       	rjmp	.-2632   	; 0x21ae <main+0x1940>
			{
				kill_white=1;
    2bf6:	90 93 7c 01 	sts	0x017C, r25
    2bfa:	80 93 7b 01 	sts	0x017B, r24
    2bfe:	d7 ca       	rjmp	.-2642   	; 0x21ae <main+0x1940>
			goto KNIGHT;
		}
		
		else
		{
			bishop=1;
    2c00:	21 e0       	ldi	r18, 0x01	; 1
    2c02:	30 e0       	ldi	r19, 0x00	; 0
    2c04:	30 93 76 01 	sts	0x0176, r19
    2c08:	20 93 75 01 	sts	0x0175, r18
			if(moves%2==0)
    2c0c:	80 fd       	sbrc	r24, 0
    2c0e:	20 c0       	rjmp	.+64     	; 0x2c50 <main+0x23e2>
			{
				kill_black=1;
    2c10:	30 93 7e 01 	sts	0x017E, r19
    2c14:	20 93 7d 01 	sts	0x017D, r18
				x2=file;	y2=rank;
    2c18:	80 91 93 01 	lds	r24, 0x0193
    2c1c:	90 91 94 01 	lds	r25, 0x0194
    2c20:	90 93 92 01 	sts	0x0192, r25
    2c24:	80 93 91 01 	sts	0x0191, r24
    2c28:	20 91 a3 01 	lds	r18, 0x01A3
    2c2c:	30 91 a4 01 	lds	r19, 0x01A4
    2c30:	30 93 90 01 	sts	0x0190, r19
    2c34:	20 93 8f 01 	sts	0x018F, r18
				x1=letter;	y1=rank-1;
    2c38:	80 91 8d 01 	lds	r24, 0x018D
    2c3c:	90 91 8e 01 	lds	r25, 0x018E
    2c40:	90 93 a2 01 	sts	0x01A2, r25
    2c44:	80 93 a1 01 	sts	0x01A1, r24
    2c48:	b9 01       	movw	r22, r18
    2c4a:	61 50       	subi	r22, 0x01	; 1
    2c4c:	70 40       	sbci	r23, 0x00	; 0
    2c4e:	27 c0       	rjmp	.+78     	; 0x2c9e <main+0x2430>
				chess[file][rank]=chess[letter][rank-1];
				chess[letter][rank-1]=00;
			}
			
			else if(moves%2==1)
    2c50:	62 e0       	ldi	r22, 0x02	; 2
    2c52:	70 e0       	ldi	r23, 0x00	; 0
    2c54:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2c58:	81 30       	cpi	r24, 0x01	; 1
    2c5a:	91 05       	cpc	r25, r1
    2c5c:	09 f0       	breq	.+2      	; 0x2c60 <main+0x23f2>
    2c5e:	41 c1       	rjmp	.+642    	; 0x2ee2 <main+0x2674>
			{
				kill_white=1;
    2c60:	90 93 7c 01 	sts	0x017C, r25
    2c64:	80 93 7b 01 	sts	0x017B, r24
				x2=file;	y2=rank;
    2c68:	80 91 93 01 	lds	r24, 0x0193
    2c6c:	90 91 94 01 	lds	r25, 0x0194
    2c70:	90 93 92 01 	sts	0x0192, r25
    2c74:	80 93 91 01 	sts	0x0191, r24
    2c78:	20 91 a3 01 	lds	r18, 0x01A3
    2c7c:	30 91 a4 01 	lds	r19, 0x01A4
    2c80:	30 93 90 01 	sts	0x0190, r19
    2c84:	20 93 8f 01 	sts	0x018F, r18
				x1=letter;	y1=rank+1;
    2c88:	80 91 8d 01 	lds	r24, 0x018D
    2c8c:	90 91 8e 01 	lds	r25, 0x018E
    2c90:	90 93 a2 01 	sts	0x01A2, r25
    2c94:	80 93 a1 01 	sts	0x01A1, r24
    2c98:	b9 01       	movw	r22, r18
    2c9a:	6f 5f       	subi	r22, 0xFF	; 255
    2c9c:	7f 4f       	sbci	r23, 0xFF	; 255
    2c9e:	70 93 a8 01 	sts	0x01A8, r23
    2ca2:	60 93 a7 01 	sts	0x01A7, r22
				chess[file][rank]=chess[letter][rank+1];
    2ca6:	10 91 8d 01 	lds	r17, 0x018D
    2caa:	00 91 8e 01 	lds	r16, 0x018E
    2cae:	d7 c0       	rjmp	.+430    	; 0x2e5e <main+0x25f0>
		}
	}*/
	goto END;
}

else if(len==6)
    2cb0:	06 97       	sbiw	r24, 0x06	; 6
    2cb2:	09 f0       	breq	.+2      	; 0x2cb6 <main+0x2448>
    2cb4:	16 c1       	rjmp	.+556    	; 0x2ee2 <main+0x2674>
{
	if(letter==0)	//ASCII OF HROOK	
    2cb6:	80 91 8d 01 	lds	r24, 0x018D
    2cba:	90 91 8e 01 	lds	r25, 0x018E
    2cbe:	89 2b       	or	r24, r25
    2cc0:	09 f0       	breq	.+2      	; 0x2cc4 <main+0x2456>
    2cc2:	84 c0       	rjmp	.+264    	; 0x2dcc <main+0x255e>
	{
		if(moves%2==0)
    2cc4:	80 91 6f 01 	lds	r24, 0x016F
    2cc8:	90 91 70 01 	lds	r25, 0x0170
    2ccc:	80 fd       	sbrc	r24, 0
    2cce:	07 c0       	rjmp	.+14     	; 0x2cde <main+0x2470>
		{
			kill_black=1;
    2cd0:	81 e0       	ldi	r24, 0x01	; 1
    2cd2:	90 e0       	ldi	r25, 0x00	; 0
    2cd4:	90 93 7e 01 	sts	0x017E, r25
    2cd8:	80 93 7d 01 	sts	0x017D, r24
    2cdc:	0b c0       	rjmp	.+22     	; 0x2cf4 <main+0x2486>
		}
		
		else if(moves%2==1)
    2cde:	62 e0       	ldi	r22, 0x02	; 2
    2ce0:	70 e0       	ldi	r23, 0x00	; 0
    2ce2:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2ce6:	81 30       	cpi	r24, 0x01	; 1
    2ce8:	91 05       	cpc	r25, r1
    2cea:	21 f4       	brne	.+8      	; 0x2cf4 <main+0x2486>
		{
			kill_white=1;
    2cec:	90 93 7c 01 	sts	0x017C, r25
    2cf0:	80 93 7b 01 	sts	0x017B, r24
		}
		hrook=1;
    2cf4:	81 e0       	ldi	r24, 0x01	; 1
    2cf6:	90 e0       	ldi	r25, 0x00	; 0
    2cf8:	90 93 74 01 	sts	0x0174, r25
    2cfc:	80 93 73 01 	sts	0x0173, r24
		x2=file;	y2=rank;
    2d00:	80 91 93 01 	lds	r24, 0x0193
    2d04:	90 91 94 01 	lds	r25, 0x0194
    2d08:	90 93 92 01 	sts	0x0192, r25
    2d0c:	80 93 91 01 	sts	0x0191, r24
    2d10:	20 91 a3 01 	lds	r18, 0x01A3
    2d14:	30 91 a4 01 	lds	r19, 0x01A4
    2d18:	30 93 90 01 	sts	0x0190, r19
    2d1c:	20 93 8f 01 	sts	0x018F, r18
		x1=file0;	y1=rank0;
    2d20:	80 91 8b 01 	lds	r24, 0x018B
    2d24:	90 91 8c 01 	lds	r25, 0x018C
    2d28:	90 93 a2 01 	sts	0x01A2, r25
    2d2c:	80 93 a1 01 	sts	0x01A1, r24
    2d30:	60 91 95 01 	lds	r22, 0x0195
    2d34:	70 91 96 01 	lds	r23, 0x0196
    2d38:	70 93 a8 01 	sts	0x01A8, r23
    2d3c:	60 93 a7 01 	sts	0x01A7, r22
		chess[file][rank]=chess[file0][rank0];
    2d40:	10 91 8b 01 	lds	r17, 0x018B
    2d44:	00 91 8c 01 	lds	r16, 0x018C
    2d48:	80 91 93 01 	lds	r24, 0x0193
    2d4c:	90 91 94 01 	lds	r25, 0x0194
    2d50:	dc 01       	movw	r26, r24
    2d52:	e3 e0       	ldi	r30, 0x03	; 3
    2d54:	aa 0f       	add	r26, r26
    2d56:	bb 1f       	adc	r27, r27
    2d58:	ea 95       	dec	r30
    2d5a:	e1 f7       	brne	.-8      	; 0x2d54 <main+0x24e6>
    2d5c:	88 0f       	add	r24, r24
    2d5e:	99 1f       	adc	r25, r25
    2d60:	a8 0f       	add	r26, r24
    2d62:	b9 1f       	adc	r27, r25
    2d64:	a2 0f       	add	r26, r18
    2d66:	b3 1f       	adc	r27, r19
    2d68:	aa 0f       	add	r26, r26
    2d6a:	bb 1f       	adc	r27, r27
    2d6c:	ae 01       	movw	r20, r28
    2d6e:	4f 5f       	subi	r20, 0xFF	; 255
    2d70:	5f 4f       	sbci	r21, 0xFF	; 255
    2d72:	a4 0f       	add	r26, r20
    2d74:	b5 1f       	adc	r27, r21
    2d76:	81 2f       	mov	r24, r17
    2d78:	90 2f       	mov	r25, r16
    2d7a:	fc 01       	movw	r30, r24
    2d7c:	33 e0       	ldi	r19, 0x03	; 3
    2d7e:	ee 0f       	add	r30, r30
    2d80:	ff 1f       	adc	r31, r31
    2d82:	3a 95       	dec	r19
    2d84:	e1 f7       	brne	.-8      	; 0x2d7e <main+0x2510>
    2d86:	88 0f       	add	r24, r24
    2d88:	99 1f       	adc	r25, r25
    2d8a:	e8 0f       	add	r30, r24
    2d8c:	f9 1f       	adc	r31, r25
    2d8e:	e6 0f       	add	r30, r22
    2d90:	f7 1f       	adc	r31, r23
    2d92:	ee 0f       	add	r30, r30
    2d94:	ff 1f       	adc	r31, r31
    2d96:	e4 0f       	add	r30, r20
    2d98:	f5 1f       	adc	r31, r21
    2d9a:	80 81       	ld	r24, Z
    2d9c:	91 81       	ldd	r25, Z+1	; 0x01
    2d9e:	8d 93       	st	X+, r24
    2da0:	9c 93       	st	X, r25
		chess[file0][rank0]=00;
    2da2:	81 2f       	mov	r24, r17
    2da4:	90 2f       	mov	r25, r16
    2da6:	9c 01       	movw	r18, r24
    2da8:	b3 e0       	ldi	r27, 0x03	; 3
    2daa:	22 0f       	add	r18, r18
    2dac:	33 1f       	adc	r19, r19
    2dae:	ba 95       	dec	r27
    2db0:	e1 f7       	brne	.-8      	; 0x2daa <main+0x253c>
    2db2:	88 0f       	add	r24, r24
    2db4:	99 1f       	adc	r25, r25
    2db6:	28 0f       	add	r18, r24
    2db8:	39 1f       	adc	r19, r25
    2dba:	26 0f       	add	r18, r22
    2dbc:	37 1f       	adc	r19, r23
    2dbe:	22 0f       	add	r18, r18
    2dc0:	33 1f       	adc	r19, r19
    2dc2:	42 0f       	add	r20, r18
    2dc4:	53 1f       	adc	r21, r19
    2dc6:	fa 01       	movw	r30, r20
    2dc8:	11 82       	std	Z+1, r1	; 0x01
    2dca:	10 82       	st	Z, r1
	}
	
	if(letter==4)	//ASCII OF KNIGHT	
    2dcc:	80 91 8d 01 	lds	r24, 0x018D
    2dd0:	90 91 8e 01 	lds	r25, 0x018E
    2dd4:	04 97       	sbiw	r24, 0x04	; 4
    2dd6:	09 f0       	breq	.+2      	; 0x2dda <main+0x256c>
    2dd8:	84 c0       	rjmp	.+264    	; 0x2ee2 <main+0x2674>
	{
		if(moves%2==0)
    2dda:	80 91 6f 01 	lds	r24, 0x016F
    2dde:	90 91 70 01 	lds	r25, 0x0170
    2de2:	80 fd       	sbrc	r24, 0
    2de4:	07 c0       	rjmp	.+14     	; 0x2df4 <main+0x2586>
		{
			kill_black=1;
    2de6:	81 e0       	ldi	r24, 0x01	; 1
    2de8:	90 e0       	ldi	r25, 0x00	; 0
    2dea:	90 93 7e 01 	sts	0x017E, r25
    2dee:	80 93 7d 01 	sts	0x017D, r24
    2df2:	0b c0       	rjmp	.+22     	; 0x2e0a <main+0x259c>
		}
		
		else if(moves%2==1)
    2df4:	62 e0       	ldi	r22, 0x02	; 2
    2df6:	70 e0       	ldi	r23, 0x00	; 0
    2df8:	0e 94 f1 19 	call	0x33e2	; 0x33e2 <__divmodhi4>
    2dfc:	81 30       	cpi	r24, 0x01	; 1
    2dfe:	91 05       	cpc	r25, r1
    2e00:	21 f4       	brne	.+8      	; 0x2e0a <main+0x259c>
		{
			kill_white=1;
    2e02:	90 93 7c 01 	sts	0x017C, r25
    2e06:	80 93 7b 01 	sts	0x017B, r24
		}
		bishop=1;
    2e0a:	81 e0       	ldi	r24, 0x01	; 1
    2e0c:	90 e0       	ldi	r25, 0x00	; 0
    2e0e:	90 93 76 01 	sts	0x0176, r25
    2e12:	80 93 75 01 	sts	0x0175, r24
		x2=file;	y2=rank;
    2e16:	80 91 93 01 	lds	r24, 0x0193
    2e1a:	90 91 94 01 	lds	r25, 0x0194
    2e1e:	90 93 92 01 	sts	0x0192, r25
    2e22:	80 93 91 01 	sts	0x0191, r24
    2e26:	20 91 a3 01 	lds	r18, 0x01A3
    2e2a:	30 91 a4 01 	lds	r19, 0x01A4
    2e2e:	30 93 90 01 	sts	0x0190, r19
    2e32:	20 93 8f 01 	sts	0x018F, r18
		x1=file0;	y1=rank0;
    2e36:	80 91 8b 01 	lds	r24, 0x018B
    2e3a:	90 91 8c 01 	lds	r25, 0x018C
    2e3e:	90 93 a2 01 	sts	0x01A2, r25
    2e42:	80 93 a1 01 	sts	0x01A1, r24
    2e46:	60 91 95 01 	lds	r22, 0x0195
    2e4a:	70 91 96 01 	lds	r23, 0x0196
    2e4e:	70 93 a8 01 	sts	0x01A8, r23
    2e52:	60 93 a7 01 	sts	0x01A7, r22
		chess[file][rank]=chess[file0][rank0];
    2e56:	10 91 8b 01 	lds	r17, 0x018B
    2e5a:	00 91 8c 01 	lds	r16, 0x018C
    2e5e:	80 91 93 01 	lds	r24, 0x0193
    2e62:	90 91 94 01 	lds	r25, 0x0194
    2e66:	dc 01       	movw	r26, r24
    2e68:	e3 e0       	ldi	r30, 0x03	; 3
    2e6a:	aa 0f       	add	r26, r26
    2e6c:	bb 1f       	adc	r27, r27
    2e6e:	ea 95       	dec	r30
    2e70:	e1 f7       	brne	.-8      	; 0x2e6a <main+0x25fc>
    2e72:	88 0f       	add	r24, r24
    2e74:	99 1f       	adc	r25, r25
    2e76:	a8 0f       	add	r26, r24
    2e78:	b9 1f       	adc	r27, r25
    2e7a:	a2 0f       	add	r26, r18
    2e7c:	b3 1f       	adc	r27, r19
    2e7e:	aa 0f       	add	r26, r26
    2e80:	bb 1f       	adc	r27, r27
    2e82:	ae 01       	movw	r20, r28
    2e84:	4f 5f       	subi	r20, 0xFF	; 255
    2e86:	5f 4f       	sbci	r21, 0xFF	; 255
    2e88:	a4 0f       	add	r26, r20
    2e8a:	b5 1f       	adc	r27, r21
    2e8c:	81 2f       	mov	r24, r17
    2e8e:	90 2f       	mov	r25, r16
    2e90:	fc 01       	movw	r30, r24
    2e92:	33 e0       	ldi	r19, 0x03	; 3
    2e94:	ee 0f       	add	r30, r30
    2e96:	ff 1f       	adc	r31, r31
    2e98:	3a 95       	dec	r19
    2e9a:	e1 f7       	brne	.-8      	; 0x2e94 <main+0x2626>
    2e9c:	88 0f       	add	r24, r24
    2e9e:	99 1f       	adc	r25, r25
    2ea0:	e8 0f       	add	r30, r24
    2ea2:	f9 1f       	adc	r31, r25
    2ea4:	e6 0f       	add	r30, r22
    2ea6:	f7 1f       	adc	r31, r23
    2ea8:	ee 0f       	add	r30, r30
    2eaa:	ff 1f       	adc	r31, r31
    2eac:	e4 0f       	add	r30, r20
    2eae:	f5 1f       	adc	r31, r21
    2eb0:	80 81       	ld	r24, Z
    2eb2:	91 81       	ldd	r25, Z+1	; 0x01
    2eb4:	8d 93       	st	X+, r24
    2eb6:	9c 93       	st	X, r25
		chess[file0][rank0]=00;
    2eb8:	81 2f       	mov	r24, r17
    2eba:	90 2f       	mov	r25, r16
    2ebc:	9c 01       	movw	r18, r24
    2ebe:	03 e0       	ldi	r16, 0x03	; 3
    2ec0:	22 0f       	add	r18, r18
    2ec2:	33 1f       	adc	r19, r19
    2ec4:	0a 95       	dec	r16
    2ec6:	e1 f7       	brne	.-8      	; 0x2ec0 <main+0x2652>
    2ec8:	88 0f       	add	r24, r24
    2eca:	99 1f       	adc	r25, r25
    2ecc:	28 0f       	add	r18, r24
    2ece:	39 1f       	adc	r19, r25
    2ed0:	26 0f       	add	r18, r22
    2ed2:	37 1f       	adc	r19, r23
    2ed4:	22 0f       	add	r18, r18
    2ed6:	33 1f       	adc	r19, r19
    2ed8:	42 0f       	add	r20, r18
    2eda:	53 1f       	adc	r21, r19
    2edc:	fa 01       	movw	r30, r20
    2ede:	11 82       	std	Z+1, r1	; 0x01
    2ee0:	10 82       	st	Z, r1
	goto END;
}
	

END:
lcd_clear();
    2ee2:	81 e0       	ldi	r24, 0x01	; 1
    2ee4:	60 e0       	ldi	r22, 0x00	; 0
    2ee6:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
lcd_write_string_xy(5,0,"AFTER");
    2eea:	85 e0       	ldi	r24, 0x05	; 5
    2eec:	90 e0       	ldi	r25, 0x00	; 0
    2eee:	60 e0       	ldi	r22, 0x00	; 0
    2ef0:	70 e0       	ldi	r23, 0x00	; 0
    2ef2:	47 e6       	ldi	r20, 0x67	; 103
    2ef4:	50 e0       	ldi	r21, 0x00	; 0
    2ef6:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <lcd_write_string_xy>
lcd_write_int_xy(2,1,chess[d][5],2);
    2efa:	fe 01       	movw	r30, r28
    2efc:	e5 5a       	subi	r30, 0xA5	; 165
    2efe:	ff 4f       	sbci	r31, 0xFF	; 255
    2f00:	40 81       	ld	r20, Z
    2f02:	51 81       	ldd	r21, Z+1	; 0x01
    2f04:	82 e0       	ldi	r24, 0x02	; 2
    2f06:	90 e0       	ldi	r25, 0x00	; 0
    2f08:	61 e0       	ldi	r22, 0x01	; 1
    2f0a:	70 e0       	ldi	r23, 0x00	; 0
    2f0c:	22 e0       	ldi	r18, 0x02	; 2
    2f0e:	30 e0       	ldi	r19, 0x00	; 0
    2f10:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
lcd_write_int_xy(12,1,chess[file][rank],2);
    2f14:	80 91 93 01 	lds	r24, 0x0193
    2f18:	90 91 94 01 	lds	r25, 0x0194
    2f1c:	fc 01       	movw	r30, r24
    2f1e:	a3 e0       	ldi	r26, 0x03	; 3
    2f20:	ee 0f       	add	r30, r30
    2f22:	ff 1f       	adc	r31, r31
    2f24:	aa 95       	dec	r26
    2f26:	e1 f7       	brne	.-8      	; 0x2f20 <main+0x26b2>
    2f28:	88 0f       	add	r24, r24
    2f2a:	99 1f       	adc	r25, r25
    2f2c:	e8 0f       	add	r30, r24
    2f2e:	f9 1f       	adc	r31, r25
    2f30:	80 91 a3 01 	lds	r24, 0x01A3
    2f34:	90 91 a4 01 	lds	r25, 0x01A4
    2f38:	e8 0f       	add	r30, r24
    2f3a:	f9 1f       	adc	r31, r25
    2f3c:	ee 0f       	add	r30, r30
    2f3e:	ff 1f       	adc	r31, r31
    2f40:	ec 0f       	add	r30, r28
    2f42:	fd 1f       	adc	r31, r29
    2f44:	41 81       	ldd	r20, Z+1	; 0x01
    2f46:	52 81       	ldd	r21, Z+2	; 0x02
    2f48:	8c e0       	ldi	r24, 0x0C	; 12
    2f4a:	90 e0       	ldi	r25, 0x00	; 0
    2f4c:	61 e0       	ldi	r22, 0x01	; 1
    2f4e:	70 e0       	ldi	r23, 0x00	; 0
    2f50:	22 e0       	ldi	r18, 0x02	; 2
    2f52:	30 e0       	ldi	r19, 0x00	; 0
    2f54:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
delay_sec(2);
    2f58:	82 e0       	ldi	r24, 0x02	; 2
    2f5a:	90 e0       	ldi	r25, 0x00	; 0
    2f5c:	0e 94 77 00 	call	0xee	; 0xee <delay_sec>
lcd_clear();
    2f60:	81 e0       	ldi	r24, 0x01	; 1
    2f62:	60 e0       	ldi	r22, 0x00	; 0
    2f64:	0e 94 1c 02 	call	0x438	; 0x438 <lcd_byte>
lcd_write_int_xy(2,0,x1,1);
    2f68:	40 91 a1 01 	lds	r20, 0x01A1
    2f6c:	50 91 a2 01 	lds	r21, 0x01A2
    2f70:	82 e0       	ldi	r24, 0x02	; 2
    2f72:	90 e0       	ldi	r25, 0x00	; 0
    2f74:	60 e0       	ldi	r22, 0x00	; 0
    2f76:	70 e0       	ldi	r23, 0x00	; 0
    2f78:	21 e0       	ldi	r18, 0x01	; 1
    2f7a:	30 e0       	ldi	r19, 0x00	; 0
    2f7c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
lcd_write_int_xy(12,0,y1,1);
    2f80:	40 91 a7 01 	lds	r20, 0x01A7
    2f84:	50 91 a8 01 	lds	r21, 0x01A8
    2f88:	8c e0       	ldi	r24, 0x0C	; 12
    2f8a:	90 e0       	ldi	r25, 0x00	; 0
    2f8c:	60 e0       	ldi	r22, 0x00	; 0
    2f8e:	70 e0       	ldi	r23, 0x00	; 0
    2f90:	21 e0       	ldi	r18, 0x01	; 1
    2f92:	30 e0       	ldi	r19, 0x00	; 0
    2f94:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
lcd_write_int_xy(2,1,x2,1);
    2f98:	40 91 91 01 	lds	r20, 0x0191
    2f9c:	50 91 92 01 	lds	r21, 0x0192
    2fa0:	82 e0       	ldi	r24, 0x02	; 2
    2fa2:	90 e0       	ldi	r25, 0x00	; 0
    2fa4:	61 e0       	ldi	r22, 0x01	; 1
    2fa6:	70 e0       	ldi	r23, 0x00	; 0
    2fa8:	21 e0       	ldi	r18, 0x01	; 1
    2faa:	30 e0       	ldi	r19, 0x00	; 0
    2fac:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>
lcd_write_int_xy(12,1,y2,1);
    2fb0:	40 91 8f 01 	lds	r20, 0x018F
    2fb4:	50 91 90 01 	lds	r21, 0x0190
    2fb8:	8c e0       	ldi	r24, 0x0C	; 12
    2fba:	90 e0       	ldi	r25, 0x00	; 0
    2fbc:	61 e0       	ldi	r22, 0x01	; 1
    2fbe:	70 e0       	ldi	r23, 0x00	; 0
    2fc0:	21 e0       	ldi	r18, 0x01	; 1
    2fc2:	30 e0       	ldi	r19, 0x00	; 0
    2fc4:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <lcd_write_int_xy>

    2fc8:	c8 53       	subi	r28, 0x38	; 56
    2fca:	df 4f       	sbci	r29, 0xFF	; 255
    2fcc:	0f b6       	in	r0, 0x3f	; 63
    2fce:	f8 94       	cli
    2fd0:	de bf       	out	0x3e, r29	; 62
    2fd2:	0f be       	out	0x3f, r0	; 63
    2fd4:	cd bf       	out	0x3d, r28	; 61
    2fd6:	cf 91       	pop	r28
    2fd8:	df 91       	pop	r29
    2fda:	1f 91       	pop	r17
    2fdc:	0f 91       	pop	r16
    2fde:	ff 90       	pop	r15
    2fe0:	ef 90       	pop	r14
    2fe2:	df 90       	pop	r13
    2fe4:	cf 90       	pop	r12
    2fe6:	bf 90       	pop	r11
    2fe8:	af 90       	pop	r10
    2fea:	08 95       	ret

00002fec <retrieve_threshold>:
void retrieve_threshold(void)
{
	unsigned char eeprom_addr=0x0000;
	for(int i=0;i<sensor_num;i++)
	{
		threshold[i]=eeprom_read_byte(eeprom_addr);
    2fec:	80 e0       	ldi	r24, 0x00	; 0
    2fee:	90 e0       	ldi	r25, 0x00	; 0
    2ff0:	0e 94 18 1a 	call	0x3430	; 0x3430 <__eerd_byte_m16>
    2ff4:	80 93 87 01 	sts	0x0187, r24
    2ff8:	81 e0       	ldi	r24, 0x01	; 1
    2ffa:	90 e0       	ldi	r25, 0x00	; 0
    2ffc:	0e 94 18 1a 	call	0x3430	; 0x3430 <__eerd_byte_m16>
    3000:	80 93 88 01 	sts	0x0188, r24
    3004:	82 e0       	ldi	r24, 0x02	; 2
    3006:	90 e0       	ldi	r25, 0x00	; 0
    3008:	0e 94 18 1a 	call	0x3430	; 0x3430 <__eerd_byte_m16>
    300c:	80 93 89 01 	sts	0x0189, r24
    3010:	83 e0       	ldi	r24, 0x03	; 3
    3012:	90 e0       	ldi	r25, 0x00	; 0
    3014:	0e 94 18 1a 	call	0x3430	; 0x3430 <__eerd_byte_m16>
    3018:	80 93 8a 01 	sts	0x018A, r24
		eeprom_addr++;
	}
}
    301c:	08 95       	ret

0000301e <set_threshold>:
		
}

//SET THRESHOLD VALUE
void set_threshold(void)
{
    301e:	cf 93       	push	r28
    3020:	df 93       	push	r29
    3022:	40 e0       	ldi	r20, 0x00	; 0
    3024:	50 e0       	ldi	r21, 0x00	; 0
	
	
	 for(i=0;i<sensor_num;i++)
	 {
	 
		 diff=abs(max[i]-min[i]);	
    3026:	fa 01       	movw	r30, r20
    3028:	e9 56       	subi	r30, 0x69	; 105
    302a:	fe 4f       	sbci	r31, 0xFE	; 254
    302c:	90 81       	ld	r25, Z
		 threshold[i]=max[i]+(diff>>1);
    302e:	da 01       	movw	r26, r20
    3030:	a9 57       	subi	r26, 0x79	; 121
    3032:	be 4f       	sbci	r27, 0xFE	; 254
    3034:	29 2f       	mov	r18, r25
    3036:	30 e0       	ldi	r19, 0x00	; 0
    3038:	fa 01       	movw	r30, r20
    303a:	e5 56       	subi	r30, 0x65	; 101
    303c:	fe 4f       	sbci	r31, 0xFE	; 254
    303e:	80 81       	ld	r24, Z
    3040:	28 1b       	sub	r18, r24
    3042:	31 09       	sbc	r19, r1
    3044:	37 ff       	sbrs	r19, 7
    3046:	03 c0       	rjmp	.+6      	; 0x304e <set_threshold+0x30>
    3048:	30 95       	com	r19
    304a:	21 95       	neg	r18
    304c:	3f 4f       	sbci	r19, 0xFF	; 255
    304e:	82 2f       	mov	r24, r18
    3050:	86 95       	lsr	r24
    3052:	89 0f       	add	r24, r25
    3054:	8c 93       	st	X, r24
    3056:	4f 5f       	subi	r20, 0xFF	; 255
    3058:	5f 4f       	sbci	r21, 0xFF	; 255

	unsigned char i,eeprom_addr=0x0000;
	char diff;
	
	
	 for(i=0;i<sensor_num;i++)
    305a:	44 30       	cpi	r20, 0x04	; 4
    305c:	51 05       	cpc	r21, r1
    305e:	19 f7       	brne	.-58     	; 0x3026 <set_threshold+0x8>
    3060:	c0 e0       	ldi	r28, 0x00	; 0
    3062:	d0 e0       	ldi	r29, 0x00	; 0
		  
	 }
	 
	 for(int i=0;i<sensor_num;i++)
	{
		eeprom_write_byte(eeprom_addr,threshold[i]);
    3064:	fe 01       	movw	r30, r28
    3066:	e9 57       	subi	r30, 0x79	; 121
    3068:	fe 4f       	sbci	r31, 0xFE	; 254
    306a:	ce 01       	movw	r24, r28
    306c:	60 81       	ld	r22, Z
    306e:	0e 94 20 1a 	call	0x3440	; 0x3440 <__eewr_byte_m16>
		 diff=abs(max[i]-min[i]);	
		 threshold[i]=max[i]+(diff>>1);
		  
	 }
	 
	 for(int i=0;i<sensor_num;i++)
    3072:	21 96       	adiw	r28, 0x01	; 1
    3074:	c4 30       	cpi	r28, 0x04	; 4
    3076:	d1 05       	cpc	r29, r1
    3078:	a9 f7       	brne	.-22     	; 0x3064 <set_threshold+0x46>
	{
		eeprom_write_byte(eeprom_addr,threshold[i]);
		eeprom_addr++;
	}
	 
}
    307a:	df 91       	pop	r29
    307c:	cf 91       	pop	r28
    307e:	08 95       	ret

00003080 <__cmpsf2>:
    3080:	d4 d0       	rcall	.+424    	; 0x322a <__fp_cmp>
    3082:	08 f4       	brcc	.+2      	; 0x3086 <__cmpsf2+0x6>
    3084:	81 e0       	ldi	r24, 0x01	; 1
    3086:	08 95       	ret

00003088 <__divsf3>:
    3088:	0c d0       	rcall	.+24     	; 0x30a2 <__divsf3x>
    308a:	0a c1       	rjmp	.+532    	; 0x32a0 <__fp_round>
    308c:	02 d1       	rcall	.+516    	; 0x3292 <__fp_pscB>
    308e:	40 f0       	brcs	.+16     	; 0x30a0 <__divsf3+0x18>
    3090:	f9 d0       	rcall	.+498    	; 0x3284 <__fp_pscA>
    3092:	30 f0       	brcs	.+12     	; 0x30a0 <__divsf3+0x18>
    3094:	21 f4       	brne	.+8      	; 0x309e <__divsf3+0x16>
    3096:	5f 3f       	cpi	r21, 0xFF	; 255
    3098:	19 f0       	breq	.+6      	; 0x30a0 <__divsf3+0x18>
    309a:	eb c0       	rjmp	.+470    	; 0x3272 <__fp_inf>
    309c:	51 11       	cpse	r21, r1
    309e:	34 c1       	rjmp	.+616    	; 0x3308 <__fp_szero>
    30a0:	ee c0       	rjmp	.+476    	; 0x327e <__fp_nan>

000030a2 <__divsf3x>:
    30a2:	0f d1       	rcall	.+542    	; 0x32c2 <__fp_split3>
    30a4:	98 f3       	brcs	.-26     	; 0x308c <__divsf3+0x4>

000030a6 <__divsf3_pse>:
    30a6:	99 23       	and	r25, r25
    30a8:	c9 f3       	breq	.-14     	; 0x309c <__divsf3+0x14>
    30aa:	55 23       	and	r21, r21
    30ac:	b1 f3       	breq	.-20     	; 0x309a <__divsf3+0x12>
    30ae:	95 1b       	sub	r25, r21
    30b0:	55 0b       	sbc	r21, r21
    30b2:	bb 27       	eor	r27, r27
    30b4:	aa 27       	eor	r26, r26
    30b6:	62 17       	cp	r22, r18
    30b8:	73 07       	cpc	r23, r19
    30ba:	84 07       	cpc	r24, r20
    30bc:	38 f0       	brcs	.+14     	; 0x30cc <__divsf3_pse+0x26>
    30be:	9f 5f       	subi	r25, 0xFF	; 255
    30c0:	5f 4f       	sbci	r21, 0xFF	; 255
    30c2:	22 0f       	add	r18, r18
    30c4:	33 1f       	adc	r19, r19
    30c6:	44 1f       	adc	r20, r20
    30c8:	aa 1f       	adc	r26, r26
    30ca:	a9 f3       	breq	.-22     	; 0x30b6 <__divsf3_pse+0x10>
    30cc:	33 d0       	rcall	.+102    	; 0x3134 <__divsf3_pse+0x8e>
    30ce:	0e 2e       	mov	r0, r30
    30d0:	3a f0       	brmi	.+14     	; 0x30e0 <__divsf3_pse+0x3a>
    30d2:	e0 e8       	ldi	r30, 0x80	; 128
    30d4:	30 d0       	rcall	.+96     	; 0x3136 <__divsf3_pse+0x90>
    30d6:	91 50       	subi	r25, 0x01	; 1
    30d8:	50 40       	sbci	r21, 0x00	; 0
    30da:	e6 95       	lsr	r30
    30dc:	00 1c       	adc	r0, r0
    30de:	ca f7       	brpl	.-14     	; 0x30d2 <__divsf3_pse+0x2c>
    30e0:	29 d0       	rcall	.+82     	; 0x3134 <__divsf3_pse+0x8e>
    30e2:	fe 2f       	mov	r31, r30
    30e4:	27 d0       	rcall	.+78     	; 0x3134 <__divsf3_pse+0x8e>
    30e6:	66 0f       	add	r22, r22
    30e8:	77 1f       	adc	r23, r23
    30ea:	88 1f       	adc	r24, r24
    30ec:	bb 1f       	adc	r27, r27
    30ee:	26 17       	cp	r18, r22
    30f0:	37 07       	cpc	r19, r23
    30f2:	48 07       	cpc	r20, r24
    30f4:	ab 07       	cpc	r26, r27
    30f6:	b0 e8       	ldi	r27, 0x80	; 128
    30f8:	09 f0       	breq	.+2      	; 0x30fc <__divsf3_pse+0x56>
    30fa:	bb 0b       	sbc	r27, r27
    30fc:	80 2d       	mov	r24, r0
    30fe:	bf 01       	movw	r22, r30
    3100:	ff 27       	eor	r31, r31
    3102:	93 58       	subi	r25, 0x83	; 131
    3104:	5f 4f       	sbci	r21, 0xFF	; 255
    3106:	2a f0       	brmi	.+10     	; 0x3112 <__divsf3_pse+0x6c>
    3108:	9e 3f       	cpi	r25, 0xFE	; 254
    310a:	51 05       	cpc	r21, r1
    310c:	68 f0       	brcs	.+26     	; 0x3128 <__divsf3_pse+0x82>
    310e:	b1 c0       	rjmp	.+354    	; 0x3272 <__fp_inf>
    3110:	fb c0       	rjmp	.+502    	; 0x3308 <__fp_szero>
    3112:	5f 3f       	cpi	r21, 0xFF	; 255
    3114:	ec f3       	brlt	.-6      	; 0x3110 <__divsf3_pse+0x6a>
    3116:	98 3e       	cpi	r25, 0xE8	; 232
    3118:	dc f3       	brlt	.-10     	; 0x3110 <__divsf3_pse+0x6a>
    311a:	86 95       	lsr	r24
    311c:	77 95       	ror	r23
    311e:	67 95       	ror	r22
    3120:	b7 95       	ror	r27
    3122:	f7 95       	ror	r31
    3124:	9f 5f       	subi	r25, 0xFF	; 255
    3126:	c9 f7       	brne	.-14     	; 0x311a <__divsf3_pse+0x74>
    3128:	88 0f       	add	r24, r24
    312a:	91 1d       	adc	r25, r1
    312c:	96 95       	lsr	r25
    312e:	87 95       	ror	r24
    3130:	97 f9       	bld	r25, 7
    3132:	08 95       	ret
    3134:	e1 e0       	ldi	r30, 0x01	; 1
    3136:	66 0f       	add	r22, r22
    3138:	77 1f       	adc	r23, r23
    313a:	88 1f       	adc	r24, r24
    313c:	bb 1f       	adc	r27, r27
    313e:	62 17       	cp	r22, r18
    3140:	73 07       	cpc	r23, r19
    3142:	84 07       	cpc	r24, r20
    3144:	ba 07       	cpc	r27, r26
    3146:	20 f0       	brcs	.+8      	; 0x3150 <__divsf3_pse+0xaa>
    3148:	62 1b       	sub	r22, r18
    314a:	73 0b       	sbc	r23, r19
    314c:	84 0b       	sbc	r24, r20
    314e:	ba 0b       	sbc	r27, r26
    3150:	ee 1f       	adc	r30, r30
    3152:	88 f7       	brcc	.-30     	; 0x3136 <__divsf3_pse+0x90>
    3154:	e0 95       	com	r30
    3156:	08 95       	ret

00003158 <__fixunssfsi>:
    3158:	bc d0       	rcall	.+376    	; 0x32d2 <__fp_splitA>
    315a:	88 f0       	brcs	.+34     	; 0x317e <__fixunssfsi+0x26>
    315c:	9f 57       	subi	r25, 0x7F	; 127
    315e:	90 f0       	brcs	.+36     	; 0x3184 <__fixunssfsi+0x2c>
    3160:	b9 2f       	mov	r27, r25
    3162:	99 27       	eor	r25, r25
    3164:	b7 51       	subi	r27, 0x17	; 23
    3166:	a0 f0       	brcs	.+40     	; 0x3190 <__fixunssfsi+0x38>
    3168:	d1 f0       	breq	.+52     	; 0x319e <__fixunssfsi+0x46>
    316a:	66 0f       	add	r22, r22
    316c:	77 1f       	adc	r23, r23
    316e:	88 1f       	adc	r24, r24
    3170:	99 1f       	adc	r25, r25
    3172:	1a f0       	brmi	.+6      	; 0x317a <__fixunssfsi+0x22>
    3174:	ba 95       	dec	r27
    3176:	c9 f7       	brne	.-14     	; 0x316a <__fixunssfsi+0x12>
    3178:	12 c0       	rjmp	.+36     	; 0x319e <__fixunssfsi+0x46>
    317a:	b1 30       	cpi	r27, 0x01	; 1
    317c:	81 f0       	breq	.+32     	; 0x319e <__fixunssfsi+0x46>
    317e:	c3 d0       	rcall	.+390    	; 0x3306 <__fp_zero>
    3180:	b1 e0       	ldi	r27, 0x01	; 1
    3182:	08 95       	ret
    3184:	c0 c0       	rjmp	.+384    	; 0x3306 <__fp_zero>
    3186:	67 2f       	mov	r22, r23
    3188:	78 2f       	mov	r23, r24
    318a:	88 27       	eor	r24, r24
    318c:	b8 5f       	subi	r27, 0xF8	; 248
    318e:	39 f0       	breq	.+14     	; 0x319e <__fixunssfsi+0x46>
    3190:	b9 3f       	cpi	r27, 0xF9	; 249
    3192:	cc f3       	brlt	.-14     	; 0x3186 <__fixunssfsi+0x2e>
    3194:	86 95       	lsr	r24
    3196:	77 95       	ror	r23
    3198:	67 95       	ror	r22
    319a:	b3 95       	inc	r27
    319c:	d9 f7       	brne	.-10     	; 0x3194 <__fixunssfsi+0x3c>
    319e:	3e f4       	brtc	.+14     	; 0x31ae <__fixunssfsi+0x56>
    31a0:	90 95       	com	r25
    31a2:	80 95       	com	r24
    31a4:	70 95       	com	r23
    31a6:	61 95       	neg	r22
    31a8:	7f 4f       	sbci	r23, 0xFF	; 255
    31aa:	8f 4f       	sbci	r24, 0xFF	; 255
    31ac:	9f 4f       	sbci	r25, 0xFF	; 255
    31ae:	08 95       	ret

000031b0 <__floatunsisf>:
    31b0:	e8 94       	clt
    31b2:	09 c0       	rjmp	.+18     	; 0x31c6 <__floatsisf+0x12>

000031b4 <__floatsisf>:
    31b4:	97 fb       	bst	r25, 7
    31b6:	3e f4       	brtc	.+14     	; 0x31c6 <__floatsisf+0x12>
    31b8:	90 95       	com	r25
    31ba:	80 95       	com	r24
    31bc:	70 95       	com	r23
    31be:	61 95       	neg	r22
    31c0:	7f 4f       	sbci	r23, 0xFF	; 255
    31c2:	8f 4f       	sbci	r24, 0xFF	; 255
    31c4:	9f 4f       	sbci	r25, 0xFF	; 255
    31c6:	99 23       	and	r25, r25
    31c8:	a9 f0       	breq	.+42     	; 0x31f4 <__floatsisf+0x40>
    31ca:	f9 2f       	mov	r31, r25
    31cc:	96 e9       	ldi	r25, 0x96	; 150
    31ce:	bb 27       	eor	r27, r27
    31d0:	93 95       	inc	r25
    31d2:	f6 95       	lsr	r31
    31d4:	87 95       	ror	r24
    31d6:	77 95       	ror	r23
    31d8:	67 95       	ror	r22
    31da:	b7 95       	ror	r27
    31dc:	f1 11       	cpse	r31, r1
    31de:	f8 cf       	rjmp	.-16     	; 0x31d0 <__floatsisf+0x1c>
    31e0:	fa f4       	brpl	.+62     	; 0x3220 <__floatsisf+0x6c>
    31e2:	bb 0f       	add	r27, r27
    31e4:	11 f4       	brne	.+4      	; 0x31ea <__floatsisf+0x36>
    31e6:	60 ff       	sbrs	r22, 0
    31e8:	1b c0       	rjmp	.+54     	; 0x3220 <__floatsisf+0x6c>
    31ea:	6f 5f       	subi	r22, 0xFF	; 255
    31ec:	7f 4f       	sbci	r23, 0xFF	; 255
    31ee:	8f 4f       	sbci	r24, 0xFF	; 255
    31f0:	9f 4f       	sbci	r25, 0xFF	; 255
    31f2:	16 c0       	rjmp	.+44     	; 0x3220 <__floatsisf+0x6c>
    31f4:	88 23       	and	r24, r24
    31f6:	11 f0       	breq	.+4      	; 0x31fc <__floatsisf+0x48>
    31f8:	96 e9       	ldi	r25, 0x96	; 150
    31fa:	11 c0       	rjmp	.+34     	; 0x321e <__floatsisf+0x6a>
    31fc:	77 23       	and	r23, r23
    31fe:	21 f0       	breq	.+8      	; 0x3208 <__floatsisf+0x54>
    3200:	9e e8       	ldi	r25, 0x8E	; 142
    3202:	87 2f       	mov	r24, r23
    3204:	76 2f       	mov	r23, r22
    3206:	05 c0       	rjmp	.+10     	; 0x3212 <__floatsisf+0x5e>
    3208:	66 23       	and	r22, r22
    320a:	71 f0       	breq	.+28     	; 0x3228 <__floatsisf+0x74>
    320c:	96 e8       	ldi	r25, 0x86	; 134
    320e:	86 2f       	mov	r24, r22
    3210:	70 e0       	ldi	r23, 0x00	; 0
    3212:	60 e0       	ldi	r22, 0x00	; 0
    3214:	2a f0       	brmi	.+10     	; 0x3220 <__floatsisf+0x6c>
    3216:	9a 95       	dec	r25
    3218:	66 0f       	add	r22, r22
    321a:	77 1f       	adc	r23, r23
    321c:	88 1f       	adc	r24, r24
    321e:	da f7       	brpl	.-10     	; 0x3216 <__floatsisf+0x62>
    3220:	88 0f       	add	r24, r24
    3222:	96 95       	lsr	r25
    3224:	87 95       	ror	r24
    3226:	97 f9       	bld	r25, 7
    3228:	08 95       	ret

0000322a <__fp_cmp>:
    322a:	99 0f       	add	r25, r25
    322c:	00 08       	sbc	r0, r0
    322e:	55 0f       	add	r21, r21
    3230:	aa 0b       	sbc	r26, r26
    3232:	e0 e8       	ldi	r30, 0x80	; 128
    3234:	fe ef       	ldi	r31, 0xFE	; 254
    3236:	16 16       	cp	r1, r22
    3238:	17 06       	cpc	r1, r23
    323a:	e8 07       	cpc	r30, r24
    323c:	f9 07       	cpc	r31, r25
    323e:	c0 f0       	brcs	.+48     	; 0x3270 <__fp_cmp+0x46>
    3240:	12 16       	cp	r1, r18
    3242:	13 06       	cpc	r1, r19
    3244:	e4 07       	cpc	r30, r20
    3246:	f5 07       	cpc	r31, r21
    3248:	98 f0       	brcs	.+38     	; 0x3270 <__fp_cmp+0x46>
    324a:	62 1b       	sub	r22, r18
    324c:	73 0b       	sbc	r23, r19
    324e:	84 0b       	sbc	r24, r20
    3250:	95 0b       	sbc	r25, r21
    3252:	39 f4       	brne	.+14     	; 0x3262 <__fp_cmp+0x38>
    3254:	0a 26       	eor	r0, r26
    3256:	61 f0       	breq	.+24     	; 0x3270 <__fp_cmp+0x46>
    3258:	23 2b       	or	r18, r19
    325a:	24 2b       	or	r18, r20
    325c:	25 2b       	or	r18, r21
    325e:	21 f4       	brne	.+8      	; 0x3268 <__fp_cmp+0x3e>
    3260:	08 95       	ret
    3262:	0a 26       	eor	r0, r26
    3264:	09 f4       	brne	.+2      	; 0x3268 <__fp_cmp+0x3e>
    3266:	a1 40       	sbci	r26, 0x01	; 1
    3268:	a6 95       	lsr	r26
    326a:	8f ef       	ldi	r24, 0xFF	; 255
    326c:	81 1d       	adc	r24, r1
    326e:	81 1d       	adc	r24, r1
    3270:	08 95       	ret

00003272 <__fp_inf>:
    3272:	97 f9       	bld	r25, 7
    3274:	9f 67       	ori	r25, 0x7F	; 127
    3276:	80 e8       	ldi	r24, 0x80	; 128
    3278:	70 e0       	ldi	r23, 0x00	; 0
    327a:	60 e0       	ldi	r22, 0x00	; 0
    327c:	08 95       	ret

0000327e <__fp_nan>:
    327e:	9f ef       	ldi	r25, 0xFF	; 255
    3280:	80 ec       	ldi	r24, 0xC0	; 192
    3282:	08 95       	ret

00003284 <__fp_pscA>:
    3284:	00 24       	eor	r0, r0
    3286:	0a 94       	dec	r0
    3288:	16 16       	cp	r1, r22
    328a:	17 06       	cpc	r1, r23
    328c:	18 06       	cpc	r1, r24
    328e:	09 06       	cpc	r0, r25
    3290:	08 95       	ret

00003292 <__fp_pscB>:
    3292:	00 24       	eor	r0, r0
    3294:	0a 94       	dec	r0
    3296:	12 16       	cp	r1, r18
    3298:	13 06       	cpc	r1, r19
    329a:	14 06       	cpc	r1, r20
    329c:	05 06       	cpc	r0, r21
    329e:	08 95       	ret

000032a0 <__fp_round>:
    32a0:	09 2e       	mov	r0, r25
    32a2:	03 94       	inc	r0
    32a4:	00 0c       	add	r0, r0
    32a6:	11 f4       	brne	.+4      	; 0x32ac <__fp_round+0xc>
    32a8:	88 23       	and	r24, r24
    32aa:	52 f0       	brmi	.+20     	; 0x32c0 <__fp_round+0x20>
    32ac:	bb 0f       	add	r27, r27
    32ae:	40 f4       	brcc	.+16     	; 0x32c0 <__fp_round+0x20>
    32b0:	bf 2b       	or	r27, r31
    32b2:	11 f4       	brne	.+4      	; 0x32b8 <__fp_round+0x18>
    32b4:	60 ff       	sbrs	r22, 0
    32b6:	04 c0       	rjmp	.+8      	; 0x32c0 <__fp_round+0x20>
    32b8:	6f 5f       	subi	r22, 0xFF	; 255
    32ba:	7f 4f       	sbci	r23, 0xFF	; 255
    32bc:	8f 4f       	sbci	r24, 0xFF	; 255
    32be:	9f 4f       	sbci	r25, 0xFF	; 255
    32c0:	08 95       	ret

000032c2 <__fp_split3>:
    32c2:	57 fd       	sbrc	r21, 7
    32c4:	90 58       	subi	r25, 0x80	; 128
    32c6:	44 0f       	add	r20, r20
    32c8:	55 1f       	adc	r21, r21
    32ca:	59 f0       	breq	.+22     	; 0x32e2 <__fp_splitA+0x10>
    32cc:	5f 3f       	cpi	r21, 0xFF	; 255
    32ce:	71 f0       	breq	.+28     	; 0x32ec <__fp_splitA+0x1a>
    32d0:	47 95       	ror	r20

000032d2 <__fp_splitA>:
    32d2:	88 0f       	add	r24, r24
    32d4:	97 fb       	bst	r25, 7
    32d6:	99 1f       	adc	r25, r25
    32d8:	61 f0       	breq	.+24     	; 0x32f2 <__fp_splitA+0x20>
    32da:	9f 3f       	cpi	r25, 0xFF	; 255
    32dc:	79 f0       	breq	.+30     	; 0x32fc <__fp_splitA+0x2a>
    32de:	87 95       	ror	r24
    32e0:	08 95       	ret
    32e2:	12 16       	cp	r1, r18
    32e4:	13 06       	cpc	r1, r19
    32e6:	14 06       	cpc	r1, r20
    32e8:	55 1f       	adc	r21, r21
    32ea:	f2 cf       	rjmp	.-28     	; 0x32d0 <__fp_split3+0xe>
    32ec:	46 95       	lsr	r20
    32ee:	f1 df       	rcall	.-30     	; 0x32d2 <__fp_splitA>
    32f0:	08 c0       	rjmp	.+16     	; 0x3302 <__fp_splitA+0x30>
    32f2:	16 16       	cp	r1, r22
    32f4:	17 06       	cpc	r1, r23
    32f6:	18 06       	cpc	r1, r24
    32f8:	99 1f       	adc	r25, r25
    32fa:	f1 cf       	rjmp	.-30     	; 0x32de <__fp_splitA+0xc>
    32fc:	86 95       	lsr	r24
    32fe:	71 05       	cpc	r23, r1
    3300:	61 05       	cpc	r22, r1
    3302:	08 94       	sec
    3304:	08 95       	ret

00003306 <__fp_zero>:
    3306:	e8 94       	clt

00003308 <__fp_szero>:
    3308:	bb 27       	eor	r27, r27
    330a:	66 27       	eor	r22, r22
    330c:	77 27       	eor	r23, r23
    330e:	cb 01       	movw	r24, r22
    3310:	97 f9       	bld	r25, 7
    3312:	08 95       	ret

00003314 <__gesf2>:
    3314:	8a df       	rcall	.-236    	; 0x322a <__fp_cmp>
    3316:	08 f4       	brcc	.+2      	; 0x331a <__gesf2+0x6>
    3318:	8f ef       	ldi	r24, 0xFF	; 255
    331a:	08 95       	ret

0000331c <__mulsf3>:
    331c:	0b d0       	rcall	.+22     	; 0x3334 <__mulsf3x>
    331e:	c0 cf       	rjmp	.-128    	; 0x32a0 <__fp_round>
    3320:	b1 df       	rcall	.-158    	; 0x3284 <__fp_pscA>
    3322:	28 f0       	brcs	.+10     	; 0x332e <__mulsf3+0x12>
    3324:	b6 df       	rcall	.-148    	; 0x3292 <__fp_pscB>
    3326:	18 f0       	brcs	.+6      	; 0x332e <__mulsf3+0x12>
    3328:	95 23       	and	r25, r21
    332a:	09 f0       	breq	.+2      	; 0x332e <__mulsf3+0x12>
    332c:	a2 cf       	rjmp	.-188    	; 0x3272 <__fp_inf>
    332e:	a7 cf       	rjmp	.-178    	; 0x327e <__fp_nan>
    3330:	11 24       	eor	r1, r1
    3332:	ea cf       	rjmp	.-44     	; 0x3308 <__fp_szero>

00003334 <__mulsf3x>:
    3334:	c6 df       	rcall	.-116    	; 0x32c2 <__fp_split3>
    3336:	a0 f3       	brcs	.-24     	; 0x3320 <__mulsf3+0x4>

00003338 <__mulsf3_pse>:
    3338:	95 9f       	mul	r25, r21
    333a:	d1 f3       	breq	.-12     	; 0x3330 <__mulsf3+0x14>
    333c:	95 0f       	add	r25, r21
    333e:	50 e0       	ldi	r21, 0x00	; 0
    3340:	55 1f       	adc	r21, r21
    3342:	62 9f       	mul	r22, r18
    3344:	f0 01       	movw	r30, r0
    3346:	72 9f       	mul	r23, r18
    3348:	bb 27       	eor	r27, r27
    334a:	f0 0d       	add	r31, r0
    334c:	b1 1d       	adc	r27, r1
    334e:	63 9f       	mul	r22, r19
    3350:	aa 27       	eor	r26, r26
    3352:	f0 0d       	add	r31, r0
    3354:	b1 1d       	adc	r27, r1
    3356:	aa 1f       	adc	r26, r26
    3358:	64 9f       	mul	r22, r20
    335a:	66 27       	eor	r22, r22
    335c:	b0 0d       	add	r27, r0
    335e:	a1 1d       	adc	r26, r1
    3360:	66 1f       	adc	r22, r22
    3362:	82 9f       	mul	r24, r18
    3364:	22 27       	eor	r18, r18
    3366:	b0 0d       	add	r27, r0
    3368:	a1 1d       	adc	r26, r1
    336a:	62 1f       	adc	r22, r18
    336c:	73 9f       	mul	r23, r19
    336e:	b0 0d       	add	r27, r0
    3370:	a1 1d       	adc	r26, r1
    3372:	62 1f       	adc	r22, r18
    3374:	83 9f       	mul	r24, r19
    3376:	a0 0d       	add	r26, r0
    3378:	61 1d       	adc	r22, r1
    337a:	22 1f       	adc	r18, r18
    337c:	74 9f       	mul	r23, r20
    337e:	33 27       	eor	r19, r19
    3380:	a0 0d       	add	r26, r0
    3382:	61 1d       	adc	r22, r1
    3384:	23 1f       	adc	r18, r19
    3386:	84 9f       	mul	r24, r20
    3388:	60 0d       	add	r22, r0
    338a:	21 1d       	adc	r18, r1
    338c:	82 2f       	mov	r24, r18
    338e:	76 2f       	mov	r23, r22
    3390:	6a 2f       	mov	r22, r26
    3392:	11 24       	eor	r1, r1
    3394:	9f 57       	subi	r25, 0x7F	; 127
    3396:	50 40       	sbci	r21, 0x00	; 0
    3398:	8a f0       	brmi	.+34     	; 0x33bc <__mulsf3_pse+0x84>
    339a:	e1 f0       	breq	.+56     	; 0x33d4 <__mulsf3_pse+0x9c>
    339c:	88 23       	and	r24, r24
    339e:	4a f0       	brmi	.+18     	; 0x33b2 <__mulsf3_pse+0x7a>
    33a0:	ee 0f       	add	r30, r30
    33a2:	ff 1f       	adc	r31, r31
    33a4:	bb 1f       	adc	r27, r27
    33a6:	66 1f       	adc	r22, r22
    33a8:	77 1f       	adc	r23, r23
    33aa:	88 1f       	adc	r24, r24
    33ac:	91 50       	subi	r25, 0x01	; 1
    33ae:	50 40       	sbci	r21, 0x00	; 0
    33b0:	a9 f7       	brne	.-22     	; 0x339c <__mulsf3_pse+0x64>
    33b2:	9e 3f       	cpi	r25, 0xFE	; 254
    33b4:	51 05       	cpc	r21, r1
    33b6:	70 f0       	brcs	.+28     	; 0x33d4 <__mulsf3_pse+0x9c>
    33b8:	5c cf       	rjmp	.-328    	; 0x3272 <__fp_inf>
    33ba:	a6 cf       	rjmp	.-180    	; 0x3308 <__fp_szero>
    33bc:	5f 3f       	cpi	r21, 0xFF	; 255
    33be:	ec f3       	brlt	.-6      	; 0x33ba <__mulsf3_pse+0x82>
    33c0:	98 3e       	cpi	r25, 0xE8	; 232
    33c2:	dc f3       	brlt	.-10     	; 0x33ba <__mulsf3_pse+0x82>
    33c4:	86 95       	lsr	r24
    33c6:	77 95       	ror	r23
    33c8:	67 95       	ror	r22
    33ca:	b7 95       	ror	r27
    33cc:	f7 95       	ror	r31
    33ce:	e7 95       	ror	r30
    33d0:	9f 5f       	subi	r25, 0xFF	; 255
    33d2:	c1 f7       	brne	.-16     	; 0x33c4 <__mulsf3_pse+0x8c>
    33d4:	fe 2b       	or	r31, r30
    33d6:	88 0f       	add	r24, r24
    33d8:	91 1d       	adc	r25, r1
    33da:	96 95       	lsr	r25
    33dc:	87 95       	ror	r24
    33de:	97 f9       	bld	r25, 7
    33e0:	08 95       	ret

000033e2 <__divmodhi4>:
    33e2:	97 fb       	bst	r25, 7
    33e4:	09 2e       	mov	r0, r25
    33e6:	07 26       	eor	r0, r23
    33e8:	0a d0       	rcall	.+20     	; 0x33fe <__divmodhi4_neg1>
    33ea:	77 fd       	sbrc	r23, 7
    33ec:	04 d0       	rcall	.+8      	; 0x33f6 <__divmodhi4_neg2>
    33ee:	0c d0       	rcall	.+24     	; 0x3408 <__udivmodhi4>
    33f0:	06 d0       	rcall	.+12     	; 0x33fe <__divmodhi4_neg1>
    33f2:	00 20       	and	r0, r0
    33f4:	1a f4       	brpl	.+6      	; 0x33fc <__divmodhi4_exit>

000033f6 <__divmodhi4_neg2>:
    33f6:	70 95       	com	r23
    33f8:	61 95       	neg	r22
    33fa:	7f 4f       	sbci	r23, 0xFF	; 255

000033fc <__divmodhi4_exit>:
    33fc:	08 95       	ret

000033fe <__divmodhi4_neg1>:
    33fe:	f6 f7       	brtc	.-4      	; 0x33fc <__divmodhi4_exit>
    3400:	90 95       	com	r25
    3402:	81 95       	neg	r24
    3404:	9f 4f       	sbci	r25, 0xFF	; 255
    3406:	08 95       	ret

00003408 <__udivmodhi4>:
    3408:	aa 1b       	sub	r26, r26
    340a:	bb 1b       	sub	r27, r27
    340c:	51 e1       	ldi	r21, 0x11	; 17
    340e:	07 c0       	rjmp	.+14     	; 0x341e <__udivmodhi4_ep>

00003410 <__udivmodhi4_loop>:
    3410:	aa 1f       	adc	r26, r26
    3412:	bb 1f       	adc	r27, r27
    3414:	a6 17       	cp	r26, r22
    3416:	b7 07       	cpc	r27, r23
    3418:	10 f0       	brcs	.+4      	; 0x341e <__udivmodhi4_ep>
    341a:	a6 1b       	sub	r26, r22
    341c:	b7 0b       	sbc	r27, r23

0000341e <__udivmodhi4_ep>:
    341e:	88 1f       	adc	r24, r24
    3420:	99 1f       	adc	r25, r25
    3422:	5a 95       	dec	r21
    3424:	a9 f7       	brne	.-22     	; 0x3410 <__udivmodhi4_loop>
    3426:	80 95       	com	r24
    3428:	90 95       	com	r25
    342a:	bc 01       	movw	r22, r24
    342c:	cd 01       	movw	r24, r26
    342e:	08 95       	ret

00003430 <__eerd_byte_m16>:
    3430:	e1 99       	sbic	0x1c, 1	; 28
    3432:	fe cf       	rjmp	.-4      	; 0x3430 <__eerd_byte_m16>
    3434:	9f bb       	out	0x1f, r25	; 31
    3436:	8e bb       	out	0x1e, r24	; 30
    3438:	e0 9a       	sbi	0x1c, 0	; 28
    343a:	99 27       	eor	r25, r25
    343c:	8d b3       	in	r24, 0x1d	; 29
    343e:	08 95       	ret

00003440 <__eewr_byte_m16>:
    3440:	26 2f       	mov	r18, r22

00003442 <__eewr_r18_m16>:
    3442:	e1 99       	sbic	0x1c, 1	; 28
    3444:	fe cf       	rjmp	.-4      	; 0x3442 <__eewr_r18_m16>
    3446:	9f bb       	out	0x1f, r25	; 31
    3448:	8e bb       	out	0x1e, r24	; 30
    344a:	2d bb       	out	0x1d, r18	; 29
    344c:	0f b6       	in	r0, 0x3f	; 63
    344e:	f8 94       	cli
    3450:	e2 9a       	sbi	0x1c, 2	; 28
    3452:	e1 9a       	sbi	0x1c, 1	; 28
    3454:	0f be       	out	0x3f, r0	; 63
    3456:	01 96       	adiw	r24, 0x01	; 1
    3458:	08 95       	ret

0000345a <_exit>:
    345a:	f8 94       	cli

0000345c <__stop_program>:
    345c:	ff cf       	rjmp	.-2      	; 0x345c <__stop_program>
